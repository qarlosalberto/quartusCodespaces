// qsys_top_altera_mm_interconnect_1920_fimi64y.v

// This file was auto-generated from altera_mm_interconnect_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 23.4 66

`timescale 1 ps / 1 ps
module qsys_top_altera_mm_interconnect_1920_fimi64y (
		output wire [0:0]  jtag_uart_0_avalon_jtag_slave_address,                                      //                                        jtag_uart_0_avalon_jtag_slave.address
		output wire        jtag_uart_0_avalon_jtag_slave_write,                                        //                                                                     .write
		output wire        jtag_uart_0_avalon_jtag_slave_read,                                         //                                                                     .read
		input  wire [31:0] jtag_uart_0_avalon_jtag_slave_readdata,                                     //                                                                     .readdata
		output wire [31:0] jtag_uart_0_avalon_jtag_slave_writedata,                                    //                                                                     .writedata
		input  wire        jtag_uart_0_avalon_jtag_slave_waitrequest,                                  //                                                                     .waitrequest
		output wire        jtag_uart_0_avalon_jtag_slave_chipselect,                                   //                                                                     .chipselect
		output wire [1:0]  intel_onchip_memory_0_axi_s1_awid,                                          //                                         intel_onchip_memory_0_axi_s1.awid
		output wire [19:0] intel_onchip_memory_0_axi_s1_awaddr,                                        //                                                                     .awaddr
		output wire [7:0]  intel_onchip_memory_0_axi_s1_awlen,                                         //                                                                     .awlen
		output wire [2:0]  intel_onchip_memory_0_axi_s1_awsize,                                        //                                                                     .awsize
		output wire [1:0]  intel_onchip_memory_0_axi_s1_awburst,                                       //                                                                     .awburst
		output wire        intel_onchip_memory_0_axi_s1_awvalid,                                       //                                                                     .awvalid
		input  wire        intel_onchip_memory_0_axi_s1_awready,                                       //                                                                     .awready
		output wire [31:0] intel_onchip_memory_0_axi_s1_wdata,                                         //                                                                     .wdata
		output wire [3:0]  intel_onchip_memory_0_axi_s1_wstrb,                                         //                                                                     .wstrb
		output wire        intel_onchip_memory_0_axi_s1_wlast,                                         //                                                                     .wlast
		output wire        intel_onchip_memory_0_axi_s1_wvalid,                                        //                                                                     .wvalid
		input  wire        intel_onchip_memory_0_axi_s1_wready,                                        //                                                                     .wready
		input  wire [1:0]  intel_onchip_memory_0_axi_s1_bid,                                           //                                                                     .bid
		input  wire [1:0]  intel_onchip_memory_0_axi_s1_bresp,                                         //                                                                     .bresp
		input  wire        intel_onchip_memory_0_axi_s1_bvalid,                                        //                                                                     .bvalid
		output wire        intel_onchip_memory_0_axi_s1_bready,                                        //                                                                     .bready
		output wire [1:0]  intel_onchip_memory_0_axi_s1_arid,                                          //                                                                     .arid
		output wire [19:0] intel_onchip_memory_0_axi_s1_araddr,                                        //                                                                     .araddr
		output wire [7:0]  intel_onchip_memory_0_axi_s1_arlen,                                         //                                                                     .arlen
		output wire [2:0]  intel_onchip_memory_0_axi_s1_arsize,                                        //                                                                     .arsize
		output wire [1:0]  intel_onchip_memory_0_axi_s1_arburst,                                       //                                                                     .arburst
		output wire        intel_onchip_memory_0_axi_s1_arvalid,                                       //                                                                     .arvalid
		input  wire        intel_onchip_memory_0_axi_s1_arready,                                       //                                                                     .arready
		input  wire [1:0]  intel_onchip_memory_0_axi_s1_rid,                                           //                                                                     .rid
		input  wire [31:0] intel_onchip_memory_0_axi_s1_rdata,                                         //                                                                     .rdata
		input  wire [1:0]  intel_onchip_memory_0_axi_s1_rresp,                                         //                                                                     .rresp
		input  wire        intel_onchip_memory_0_axi_s1_rlast,                                         //                                                                     .rlast
		input  wire        intel_onchip_memory_0_axi_s1_rvalid,                                        //                                                                     .rvalid
		output wire        intel_onchip_memory_0_axi_s1_rready,                                        //                                                                     .rready
		output wire [0:0]  sysid_qsys_0_control_slave_address,                                         //                                           sysid_qsys_0_control_slave.address
		input  wire [31:0] sysid_qsys_0_control_slave_readdata,                                        //                                                                     .readdata
		output wire [15:0] intel_niosv_m_0_dm_agent_address,                                           //                                             intel_niosv_m_0_dm_agent.address
		output wire        intel_niosv_m_0_dm_agent_write,                                             //                                                                     .write
		output wire        intel_niosv_m_0_dm_agent_read,                                              //                                                                     .read
		input  wire [31:0] intel_niosv_m_0_dm_agent_readdata,                                          //                                                                     .readdata
		output wire [31:0] intel_niosv_m_0_dm_agent_writedata,                                         //                                                                     .writedata
		input  wire        intel_niosv_m_0_dm_agent_readdatavalid,                                     //                                                                     .readdatavalid
		input  wire        intel_niosv_m_0_dm_agent_waitrequest,                                       //                                                                     .waitrequest
		output wire [1:0]  pio_0_s1_address,                                                           //                                                             pio_0_s1.address
		output wire        pio_0_s1_write,                                                             //                                                                     .write
		input  wire [31:0] pio_0_s1_readdata,                                                          //                                                                     .readdata
		output wire [31:0] pio_0_s1_writedata,                                                         //                                                                     .writedata
		output wire        pio_0_s1_chipselect,                                                        //                                                                     .chipselect
		output wire [5:0]  intel_niosv_m_0_timer_sw_agent_address,                                     //                                       intel_niosv_m_0_timer_sw_agent.address
		output wire        intel_niosv_m_0_timer_sw_agent_write,                                       //                                                                     .write
		output wire        intel_niosv_m_0_timer_sw_agent_read,                                        //                                                                     .read
		input  wire [31:0] intel_niosv_m_0_timer_sw_agent_readdata,                                    //                                                                     .readdata
		output wire [31:0] intel_niosv_m_0_timer_sw_agent_writedata,                                   //                                                                     .writedata
		output wire [3:0]  intel_niosv_m_0_timer_sw_agent_byteenable,                                  //                                                                     .byteenable
		input  wire        intel_niosv_m_0_timer_sw_agent_readdatavalid,                               //                                                                     .readdatavalid
		input  wire        intel_niosv_m_0_timer_sw_agent_waitrequest,                                 //                                                                     .waitrequest
		input  wire [31:0] intel_niosv_m_0_data_manager_awaddr,                                        //                                         intel_niosv_m_0_data_manager.awaddr
		input  wire [2:0]  intel_niosv_m_0_data_manager_awprot,                                        //                                                                     .awprot
		input  wire        intel_niosv_m_0_data_manager_awvalid,                                       //                                                                     .awvalid
		output wire        intel_niosv_m_0_data_manager_awready,                                       //                                                                     .awready
		input  wire [31:0] intel_niosv_m_0_data_manager_wdata,                                         //                                                                     .wdata
		input  wire [3:0]  intel_niosv_m_0_data_manager_wstrb,                                         //                                                                     .wstrb
		input  wire        intel_niosv_m_0_data_manager_wvalid,                                        //                                                                     .wvalid
		output wire        intel_niosv_m_0_data_manager_wready,                                        //                                                                     .wready
		output wire [1:0]  intel_niosv_m_0_data_manager_bresp,                                         //                                                                     .bresp
		output wire        intel_niosv_m_0_data_manager_bvalid,                                        //                                                                     .bvalid
		input  wire        intel_niosv_m_0_data_manager_bready,                                        //                                                                     .bready
		input  wire [31:0] intel_niosv_m_0_data_manager_araddr,                                        //                                                                     .araddr
		input  wire [2:0]  intel_niosv_m_0_data_manager_arprot,                                        //                                                                     .arprot
		input  wire        intel_niosv_m_0_data_manager_arvalid,                                       //                                                                     .arvalid
		output wire        intel_niosv_m_0_data_manager_arready,                                       //                                                                     .arready
		output wire [31:0] intel_niosv_m_0_data_manager_rdata,                                         //                                                                     .rdata
		output wire [1:0]  intel_niosv_m_0_data_manager_rresp,                                         //                                                                     .rresp
		output wire        intel_niosv_m_0_data_manager_rvalid,                                        //                                                                     .rvalid
		input  wire        intel_niosv_m_0_data_manager_rready,                                        //                                                                     .rready
		input  wire [31:0] intel_niosv_m_0_instruction_manager_awaddr,                                 //                                  intel_niosv_m_0_instruction_manager.awaddr
		input  wire [2:0]  intel_niosv_m_0_instruction_manager_awprot,                                 //                                                                     .awprot
		input  wire        intel_niosv_m_0_instruction_manager_awvalid,                                //                                                                     .awvalid
		output wire        intel_niosv_m_0_instruction_manager_awready,                                //                                                                     .awready
		input  wire [31:0] intel_niosv_m_0_instruction_manager_wdata,                                  //                                                                     .wdata
		input  wire [3:0]  intel_niosv_m_0_instruction_manager_wstrb,                                  //                                                                     .wstrb
		input  wire        intel_niosv_m_0_instruction_manager_wvalid,                                 //                                                                     .wvalid
		output wire        intel_niosv_m_0_instruction_manager_wready,                                 //                                                                     .wready
		output wire [1:0]  intel_niosv_m_0_instruction_manager_bresp,                                  //                                                                     .bresp
		output wire        intel_niosv_m_0_instruction_manager_bvalid,                                 //                                                                     .bvalid
		input  wire        intel_niosv_m_0_instruction_manager_bready,                                 //                                                                     .bready
		input  wire [31:0] intel_niosv_m_0_instruction_manager_araddr,                                 //                                                                     .araddr
		input  wire [2:0]  intel_niosv_m_0_instruction_manager_arprot,                                 //                                                                     .arprot
		input  wire        intel_niosv_m_0_instruction_manager_arvalid,                                //                                                                     .arvalid
		output wire        intel_niosv_m_0_instruction_manager_arready,                                //                                                                     .arready
		output wire [31:0] intel_niosv_m_0_instruction_manager_rdata,                                  //                                                                     .rdata
		output wire [1:0]  intel_niosv_m_0_instruction_manager_rresp,                                  //                                                                     .rresp
		output wire        intel_niosv_m_0_instruction_manager_rvalid,                                 //                                                                     .rvalid
		input  wire        intel_niosv_m_0_instruction_manager_rready,                                 //                                                                     .rready
		input  wire        intel_niosv_m_0_reset_reset_bridge_in_reset_reset,                          //                          intel_niosv_m_0_reset_reset_bridge_in_reset.reset
		input  wire        jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset, // jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset.reset
		input  wire        iopll_0_outclk0_clk                                                         //                                                      iopll_0_outclk0.clk
	);

	wire          rsp_mux_src_valid;                                                    // rsp_mux:src_valid -> intel_niosv_m_0_data_manager_agent:write_rp_valid
	wire  [141:0] rsp_mux_src_data;                                                     // rsp_mux:src_data -> intel_niosv_m_0_data_manager_agent:write_rp_data
	wire          rsp_mux_src_ready;                                                    // intel_niosv_m_0_data_manager_agent:write_rp_ready -> rsp_mux:src_ready
	wire    [6:0] rsp_mux_src_channel;                                                  // rsp_mux:src_channel -> intel_niosv_m_0_data_manager_agent:write_rp_channel
	wire          rsp_mux_src_startofpacket;                                            // rsp_mux:src_startofpacket -> intel_niosv_m_0_data_manager_agent:write_rp_startofpacket
	wire          rsp_mux_src_endofpacket;                                              // rsp_mux:src_endofpacket -> intel_niosv_m_0_data_manager_agent:write_rp_endofpacket
	wire          rsp_mux_001_src_valid;                                                // rsp_mux_001:src_valid -> intel_niosv_m_0_data_manager_agent:read_rp_valid
	wire  [141:0] rsp_mux_001_src_data;                                                 // rsp_mux_001:src_data -> intel_niosv_m_0_data_manager_agent:read_rp_data
	wire          rsp_mux_001_src_ready;                                                // intel_niosv_m_0_data_manager_agent:read_rp_ready -> rsp_mux_001:src_ready
	wire    [6:0] rsp_mux_001_src_channel;                                              // rsp_mux_001:src_channel -> intel_niosv_m_0_data_manager_agent:read_rp_channel
	wire          rsp_mux_001_src_startofpacket;                                        // rsp_mux_001:src_startofpacket -> intel_niosv_m_0_data_manager_agent:read_rp_startofpacket
	wire          rsp_mux_001_src_endofpacket;                                          // rsp_mux_001:src_endofpacket -> intel_niosv_m_0_data_manager_agent:read_rp_endofpacket
	wire   [31:0] jtag_uart_0_avalon_jtag_slave_agent_m0_readdata;                      // jtag_uart_0_avalon_jtag_slave_translator:uav_readdata -> jtag_uart_0_avalon_jtag_slave_agent:m0_readdata
	wire          jtag_uart_0_avalon_jtag_slave_agent_m0_waitrequest;                   // jtag_uart_0_avalon_jtag_slave_translator:uav_waitrequest -> jtag_uart_0_avalon_jtag_slave_agent:m0_waitrequest
	wire          jtag_uart_0_avalon_jtag_slave_agent_m0_debugaccess;                   // jtag_uart_0_avalon_jtag_slave_agent:m0_debugaccess -> jtag_uart_0_avalon_jtag_slave_translator:uav_debugaccess
	wire   [31:0] jtag_uart_0_avalon_jtag_slave_agent_m0_address;                       // jtag_uart_0_avalon_jtag_slave_agent:m0_address -> jtag_uart_0_avalon_jtag_slave_translator:uav_address
	wire    [3:0] jtag_uart_0_avalon_jtag_slave_agent_m0_byteenable;                    // jtag_uart_0_avalon_jtag_slave_agent:m0_byteenable -> jtag_uart_0_avalon_jtag_slave_translator:uav_byteenable
	wire          jtag_uart_0_avalon_jtag_slave_agent_m0_read;                          // jtag_uart_0_avalon_jtag_slave_agent:m0_read -> jtag_uart_0_avalon_jtag_slave_translator:uav_read
	wire          jtag_uart_0_avalon_jtag_slave_agent_m0_readdatavalid;                 // jtag_uart_0_avalon_jtag_slave_translator:uav_readdatavalid -> jtag_uart_0_avalon_jtag_slave_agent:m0_readdatavalid
	wire          jtag_uart_0_avalon_jtag_slave_agent_m0_lock;                          // jtag_uart_0_avalon_jtag_slave_agent:m0_lock -> jtag_uart_0_avalon_jtag_slave_translator:uav_lock
	wire   [31:0] jtag_uart_0_avalon_jtag_slave_agent_m0_writedata;                     // jtag_uart_0_avalon_jtag_slave_agent:m0_writedata -> jtag_uart_0_avalon_jtag_slave_translator:uav_writedata
	wire          jtag_uart_0_avalon_jtag_slave_agent_m0_write;                         // jtag_uart_0_avalon_jtag_slave_agent:m0_write -> jtag_uart_0_avalon_jtag_slave_translator:uav_write
	wire    [2:0] jtag_uart_0_avalon_jtag_slave_agent_m0_burstcount;                    // jtag_uart_0_avalon_jtag_slave_agent:m0_burstcount -> jtag_uart_0_avalon_jtag_slave_translator:uav_burstcount
	wire          jtag_uart_0_avalon_jtag_slave_agent_rf_source_valid;                  // jtag_uart_0_avalon_jtag_slave_agent:rf_source_valid -> jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:in_valid
	wire  [142:0] jtag_uart_0_avalon_jtag_slave_agent_rf_source_data;                   // jtag_uart_0_avalon_jtag_slave_agent:rf_source_data -> jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:in_data
	wire          jtag_uart_0_avalon_jtag_slave_agent_rf_source_ready;                  // jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:in_ready -> jtag_uart_0_avalon_jtag_slave_agent:rf_source_ready
	wire          jtag_uart_0_avalon_jtag_slave_agent_rf_source_startofpacket;          // jtag_uart_0_avalon_jtag_slave_agent:rf_source_startofpacket -> jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:in_startofpacket
	wire          jtag_uart_0_avalon_jtag_slave_agent_rf_source_endofpacket;            // jtag_uart_0_avalon_jtag_slave_agent:rf_source_endofpacket -> jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:in_endofpacket
	wire          jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_valid;               // jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:out_valid -> jtag_uart_0_avalon_jtag_slave_agent:rf_sink_valid
	wire  [142:0] jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_data;                // jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:out_data -> jtag_uart_0_avalon_jtag_slave_agent:rf_sink_data
	wire          jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_ready;               // jtag_uart_0_avalon_jtag_slave_agent:rf_sink_ready -> jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:out_ready
	wire          jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_startofpacket;       // jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:out_startofpacket -> jtag_uart_0_avalon_jtag_slave_agent:rf_sink_startofpacket
	wire          jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_endofpacket;         // jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo:out_endofpacket -> jtag_uart_0_avalon_jtag_slave_agent:rf_sink_endofpacket
	wire          jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_valid;             // jtag_uart_0_avalon_jtag_slave_agent:rdata_fifo_src_valid -> jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo:in_valid
	wire   [33:0] jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_data;              // jtag_uart_0_avalon_jtag_slave_agent:rdata_fifo_src_data -> jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo:in_data
	wire          jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_ready;             // jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo:in_ready -> jtag_uart_0_avalon_jtag_slave_agent:rdata_fifo_src_ready
	wire          jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_out_valid;             // jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo:out_valid -> jtag_uart_0_avalon_jtag_slave_agent:rdata_fifo_sink_valid
	wire   [33:0] jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_out_data;              // jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo:out_data -> jtag_uart_0_avalon_jtag_slave_agent:rdata_fifo_sink_data
	wire          jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_out_ready;             // jtag_uart_0_avalon_jtag_slave_agent:rdata_fifo_sink_ready -> jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo:out_ready
	wire          cmd_mux_src_valid;                                                    // cmd_mux:src_valid -> jtag_uart_0_avalon_jtag_slave_agent:cp_valid
	wire  [141:0] cmd_mux_src_data;                                                     // cmd_mux:src_data -> jtag_uart_0_avalon_jtag_slave_agent:cp_data
	wire          cmd_mux_src_ready;                                                    // jtag_uart_0_avalon_jtag_slave_agent:cp_ready -> cmd_mux:src_ready
	wire    [6:0] cmd_mux_src_channel;                                                  // cmd_mux:src_channel -> jtag_uart_0_avalon_jtag_slave_agent:cp_channel
	wire          cmd_mux_src_startofpacket;                                            // cmd_mux:src_startofpacket -> jtag_uart_0_avalon_jtag_slave_agent:cp_startofpacket
	wire          cmd_mux_src_endofpacket;                                              // cmd_mux:src_endofpacket -> jtag_uart_0_avalon_jtag_slave_agent:cp_endofpacket
	wire    [0:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_ruser;           // intel_onchip_memory_0_axi_s1_translator:s0_ruser -> intel_onchip_memory_0_axi_s1_agent:ruser
	wire    [0:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_wuser;           // intel_onchip_memory_0_axi_s1_agent:wuser -> intel_onchip_memory_0_axi_s1_translator:s0_wuser
	wire    [1:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awburst;         // intel_onchip_memory_0_axi_s1_agent:awburst -> intel_onchip_memory_0_axi_s1_translator:s0_awburst
	wire    [3:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arregion;        // intel_onchip_memory_0_axi_s1_agent:arregion -> intel_onchip_memory_0_axi_s1_translator:s0_arregion
	wire    [0:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awuser;          // intel_onchip_memory_0_axi_s1_agent:awuser -> intel_onchip_memory_0_axi_s1_translator:s0_awuser
	wire    [7:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arlen;           // intel_onchip_memory_0_axi_s1_agent:arlen -> intel_onchip_memory_0_axi_s1_translator:s0_arlen
	wire    [3:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arqos;           // intel_onchip_memory_0_axi_s1_agent:arqos -> intel_onchip_memory_0_axi_s1_translator:s0_arqos
	wire    [3:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_wstrb;           // intel_onchip_memory_0_axi_s1_agent:wstrb -> intel_onchip_memory_0_axi_s1_translator:s0_wstrb
	wire          intel_onchip_memory_0_axi_s1_agent_altera_axi_master_wready;          // intel_onchip_memory_0_axi_s1_translator:s0_wready -> intel_onchip_memory_0_axi_s1_agent:wready
	wire    [1:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_rid;             // intel_onchip_memory_0_axi_s1_translator:s0_rid -> intel_onchip_memory_0_axi_s1_agent:rid
	wire          intel_onchip_memory_0_axi_s1_agent_altera_axi_master_rready;          // intel_onchip_memory_0_axi_s1_agent:rready -> intel_onchip_memory_0_axi_s1_translator:s0_rready
	wire    [7:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awlen;           // intel_onchip_memory_0_axi_s1_agent:awlen -> intel_onchip_memory_0_axi_s1_translator:s0_awlen
	wire    [3:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awqos;           // intel_onchip_memory_0_axi_s1_agent:awqos -> intel_onchip_memory_0_axi_s1_translator:s0_awqos
	wire    [3:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arcache;         // intel_onchip_memory_0_axi_s1_agent:arcache -> intel_onchip_memory_0_axi_s1_translator:s0_arcache
	wire          intel_onchip_memory_0_axi_s1_agent_altera_axi_master_wvalid;          // intel_onchip_memory_0_axi_s1_agent:wvalid -> intel_onchip_memory_0_axi_s1_translator:s0_wvalid
	wire   [19:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_araddr;          // intel_onchip_memory_0_axi_s1_agent:araddr -> intel_onchip_memory_0_axi_s1_translator:s0_araddr
	wire    [2:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arprot;          // intel_onchip_memory_0_axi_s1_agent:arprot -> intel_onchip_memory_0_axi_s1_translator:s0_arprot
	wire    [2:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awprot;          // intel_onchip_memory_0_axi_s1_agent:awprot -> intel_onchip_memory_0_axi_s1_translator:s0_awprot
	wire   [31:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_wdata;           // intel_onchip_memory_0_axi_s1_agent:wdata -> intel_onchip_memory_0_axi_s1_translator:s0_wdata
	wire          intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arvalid;         // intel_onchip_memory_0_axi_s1_agent:arvalid -> intel_onchip_memory_0_axi_s1_translator:s0_arvalid
	wire    [3:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awcache;         // intel_onchip_memory_0_axi_s1_agent:awcache -> intel_onchip_memory_0_axi_s1_translator:s0_awcache
	wire    [1:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arid;            // intel_onchip_memory_0_axi_s1_agent:arid -> intel_onchip_memory_0_axi_s1_translator:s0_arid
	wire    [0:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arlock;          // intel_onchip_memory_0_axi_s1_agent:arlock -> intel_onchip_memory_0_axi_s1_translator:s0_arlock
	wire    [0:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awlock;          // intel_onchip_memory_0_axi_s1_agent:awlock -> intel_onchip_memory_0_axi_s1_translator:s0_awlock
	wire   [19:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awaddr;          // intel_onchip_memory_0_axi_s1_agent:awaddr -> intel_onchip_memory_0_axi_s1_translator:s0_awaddr
	wire    [1:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_bresp;           // intel_onchip_memory_0_axi_s1_translator:s0_bresp -> intel_onchip_memory_0_axi_s1_agent:bresp
	wire          intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arready;         // intel_onchip_memory_0_axi_s1_translator:s0_arready -> intel_onchip_memory_0_axi_s1_agent:arready
	wire   [31:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_rdata;           // intel_onchip_memory_0_axi_s1_translator:s0_rdata -> intel_onchip_memory_0_axi_s1_agent:rdata
	wire          intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awready;         // intel_onchip_memory_0_axi_s1_translator:s0_awready -> intel_onchip_memory_0_axi_s1_agent:awready
	wire    [1:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arburst;         // intel_onchip_memory_0_axi_s1_agent:arburst -> intel_onchip_memory_0_axi_s1_translator:s0_arburst
	wire    [2:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arsize;          // intel_onchip_memory_0_axi_s1_agent:arsize -> intel_onchip_memory_0_axi_s1_translator:s0_arsize
	wire          intel_onchip_memory_0_axi_s1_agent_altera_axi_master_bready;          // intel_onchip_memory_0_axi_s1_agent:bready -> intel_onchip_memory_0_axi_s1_translator:s0_bready
	wire          intel_onchip_memory_0_axi_s1_agent_altera_axi_master_rlast;           // intel_onchip_memory_0_axi_s1_translator:s0_rlast -> intel_onchip_memory_0_axi_s1_agent:rlast
	wire          intel_onchip_memory_0_axi_s1_agent_altera_axi_master_wlast;           // intel_onchip_memory_0_axi_s1_agent:wlast -> intel_onchip_memory_0_axi_s1_translator:s0_wlast
	wire    [3:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awregion;        // intel_onchip_memory_0_axi_s1_agent:awregion -> intel_onchip_memory_0_axi_s1_translator:s0_awregion
	wire    [0:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_buser;           // intel_onchip_memory_0_axi_s1_translator:s0_buser -> intel_onchip_memory_0_axi_s1_agent:buser
	wire    [1:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_rresp;           // intel_onchip_memory_0_axi_s1_translator:s0_rresp -> intel_onchip_memory_0_axi_s1_agent:rresp
	wire    [1:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awid;            // intel_onchip_memory_0_axi_s1_agent:awid -> intel_onchip_memory_0_axi_s1_translator:s0_awid
	wire    [1:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_bid;             // intel_onchip_memory_0_axi_s1_translator:s0_bid -> intel_onchip_memory_0_axi_s1_agent:bid
	wire          intel_onchip_memory_0_axi_s1_agent_altera_axi_master_bvalid;          // intel_onchip_memory_0_axi_s1_translator:s0_bvalid -> intel_onchip_memory_0_axi_s1_agent:bvalid
	wire    [2:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awsize;          // intel_onchip_memory_0_axi_s1_agent:awsize -> intel_onchip_memory_0_axi_s1_translator:s0_awsize
	wire          intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awvalid;         // intel_onchip_memory_0_axi_s1_agent:awvalid -> intel_onchip_memory_0_axi_s1_translator:s0_awvalid
	wire    [0:0] intel_onchip_memory_0_axi_s1_agent_altera_axi_master_aruser;          // intel_onchip_memory_0_axi_s1_agent:aruser -> intel_onchip_memory_0_axi_s1_translator:s0_aruser
	wire          intel_onchip_memory_0_axi_s1_agent_altera_axi_master_rvalid;          // intel_onchip_memory_0_axi_s1_translator:s0_rvalid -> intel_onchip_memory_0_axi_s1_agent:rvalid
	wire          cmd_mux_001_src_valid;                                                // cmd_mux_001:src_valid -> intel_onchip_memory_0_axi_s1_agent:write_cp_valid
	wire  [141:0] cmd_mux_001_src_data;                                                 // cmd_mux_001:src_data -> intel_onchip_memory_0_axi_s1_agent:write_cp_data
	wire          cmd_mux_001_src_ready;                                                // intel_onchip_memory_0_axi_s1_agent:write_cp_ready -> cmd_mux_001:src_ready
	wire    [6:0] cmd_mux_001_src_channel;                                              // cmd_mux_001:src_channel -> intel_onchip_memory_0_axi_s1_agent:write_cp_channel
	wire          cmd_mux_001_src_startofpacket;                                        // cmd_mux_001:src_startofpacket -> intel_onchip_memory_0_axi_s1_agent:write_cp_startofpacket
	wire          cmd_mux_001_src_endofpacket;                                          // cmd_mux_001:src_endofpacket -> intel_onchip_memory_0_axi_s1_agent:write_cp_endofpacket
	wire          cmd_mux_002_src_valid;                                                // cmd_mux_002:src_valid -> intel_onchip_memory_0_axi_s1_agent:read_cp_valid
	wire  [141:0] cmd_mux_002_src_data;                                                 // cmd_mux_002:src_data -> intel_onchip_memory_0_axi_s1_agent:read_cp_data
	wire          cmd_mux_002_src_ready;                                                // intel_onchip_memory_0_axi_s1_agent:read_cp_ready -> cmd_mux_002:src_ready
	wire    [6:0] cmd_mux_002_src_channel;                                              // cmd_mux_002:src_channel -> intel_onchip_memory_0_axi_s1_agent:read_cp_channel
	wire          cmd_mux_002_src_startofpacket;                                        // cmd_mux_002:src_startofpacket -> intel_onchip_memory_0_axi_s1_agent:read_cp_startofpacket
	wire          cmd_mux_002_src_endofpacket;                                          // cmd_mux_002:src_endofpacket -> intel_onchip_memory_0_axi_s1_agent:read_cp_endofpacket
	wire   [31:0] sysid_qsys_0_control_slave_agent_m0_readdata;                         // sysid_qsys_0_control_slave_translator:uav_readdata -> sysid_qsys_0_control_slave_agent:m0_readdata
	wire          sysid_qsys_0_control_slave_agent_m0_waitrequest;                      // sysid_qsys_0_control_slave_translator:uav_waitrequest -> sysid_qsys_0_control_slave_agent:m0_waitrequest
	wire          sysid_qsys_0_control_slave_agent_m0_debugaccess;                      // sysid_qsys_0_control_slave_agent:m0_debugaccess -> sysid_qsys_0_control_slave_translator:uav_debugaccess
	wire   [31:0] sysid_qsys_0_control_slave_agent_m0_address;                          // sysid_qsys_0_control_slave_agent:m0_address -> sysid_qsys_0_control_slave_translator:uav_address
	wire    [3:0] sysid_qsys_0_control_slave_agent_m0_byteenable;                       // sysid_qsys_0_control_slave_agent:m0_byteenable -> sysid_qsys_0_control_slave_translator:uav_byteenable
	wire          sysid_qsys_0_control_slave_agent_m0_read;                             // sysid_qsys_0_control_slave_agent:m0_read -> sysid_qsys_0_control_slave_translator:uav_read
	wire          sysid_qsys_0_control_slave_agent_m0_readdatavalid;                    // sysid_qsys_0_control_slave_translator:uav_readdatavalid -> sysid_qsys_0_control_slave_agent:m0_readdatavalid
	wire          sysid_qsys_0_control_slave_agent_m0_lock;                             // sysid_qsys_0_control_slave_agent:m0_lock -> sysid_qsys_0_control_slave_translator:uav_lock
	wire   [31:0] sysid_qsys_0_control_slave_agent_m0_writedata;                        // sysid_qsys_0_control_slave_agent:m0_writedata -> sysid_qsys_0_control_slave_translator:uav_writedata
	wire          sysid_qsys_0_control_slave_agent_m0_write;                            // sysid_qsys_0_control_slave_agent:m0_write -> sysid_qsys_0_control_slave_translator:uav_write
	wire    [2:0] sysid_qsys_0_control_slave_agent_m0_burstcount;                       // sysid_qsys_0_control_slave_agent:m0_burstcount -> sysid_qsys_0_control_slave_translator:uav_burstcount
	wire          sysid_qsys_0_control_slave_agent_rf_source_valid;                     // sysid_qsys_0_control_slave_agent:rf_source_valid -> sysid_qsys_0_control_slave_agent_rsp_fifo:in_valid
	wire  [142:0] sysid_qsys_0_control_slave_agent_rf_source_data;                      // sysid_qsys_0_control_slave_agent:rf_source_data -> sysid_qsys_0_control_slave_agent_rsp_fifo:in_data
	wire          sysid_qsys_0_control_slave_agent_rf_source_ready;                     // sysid_qsys_0_control_slave_agent_rsp_fifo:in_ready -> sysid_qsys_0_control_slave_agent:rf_source_ready
	wire          sysid_qsys_0_control_slave_agent_rf_source_startofpacket;             // sysid_qsys_0_control_slave_agent:rf_source_startofpacket -> sysid_qsys_0_control_slave_agent_rsp_fifo:in_startofpacket
	wire          sysid_qsys_0_control_slave_agent_rf_source_endofpacket;               // sysid_qsys_0_control_slave_agent:rf_source_endofpacket -> sysid_qsys_0_control_slave_agent_rsp_fifo:in_endofpacket
	wire          sysid_qsys_0_control_slave_agent_rsp_fifo_out_valid;                  // sysid_qsys_0_control_slave_agent_rsp_fifo:out_valid -> sysid_qsys_0_control_slave_agent:rf_sink_valid
	wire  [142:0] sysid_qsys_0_control_slave_agent_rsp_fifo_out_data;                   // sysid_qsys_0_control_slave_agent_rsp_fifo:out_data -> sysid_qsys_0_control_slave_agent:rf_sink_data
	wire          sysid_qsys_0_control_slave_agent_rsp_fifo_out_ready;                  // sysid_qsys_0_control_slave_agent:rf_sink_ready -> sysid_qsys_0_control_slave_agent_rsp_fifo:out_ready
	wire          sysid_qsys_0_control_slave_agent_rsp_fifo_out_startofpacket;          // sysid_qsys_0_control_slave_agent_rsp_fifo:out_startofpacket -> sysid_qsys_0_control_slave_agent:rf_sink_startofpacket
	wire          sysid_qsys_0_control_slave_agent_rsp_fifo_out_endofpacket;            // sysid_qsys_0_control_slave_agent_rsp_fifo:out_endofpacket -> sysid_qsys_0_control_slave_agent:rf_sink_endofpacket
	wire          sysid_qsys_0_control_slave_agent_rdata_fifo_src_valid;                // sysid_qsys_0_control_slave_agent:rdata_fifo_src_valid -> sysid_qsys_0_control_slave_agent_rdata_fifo:in_valid
	wire   [33:0] sysid_qsys_0_control_slave_agent_rdata_fifo_src_data;                 // sysid_qsys_0_control_slave_agent:rdata_fifo_src_data -> sysid_qsys_0_control_slave_agent_rdata_fifo:in_data
	wire          sysid_qsys_0_control_slave_agent_rdata_fifo_src_ready;                // sysid_qsys_0_control_slave_agent_rdata_fifo:in_ready -> sysid_qsys_0_control_slave_agent:rdata_fifo_src_ready
	wire          sysid_qsys_0_control_slave_agent_rdata_fifo_out_valid;                // sysid_qsys_0_control_slave_agent_rdata_fifo:out_valid -> sysid_qsys_0_control_slave_agent:rdata_fifo_sink_valid
	wire   [33:0] sysid_qsys_0_control_slave_agent_rdata_fifo_out_data;                 // sysid_qsys_0_control_slave_agent_rdata_fifo:out_data -> sysid_qsys_0_control_slave_agent:rdata_fifo_sink_data
	wire          sysid_qsys_0_control_slave_agent_rdata_fifo_out_ready;                // sysid_qsys_0_control_slave_agent:rdata_fifo_sink_ready -> sysid_qsys_0_control_slave_agent_rdata_fifo:out_ready
	wire          cmd_mux_003_src_valid;                                                // cmd_mux_003:src_valid -> sysid_qsys_0_control_slave_agent:cp_valid
	wire  [141:0] cmd_mux_003_src_data;                                                 // cmd_mux_003:src_data -> sysid_qsys_0_control_slave_agent:cp_data
	wire          cmd_mux_003_src_ready;                                                // sysid_qsys_0_control_slave_agent:cp_ready -> cmd_mux_003:src_ready
	wire    [6:0] cmd_mux_003_src_channel;                                              // cmd_mux_003:src_channel -> sysid_qsys_0_control_slave_agent:cp_channel
	wire          cmd_mux_003_src_startofpacket;                                        // cmd_mux_003:src_startofpacket -> sysid_qsys_0_control_slave_agent:cp_startofpacket
	wire          cmd_mux_003_src_endofpacket;                                          // cmd_mux_003:src_endofpacket -> sysid_qsys_0_control_slave_agent:cp_endofpacket
	wire   [31:0] intel_niosv_m_0_dm_agent_agent_m0_readdata;                           // intel_niosv_m_0_dm_agent_translator:uav_readdata -> intel_niosv_m_0_dm_agent_agent:m0_readdata
	wire          intel_niosv_m_0_dm_agent_agent_m0_waitrequest;                        // intel_niosv_m_0_dm_agent_translator:uav_waitrequest -> intel_niosv_m_0_dm_agent_agent:m0_waitrequest
	wire          intel_niosv_m_0_dm_agent_agent_m0_debugaccess;                        // intel_niosv_m_0_dm_agent_agent:m0_debugaccess -> intel_niosv_m_0_dm_agent_translator:uav_debugaccess
	wire   [31:0] intel_niosv_m_0_dm_agent_agent_m0_address;                            // intel_niosv_m_0_dm_agent_agent:m0_address -> intel_niosv_m_0_dm_agent_translator:uav_address
	wire    [3:0] intel_niosv_m_0_dm_agent_agent_m0_byteenable;                         // intel_niosv_m_0_dm_agent_agent:m0_byteenable -> intel_niosv_m_0_dm_agent_translator:uav_byteenable
	wire          intel_niosv_m_0_dm_agent_agent_m0_read;                               // intel_niosv_m_0_dm_agent_agent:m0_read -> intel_niosv_m_0_dm_agent_translator:uav_read
	wire          intel_niosv_m_0_dm_agent_agent_m0_readdatavalid;                      // intel_niosv_m_0_dm_agent_translator:uav_readdatavalid -> intel_niosv_m_0_dm_agent_agent:m0_readdatavalid
	wire          intel_niosv_m_0_dm_agent_agent_m0_lock;                               // intel_niosv_m_0_dm_agent_agent:m0_lock -> intel_niosv_m_0_dm_agent_translator:uav_lock
	wire   [31:0] intel_niosv_m_0_dm_agent_agent_m0_writedata;                          // intel_niosv_m_0_dm_agent_agent:m0_writedata -> intel_niosv_m_0_dm_agent_translator:uav_writedata
	wire          intel_niosv_m_0_dm_agent_agent_m0_write;                              // intel_niosv_m_0_dm_agent_agent:m0_write -> intel_niosv_m_0_dm_agent_translator:uav_write
	wire    [2:0] intel_niosv_m_0_dm_agent_agent_m0_burstcount;                         // intel_niosv_m_0_dm_agent_agent:m0_burstcount -> intel_niosv_m_0_dm_agent_translator:uav_burstcount
	wire          intel_niosv_m_0_dm_agent_agent_rf_source_valid;                       // intel_niosv_m_0_dm_agent_agent:rf_source_valid -> intel_niosv_m_0_dm_agent_agent_rsp_fifo:in_valid
	wire  [142:0] intel_niosv_m_0_dm_agent_agent_rf_source_data;                        // intel_niosv_m_0_dm_agent_agent:rf_source_data -> intel_niosv_m_0_dm_agent_agent_rsp_fifo:in_data
	wire          intel_niosv_m_0_dm_agent_agent_rf_source_ready;                       // intel_niosv_m_0_dm_agent_agent_rsp_fifo:in_ready -> intel_niosv_m_0_dm_agent_agent:rf_source_ready
	wire          intel_niosv_m_0_dm_agent_agent_rf_source_startofpacket;               // intel_niosv_m_0_dm_agent_agent:rf_source_startofpacket -> intel_niosv_m_0_dm_agent_agent_rsp_fifo:in_startofpacket
	wire          intel_niosv_m_0_dm_agent_agent_rf_source_endofpacket;                 // intel_niosv_m_0_dm_agent_agent:rf_source_endofpacket -> intel_niosv_m_0_dm_agent_agent_rsp_fifo:in_endofpacket
	wire          intel_niosv_m_0_dm_agent_agent_rsp_fifo_out_valid;                    // intel_niosv_m_0_dm_agent_agent_rsp_fifo:out_valid -> intel_niosv_m_0_dm_agent_agent:rf_sink_valid
	wire  [142:0] intel_niosv_m_0_dm_agent_agent_rsp_fifo_out_data;                     // intel_niosv_m_0_dm_agent_agent_rsp_fifo:out_data -> intel_niosv_m_0_dm_agent_agent:rf_sink_data
	wire          intel_niosv_m_0_dm_agent_agent_rsp_fifo_out_ready;                    // intel_niosv_m_0_dm_agent_agent:rf_sink_ready -> intel_niosv_m_0_dm_agent_agent_rsp_fifo:out_ready
	wire          intel_niosv_m_0_dm_agent_agent_rsp_fifo_out_startofpacket;            // intel_niosv_m_0_dm_agent_agent_rsp_fifo:out_startofpacket -> intel_niosv_m_0_dm_agent_agent:rf_sink_startofpacket
	wire          intel_niosv_m_0_dm_agent_agent_rsp_fifo_out_endofpacket;              // intel_niosv_m_0_dm_agent_agent_rsp_fifo:out_endofpacket -> intel_niosv_m_0_dm_agent_agent:rf_sink_endofpacket
	wire          intel_niosv_m_0_dm_agent_agent_rdata_fifo_src_valid;                  // intel_niosv_m_0_dm_agent_agent:rdata_fifo_src_valid -> intel_niosv_m_0_dm_agent_agent_rdata_fifo:in_valid
	wire   [33:0] intel_niosv_m_0_dm_agent_agent_rdata_fifo_src_data;                   // intel_niosv_m_0_dm_agent_agent:rdata_fifo_src_data -> intel_niosv_m_0_dm_agent_agent_rdata_fifo:in_data
	wire          intel_niosv_m_0_dm_agent_agent_rdata_fifo_src_ready;                  // intel_niosv_m_0_dm_agent_agent_rdata_fifo:in_ready -> intel_niosv_m_0_dm_agent_agent:rdata_fifo_src_ready
	wire          intel_niosv_m_0_dm_agent_agent_rdata_fifo_out_valid;                  // intel_niosv_m_0_dm_agent_agent_rdata_fifo:out_valid -> intel_niosv_m_0_dm_agent_agent:rdata_fifo_sink_valid
	wire   [33:0] intel_niosv_m_0_dm_agent_agent_rdata_fifo_out_data;                   // intel_niosv_m_0_dm_agent_agent_rdata_fifo:out_data -> intel_niosv_m_0_dm_agent_agent:rdata_fifo_sink_data
	wire          intel_niosv_m_0_dm_agent_agent_rdata_fifo_out_ready;                  // intel_niosv_m_0_dm_agent_agent:rdata_fifo_sink_ready -> intel_niosv_m_0_dm_agent_agent_rdata_fifo:out_ready
	wire          cmd_mux_004_src_valid;                                                // cmd_mux_004:src_valid -> intel_niosv_m_0_dm_agent_agent:cp_valid
	wire  [141:0] cmd_mux_004_src_data;                                                 // cmd_mux_004:src_data -> intel_niosv_m_0_dm_agent_agent:cp_data
	wire          cmd_mux_004_src_ready;                                                // intel_niosv_m_0_dm_agent_agent:cp_ready -> cmd_mux_004:src_ready
	wire    [6:0] cmd_mux_004_src_channel;                                              // cmd_mux_004:src_channel -> intel_niosv_m_0_dm_agent_agent:cp_channel
	wire          cmd_mux_004_src_startofpacket;                                        // cmd_mux_004:src_startofpacket -> intel_niosv_m_0_dm_agent_agent:cp_startofpacket
	wire          cmd_mux_004_src_endofpacket;                                          // cmd_mux_004:src_endofpacket -> intel_niosv_m_0_dm_agent_agent:cp_endofpacket
	wire   [31:0] pio_0_s1_agent_m0_readdata;                                           // pio_0_s1_translator:uav_readdata -> pio_0_s1_agent:m0_readdata
	wire          pio_0_s1_agent_m0_waitrequest;                                        // pio_0_s1_translator:uav_waitrequest -> pio_0_s1_agent:m0_waitrequest
	wire          pio_0_s1_agent_m0_debugaccess;                                        // pio_0_s1_agent:m0_debugaccess -> pio_0_s1_translator:uav_debugaccess
	wire   [31:0] pio_0_s1_agent_m0_address;                                            // pio_0_s1_agent:m0_address -> pio_0_s1_translator:uav_address
	wire    [3:0] pio_0_s1_agent_m0_byteenable;                                         // pio_0_s1_agent:m0_byteenable -> pio_0_s1_translator:uav_byteenable
	wire          pio_0_s1_agent_m0_read;                                               // pio_0_s1_agent:m0_read -> pio_0_s1_translator:uav_read
	wire          pio_0_s1_agent_m0_readdatavalid;                                      // pio_0_s1_translator:uav_readdatavalid -> pio_0_s1_agent:m0_readdatavalid
	wire          pio_0_s1_agent_m0_lock;                                               // pio_0_s1_agent:m0_lock -> pio_0_s1_translator:uav_lock
	wire   [31:0] pio_0_s1_agent_m0_writedata;                                          // pio_0_s1_agent:m0_writedata -> pio_0_s1_translator:uav_writedata
	wire          pio_0_s1_agent_m0_write;                                              // pio_0_s1_agent:m0_write -> pio_0_s1_translator:uav_write
	wire    [2:0] pio_0_s1_agent_m0_burstcount;                                         // pio_0_s1_agent:m0_burstcount -> pio_0_s1_translator:uav_burstcount
	wire          pio_0_s1_agent_rf_source_valid;                                       // pio_0_s1_agent:rf_source_valid -> pio_0_s1_agent_rsp_fifo:in_valid
	wire  [142:0] pio_0_s1_agent_rf_source_data;                                        // pio_0_s1_agent:rf_source_data -> pio_0_s1_agent_rsp_fifo:in_data
	wire          pio_0_s1_agent_rf_source_ready;                                       // pio_0_s1_agent_rsp_fifo:in_ready -> pio_0_s1_agent:rf_source_ready
	wire          pio_0_s1_agent_rf_source_startofpacket;                               // pio_0_s1_agent:rf_source_startofpacket -> pio_0_s1_agent_rsp_fifo:in_startofpacket
	wire          pio_0_s1_agent_rf_source_endofpacket;                                 // pio_0_s1_agent:rf_source_endofpacket -> pio_0_s1_agent_rsp_fifo:in_endofpacket
	wire          pio_0_s1_agent_rsp_fifo_out_valid;                                    // pio_0_s1_agent_rsp_fifo:out_valid -> pio_0_s1_agent:rf_sink_valid
	wire  [142:0] pio_0_s1_agent_rsp_fifo_out_data;                                     // pio_0_s1_agent_rsp_fifo:out_data -> pio_0_s1_agent:rf_sink_data
	wire          pio_0_s1_agent_rsp_fifo_out_ready;                                    // pio_0_s1_agent:rf_sink_ready -> pio_0_s1_agent_rsp_fifo:out_ready
	wire          pio_0_s1_agent_rsp_fifo_out_startofpacket;                            // pio_0_s1_agent_rsp_fifo:out_startofpacket -> pio_0_s1_agent:rf_sink_startofpacket
	wire          pio_0_s1_agent_rsp_fifo_out_endofpacket;                              // pio_0_s1_agent_rsp_fifo:out_endofpacket -> pio_0_s1_agent:rf_sink_endofpacket
	wire          pio_0_s1_agent_rdata_fifo_src_valid;                                  // pio_0_s1_agent:rdata_fifo_src_valid -> pio_0_s1_agent_rdata_fifo:in_valid
	wire   [33:0] pio_0_s1_agent_rdata_fifo_src_data;                                   // pio_0_s1_agent:rdata_fifo_src_data -> pio_0_s1_agent_rdata_fifo:in_data
	wire          pio_0_s1_agent_rdata_fifo_src_ready;                                  // pio_0_s1_agent_rdata_fifo:in_ready -> pio_0_s1_agent:rdata_fifo_src_ready
	wire          pio_0_s1_agent_rdata_fifo_out_valid;                                  // pio_0_s1_agent_rdata_fifo:out_valid -> pio_0_s1_agent:rdata_fifo_sink_valid
	wire   [33:0] pio_0_s1_agent_rdata_fifo_out_data;                                   // pio_0_s1_agent_rdata_fifo:out_data -> pio_0_s1_agent:rdata_fifo_sink_data
	wire          pio_0_s1_agent_rdata_fifo_out_ready;                                  // pio_0_s1_agent:rdata_fifo_sink_ready -> pio_0_s1_agent_rdata_fifo:out_ready
	wire          cmd_mux_005_src_valid;                                                // cmd_mux_005:src_valid -> pio_0_s1_agent:cp_valid
	wire  [141:0] cmd_mux_005_src_data;                                                 // cmd_mux_005:src_data -> pio_0_s1_agent:cp_data
	wire          cmd_mux_005_src_ready;                                                // pio_0_s1_agent:cp_ready -> cmd_mux_005:src_ready
	wire    [6:0] cmd_mux_005_src_channel;                                              // cmd_mux_005:src_channel -> pio_0_s1_agent:cp_channel
	wire          cmd_mux_005_src_startofpacket;                                        // cmd_mux_005:src_startofpacket -> pio_0_s1_agent:cp_startofpacket
	wire          cmd_mux_005_src_endofpacket;                                          // cmd_mux_005:src_endofpacket -> pio_0_s1_agent:cp_endofpacket
	wire   [31:0] intel_niosv_m_0_timer_sw_agent_agent_m0_readdata;                     // intel_niosv_m_0_timer_sw_agent_translator:uav_readdata -> intel_niosv_m_0_timer_sw_agent_agent:m0_readdata
	wire          intel_niosv_m_0_timer_sw_agent_agent_m0_waitrequest;                  // intel_niosv_m_0_timer_sw_agent_translator:uav_waitrequest -> intel_niosv_m_0_timer_sw_agent_agent:m0_waitrequest
	wire          intel_niosv_m_0_timer_sw_agent_agent_m0_debugaccess;                  // intel_niosv_m_0_timer_sw_agent_agent:m0_debugaccess -> intel_niosv_m_0_timer_sw_agent_translator:uav_debugaccess
	wire   [31:0] intel_niosv_m_0_timer_sw_agent_agent_m0_address;                      // intel_niosv_m_0_timer_sw_agent_agent:m0_address -> intel_niosv_m_0_timer_sw_agent_translator:uav_address
	wire    [3:0] intel_niosv_m_0_timer_sw_agent_agent_m0_byteenable;                   // intel_niosv_m_0_timer_sw_agent_agent:m0_byteenable -> intel_niosv_m_0_timer_sw_agent_translator:uav_byteenable
	wire          intel_niosv_m_0_timer_sw_agent_agent_m0_read;                         // intel_niosv_m_0_timer_sw_agent_agent:m0_read -> intel_niosv_m_0_timer_sw_agent_translator:uav_read
	wire          intel_niosv_m_0_timer_sw_agent_agent_m0_readdatavalid;                // intel_niosv_m_0_timer_sw_agent_translator:uav_readdatavalid -> intel_niosv_m_0_timer_sw_agent_agent:m0_readdatavalid
	wire          intel_niosv_m_0_timer_sw_agent_agent_m0_lock;                         // intel_niosv_m_0_timer_sw_agent_agent:m0_lock -> intel_niosv_m_0_timer_sw_agent_translator:uav_lock
	wire   [31:0] intel_niosv_m_0_timer_sw_agent_agent_m0_writedata;                    // intel_niosv_m_0_timer_sw_agent_agent:m0_writedata -> intel_niosv_m_0_timer_sw_agent_translator:uav_writedata
	wire          intel_niosv_m_0_timer_sw_agent_agent_m0_write;                        // intel_niosv_m_0_timer_sw_agent_agent:m0_write -> intel_niosv_m_0_timer_sw_agent_translator:uav_write
	wire    [2:0] intel_niosv_m_0_timer_sw_agent_agent_m0_burstcount;                   // intel_niosv_m_0_timer_sw_agent_agent:m0_burstcount -> intel_niosv_m_0_timer_sw_agent_translator:uav_burstcount
	wire          intel_niosv_m_0_timer_sw_agent_agent_rf_source_valid;                 // intel_niosv_m_0_timer_sw_agent_agent:rf_source_valid -> intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo:in_valid
	wire  [142:0] intel_niosv_m_0_timer_sw_agent_agent_rf_source_data;                  // intel_niosv_m_0_timer_sw_agent_agent:rf_source_data -> intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo:in_data
	wire          intel_niosv_m_0_timer_sw_agent_agent_rf_source_ready;                 // intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo:in_ready -> intel_niosv_m_0_timer_sw_agent_agent:rf_source_ready
	wire          intel_niosv_m_0_timer_sw_agent_agent_rf_source_startofpacket;         // intel_niosv_m_0_timer_sw_agent_agent:rf_source_startofpacket -> intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo:in_startofpacket
	wire          intel_niosv_m_0_timer_sw_agent_agent_rf_source_endofpacket;           // intel_niosv_m_0_timer_sw_agent_agent:rf_source_endofpacket -> intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo:in_endofpacket
	wire          intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo_out_valid;              // intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo:out_valid -> intel_niosv_m_0_timer_sw_agent_agent:rf_sink_valid
	wire  [142:0] intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo_out_data;               // intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo:out_data -> intel_niosv_m_0_timer_sw_agent_agent:rf_sink_data
	wire          intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo_out_ready;              // intel_niosv_m_0_timer_sw_agent_agent:rf_sink_ready -> intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo:out_ready
	wire          intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo_out_startofpacket;      // intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo:out_startofpacket -> intel_niosv_m_0_timer_sw_agent_agent:rf_sink_startofpacket
	wire          intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo_out_endofpacket;        // intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo:out_endofpacket -> intel_niosv_m_0_timer_sw_agent_agent:rf_sink_endofpacket
	wire          intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo_src_valid;            // intel_niosv_m_0_timer_sw_agent_agent:rdata_fifo_src_valid -> intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo:in_valid
	wire   [33:0] intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo_src_data;             // intel_niosv_m_0_timer_sw_agent_agent:rdata_fifo_src_data -> intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo:in_data
	wire          intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo_src_ready;            // intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo:in_ready -> intel_niosv_m_0_timer_sw_agent_agent:rdata_fifo_src_ready
	wire          intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo_out_valid;            // intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo:out_valid -> intel_niosv_m_0_timer_sw_agent_agent:rdata_fifo_sink_valid
	wire   [33:0] intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo_out_data;             // intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo:out_data -> intel_niosv_m_0_timer_sw_agent_agent:rdata_fifo_sink_data
	wire          intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo_out_ready;            // intel_niosv_m_0_timer_sw_agent_agent:rdata_fifo_sink_ready -> intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo:out_ready
	wire          cmd_mux_006_src_valid;                                                // cmd_mux_006:src_valid -> intel_niosv_m_0_timer_sw_agent_agent:cp_valid
	wire  [141:0] cmd_mux_006_src_data;                                                 // cmd_mux_006:src_data -> intel_niosv_m_0_timer_sw_agent_agent:cp_data
	wire          cmd_mux_006_src_ready;                                                // intel_niosv_m_0_timer_sw_agent_agent:cp_ready -> cmd_mux_006:src_ready
	wire    [6:0] cmd_mux_006_src_channel;                                              // cmd_mux_006:src_channel -> intel_niosv_m_0_timer_sw_agent_agent:cp_channel
	wire          cmd_mux_006_src_startofpacket;                                        // cmd_mux_006:src_startofpacket -> intel_niosv_m_0_timer_sw_agent_agent:cp_startofpacket
	wire          cmd_mux_006_src_endofpacket;                                          // cmd_mux_006:src_endofpacket -> intel_niosv_m_0_timer_sw_agent_agent:cp_endofpacket
	wire          intel_niosv_m_0_data_manager_agent_write_cp_valid;                    // intel_niosv_m_0_data_manager_agent:write_cp_valid -> router:sink_valid
	wire  [141:0] intel_niosv_m_0_data_manager_agent_write_cp_data;                     // intel_niosv_m_0_data_manager_agent:write_cp_data -> router:sink_data
	wire          intel_niosv_m_0_data_manager_agent_write_cp_ready;                    // router:sink_ready -> intel_niosv_m_0_data_manager_agent:write_cp_ready
	wire          intel_niosv_m_0_data_manager_agent_write_cp_startofpacket;            // intel_niosv_m_0_data_manager_agent:write_cp_startofpacket -> router:sink_startofpacket
	wire          intel_niosv_m_0_data_manager_agent_write_cp_endofpacket;              // intel_niosv_m_0_data_manager_agent:write_cp_endofpacket -> router:sink_endofpacket
	wire          router_src_valid;                                                     // router:src_valid -> cmd_demux:sink_valid
	wire  [141:0] router_src_data;                                                      // router:src_data -> cmd_demux:sink_data
	wire          router_src_ready;                                                     // cmd_demux:sink_ready -> router:src_ready
	wire    [6:0] router_src_channel;                                                   // router:src_channel -> cmd_demux:sink_channel
	wire          router_src_startofpacket;                                             // router:src_startofpacket -> cmd_demux:sink_startofpacket
	wire          router_src_endofpacket;                                               // router:src_endofpacket -> cmd_demux:sink_endofpacket
	wire          intel_niosv_m_0_data_manager_agent_read_cp_valid;                     // intel_niosv_m_0_data_manager_agent:read_cp_valid -> router_001:sink_valid
	wire  [141:0] intel_niosv_m_0_data_manager_agent_read_cp_data;                      // intel_niosv_m_0_data_manager_agent:read_cp_data -> router_001:sink_data
	wire          intel_niosv_m_0_data_manager_agent_read_cp_ready;                     // router_001:sink_ready -> intel_niosv_m_0_data_manager_agent:read_cp_ready
	wire          intel_niosv_m_0_data_manager_agent_read_cp_startofpacket;             // intel_niosv_m_0_data_manager_agent:read_cp_startofpacket -> router_001:sink_startofpacket
	wire          intel_niosv_m_0_data_manager_agent_read_cp_endofpacket;               // intel_niosv_m_0_data_manager_agent:read_cp_endofpacket -> router_001:sink_endofpacket
	wire          router_001_src_valid;                                                 // router_001:src_valid -> cmd_demux_001:sink_valid
	wire  [141:0] router_001_src_data;                                                  // router_001:src_data -> cmd_demux_001:sink_data
	wire          router_001_src_ready;                                                 // cmd_demux_001:sink_ready -> router_001:src_ready
	wire    [6:0] router_001_src_channel;                                               // router_001:src_channel -> cmd_demux_001:sink_channel
	wire          router_001_src_startofpacket;                                         // router_001:src_startofpacket -> cmd_demux_001:sink_startofpacket
	wire          router_001_src_endofpacket;                                           // router_001:src_endofpacket -> cmd_demux_001:sink_endofpacket
	wire          intel_niosv_m_0_instruction_manager_agent_write_cp_valid;             // intel_niosv_m_0_instruction_manager_agent:write_cp_valid -> router_002:sink_valid
	wire  [141:0] intel_niosv_m_0_instruction_manager_agent_write_cp_data;              // intel_niosv_m_0_instruction_manager_agent:write_cp_data -> router_002:sink_data
	wire          intel_niosv_m_0_instruction_manager_agent_write_cp_ready;             // router_002:sink_ready -> intel_niosv_m_0_instruction_manager_agent:write_cp_ready
	wire          intel_niosv_m_0_instruction_manager_agent_write_cp_startofpacket;     // intel_niosv_m_0_instruction_manager_agent:write_cp_startofpacket -> router_002:sink_startofpacket
	wire          intel_niosv_m_0_instruction_manager_agent_write_cp_endofpacket;       // intel_niosv_m_0_instruction_manager_agent:write_cp_endofpacket -> router_002:sink_endofpacket
	wire          intel_niosv_m_0_instruction_manager_agent_read_cp_valid;              // intel_niosv_m_0_instruction_manager_agent:read_cp_valid -> router_003:sink_valid
	wire  [141:0] intel_niosv_m_0_instruction_manager_agent_read_cp_data;               // intel_niosv_m_0_instruction_manager_agent:read_cp_data -> router_003:sink_data
	wire          intel_niosv_m_0_instruction_manager_agent_read_cp_ready;              // router_003:sink_ready -> intel_niosv_m_0_instruction_manager_agent:read_cp_ready
	wire          intel_niosv_m_0_instruction_manager_agent_read_cp_startofpacket;      // intel_niosv_m_0_instruction_manager_agent:read_cp_startofpacket -> router_003:sink_startofpacket
	wire          intel_niosv_m_0_instruction_manager_agent_read_cp_endofpacket;        // intel_niosv_m_0_instruction_manager_agent:read_cp_endofpacket -> router_003:sink_endofpacket
	wire          jtag_uart_0_avalon_jtag_slave_agent_rp_valid;                         // jtag_uart_0_avalon_jtag_slave_agent:rp_valid -> router_004:sink_valid
	wire  [141:0] jtag_uart_0_avalon_jtag_slave_agent_rp_data;                          // jtag_uart_0_avalon_jtag_slave_agent:rp_data -> router_004:sink_data
	wire          jtag_uart_0_avalon_jtag_slave_agent_rp_ready;                         // router_004:sink_ready -> jtag_uart_0_avalon_jtag_slave_agent:rp_ready
	wire          jtag_uart_0_avalon_jtag_slave_agent_rp_startofpacket;                 // jtag_uart_0_avalon_jtag_slave_agent:rp_startofpacket -> router_004:sink_startofpacket
	wire          jtag_uart_0_avalon_jtag_slave_agent_rp_endofpacket;                   // jtag_uart_0_avalon_jtag_slave_agent:rp_endofpacket -> router_004:sink_endofpacket
	wire          router_004_src_valid;                                                 // router_004:src_valid -> rsp_demux:sink_valid
	wire  [141:0] router_004_src_data;                                                  // router_004:src_data -> rsp_demux:sink_data
	wire          router_004_src_ready;                                                 // rsp_demux:sink_ready -> router_004:src_ready
	wire    [6:0] router_004_src_channel;                                               // router_004:src_channel -> rsp_demux:sink_channel
	wire          router_004_src_startofpacket;                                         // router_004:src_startofpacket -> rsp_demux:sink_startofpacket
	wire          router_004_src_endofpacket;                                           // router_004:src_endofpacket -> rsp_demux:sink_endofpacket
	wire          intel_onchip_memory_0_axi_s1_agent_write_rp_valid;                    // intel_onchip_memory_0_axi_s1_agent:write_rp_valid -> router_005:sink_valid
	wire  [141:0] intel_onchip_memory_0_axi_s1_agent_write_rp_data;                     // intel_onchip_memory_0_axi_s1_agent:write_rp_data -> router_005:sink_data
	wire          intel_onchip_memory_0_axi_s1_agent_write_rp_ready;                    // router_005:sink_ready -> intel_onchip_memory_0_axi_s1_agent:write_rp_ready
	wire          intel_onchip_memory_0_axi_s1_agent_write_rp_startofpacket;            // intel_onchip_memory_0_axi_s1_agent:write_rp_startofpacket -> router_005:sink_startofpacket
	wire          intel_onchip_memory_0_axi_s1_agent_write_rp_endofpacket;              // intel_onchip_memory_0_axi_s1_agent:write_rp_endofpacket -> router_005:sink_endofpacket
	wire          router_005_src_valid;                                                 // router_005:src_valid -> rsp_demux_001:sink_valid
	wire  [141:0] router_005_src_data;                                                  // router_005:src_data -> rsp_demux_001:sink_data
	wire          router_005_src_ready;                                                 // rsp_demux_001:sink_ready -> router_005:src_ready
	wire    [6:0] router_005_src_channel;                                               // router_005:src_channel -> rsp_demux_001:sink_channel
	wire          router_005_src_startofpacket;                                         // router_005:src_startofpacket -> rsp_demux_001:sink_startofpacket
	wire          router_005_src_endofpacket;                                           // router_005:src_endofpacket -> rsp_demux_001:sink_endofpacket
	wire          intel_onchip_memory_0_axi_s1_agent_read_rp_valid;                     // intel_onchip_memory_0_axi_s1_agent:read_rp_valid -> router_006:sink_valid
	wire  [141:0] intel_onchip_memory_0_axi_s1_agent_read_rp_data;                      // intel_onchip_memory_0_axi_s1_agent:read_rp_data -> router_006:sink_data
	wire          intel_onchip_memory_0_axi_s1_agent_read_rp_ready;                     // router_006:sink_ready -> intel_onchip_memory_0_axi_s1_agent:read_rp_ready
	wire          intel_onchip_memory_0_axi_s1_agent_read_rp_startofpacket;             // intel_onchip_memory_0_axi_s1_agent:read_rp_startofpacket -> router_006:sink_startofpacket
	wire          intel_onchip_memory_0_axi_s1_agent_read_rp_endofpacket;               // intel_onchip_memory_0_axi_s1_agent:read_rp_endofpacket -> router_006:sink_endofpacket
	wire          router_006_src_valid;                                                 // router_006:src_valid -> rsp_demux_002:sink_valid
	wire  [141:0] router_006_src_data;                                                  // router_006:src_data -> rsp_demux_002:sink_data
	wire          router_006_src_ready;                                                 // rsp_demux_002:sink_ready -> router_006:src_ready
	wire    [6:0] router_006_src_channel;                                               // router_006:src_channel -> rsp_demux_002:sink_channel
	wire          router_006_src_startofpacket;                                         // router_006:src_startofpacket -> rsp_demux_002:sink_startofpacket
	wire          router_006_src_endofpacket;                                           // router_006:src_endofpacket -> rsp_demux_002:sink_endofpacket
	wire          sysid_qsys_0_control_slave_agent_rp_valid;                            // sysid_qsys_0_control_slave_agent:rp_valid -> router_007:sink_valid
	wire  [141:0] sysid_qsys_0_control_slave_agent_rp_data;                             // sysid_qsys_0_control_slave_agent:rp_data -> router_007:sink_data
	wire          sysid_qsys_0_control_slave_agent_rp_ready;                            // router_007:sink_ready -> sysid_qsys_0_control_slave_agent:rp_ready
	wire          sysid_qsys_0_control_slave_agent_rp_startofpacket;                    // sysid_qsys_0_control_slave_agent:rp_startofpacket -> router_007:sink_startofpacket
	wire          sysid_qsys_0_control_slave_agent_rp_endofpacket;                      // sysid_qsys_0_control_slave_agent:rp_endofpacket -> router_007:sink_endofpacket
	wire          router_007_src_valid;                                                 // router_007:src_valid -> rsp_demux_003:sink_valid
	wire  [141:0] router_007_src_data;                                                  // router_007:src_data -> rsp_demux_003:sink_data
	wire          router_007_src_ready;                                                 // rsp_demux_003:sink_ready -> router_007:src_ready
	wire    [6:0] router_007_src_channel;                                               // router_007:src_channel -> rsp_demux_003:sink_channel
	wire          router_007_src_startofpacket;                                         // router_007:src_startofpacket -> rsp_demux_003:sink_startofpacket
	wire          router_007_src_endofpacket;                                           // router_007:src_endofpacket -> rsp_demux_003:sink_endofpacket
	wire          intel_niosv_m_0_dm_agent_agent_rp_valid;                              // intel_niosv_m_0_dm_agent_agent:rp_valid -> router_008:sink_valid
	wire  [141:0] intel_niosv_m_0_dm_agent_agent_rp_data;                               // intel_niosv_m_0_dm_agent_agent:rp_data -> router_008:sink_data
	wire          intel_niosv_m_0_dm_agent_agent_rp_ready;                              // router_008:sink_ready -> intel_niosv_m_0_dm_agent_agent:rp_ready
	wire          intel_niosv_m_0_dm_agent_agent_rp_startofpacket;                      // intel_niosv_m_0_dm_agent_agent:rp_startofpacket -> router_008:sink_startofpacket
	wire          intel_niosv_m_0_dm_agent_agent_rp_endofpacket;                        // intel_niosv_m_0_dm_agent_agent:rp_endofpacket -> router_008:sink_endofpacket
	wire          router_008_src_valid;                                                 // router_008:src_valid -> rsp_demux_004:sink_valid
	wire  [141:0] router_008_src_data;                                                  // router_008:src_data -> rsp_demux_004:sink_data
	wire          router_008_src_ready;                                                 // rsp_demux_004:sink_ready -> router_008:src_ready
	wire    [6:0] router_008_src_channel;                                               // router_008:src_channel -> rsp_demux_004:sink_channel
	wire          router_008_src_startofpacket;                                         // router_008:src_startofpacket -> rsp_demux_004:sink_startofpacket
	wire          router_008_src_endofpacket;                                           // router_008:src_endofpacket -> rsp_demux_004:sink_endofpacket
	wire          pio_0_s1_agent_rp_valid;                                              // pio_0_s1_agent:rp_valid -> router_009:sink_valid
	wire  [141:0] pio_0_s1_agent_rp_data;                                               // pio_0_s1_agent:rp_data -> router_009:sink_data
	wire          pio_0_s1_agent_rp_ready;                                              // router_009:sink_ready -> pio_0_s1_agent:rp_ready
	wire          pio_0_s1_agent_rp_startofpacket;                                      // pio_0_s1_agent:rp_startofpacket -> router_009:sink_startofpacket
	wire          pio_0_s1_agent_rp_endofpacket;                                        // pio_0_s1_agent:rp_endofpacket -> router_009:sink_endofpacket
	wire          router_009_src_valid;                                                 // router_009:src_valid -> rsp_demux_005:sink_valid
	wire  [141:0] router_009_src_data;                                                  // router_009:src_data -> rsp_demux_005:sink_data
	wire          router_009_src_ready;                                                 // rsp_demux_005:sink_ready -> router_009:src_ready
	wire    [6:0] router_009_src_channel;                                               // router_009:src_channel -> rsp_demux_005:sink_channel
	wire          router_009_src_startofpacket;                                         // router_009:src_startofpacket -> rsp_demux_005:sink_startofpacket
	wire          router_009_src_endofpacket;                                           // router_009:src_endofpacket -> rsp_demux_005:sink_endofpacket
	wire          intel_niosv_m_0_timer_sw_agent_agent_rp_valid;                        // intel_niosv_m_0_timer_sw_agent_agent:rp_valid -> router_010:sink_valid
	wire  [141:0] intel_niosv_m_0_timer_sw_agent_agent_rp_data;                         // intel_niosv_m_0_timer_sw_agent_agent:rp_data -> router_010:sink_data
	wire          intel_niosv_m_0_timer_sw_agent_agent_rp_ready;                        // router_010:sink_ready -> intel_niosv_m_0_timer_sw_agent_agent:rp_ready
	wire          intel_niosv_m_0_timer_sw_agent_agent_rp_startofpacket;                // intel_niosv_m_0_timer_sw_agent_agent:rp_startofpacket -> router_010:sink_startofpacket
	wire          intel_niosv_m_0_timer_sw_agent_agent_rp_endofpacket;                  // intel_niosv_m_0_timer_sw_agent_agent:rp_endofpacket -> router_010:sink_endofpacket
	wire          router_010_src_valid;                                                 // router_010:src_valid -> rsp_demux_006:sink_valid
	wire  [141:0] router_010_src_data;                                                  // router_010:src_data -> rsp_demux_006:sink_data
	wire          router_010_src_ready;                                                 // rsp_demux_006:sink_ready -> router_010:src_ready
	wire    [6:0] router_010_src_channel;                                               // router_010:src_channel -> rsp_demux_006:sink_channel
	wire          router_010_src_startofpacket;                                         // router_010:src_startofpacket -> rsp_demux_006:sink_startofpacket
	wire          router_010_src_endofpacket;                                           // router_010:src_endofpacket -> rsp_demux_006:sink_endofpacket
	wire          router_002_src_valid;                                                 // router_002:src_valid -> intel_niosv_m_0_instruction_manager_wr_limiter:cmd_sink_valid
	wire  [141:0] router_002_src_data;                                                  // router_002:src_data -> intel_niosv_m_0_instruction_manager_wr_limiter:cmd_sink_data
	wire          router_002_src_ready;                                                 // intel_niosv_m_0_instruction_manager_wr_limiter:cmd_sink_ready -> router_002:src_ready
	wire    [6:0] router_002_src_channel;                                               // router_002:src_channel -> intel_niosv_m_0_instruction_manager_wr_limiter:cmd_sink_channel
	wire          router_002_src_startofpacket;                                         // router_002:src_startofpacket -> intel_niosv_m_0_instruction_manager_wr_limiter:cmd_sink_startofpacket
	wire          router_002_src_endofpacket;                                           // router_002:src_endofpacket -> intel_niosv_m_0_instruction_manager_wr_limiter:cmd_sink_endofpacket
	wire  [141:0] intel_niosv_m_0_instruction_manager_wr_limiter_cmd_src_data;          // intel_niosv_m_0_instruction_manager_wr_limiter:cmd_src_data -> cmd_demux_002:sink_data
	wire          intel_niosv_m_0_instruction_manager_wr_limiter_cmd_src_ready;         // cmd_demux_002:sink_ready -> intel_niosv_m_0_instruction_manager_wr_limiter:cmd_src_ready
	wire    [6:0] intel_niosv_m_0_instruction_manager_wr_limiter_cmd_src_channel;       // intel_niosv_m_0_instruction_manager_wr_limiter:cmd_src_channel -> cmd_demux_002:sink_channel
	wire          intel_niosv_m_0_instruction_manager_wr_limiter_cmd_src_startofpacket; // intel_niosv_m_0_instruction_manager_wr_limiter:cmd_src_startofpacket -> cmd_demux_002:sink_startofpacket
	wire          intel_niosv_m_0_instruction_manager_wr_limiter_cmd_src_endofpacket;   // intel_niosv_m_0_instruction_manager_wr_limiter:cmd_src_endofpacket -> cmd_demux_002:sink_endofpacket
	wire          rsp_mux_002_src_valid;                                                // rsp_mux_002:src_valid -> intel_niosv_m_0_instruction_manager_wr_limiter:rsp_sink_valid
	wire  [141:0] rsp_mux_002_src_data;                                                 // rsp_mux_002:src_data -> intel_niosv_m_0_instruction_manager_wr_limiter:rsp_sink_data
	wire          rsp_mux_002_src_ready;                                                // intel_niosv_m_0_instruction_manager_wr_limiter:rsp_sink_ready -> rsp_mux_002:src_ready
	wire    [6:0] rsp_mux_002_src_channel;                                              // rsp_mux_002:src_channel -> intel_niosv_m_0_instruction_manager_wr_limiter:rsp_sink_channel
	wire          rsp_mux_002_src_startofpacket;                                        // rsp_mux_002:src_startofpacket -> intel_niosv_m_0_instruction_manager_wr_limiter:rsp_sink_startofpacket
	wire          rsp_mux_002_src_endofpacket;                                          // rsp_mux_002:src_endofpacket -> intel_niosv_m_0_instruction_manager_wr_limiter:rsp_sink_endofpacket
	wire          intel_niosv_m_0_instruction_manager_wr_limiter_rsp_src_valid;         // intel_niosv_m_0_instruction_manager_wr_limiter:rsp_src_valid -> intel_niosv_m_0_instruction_manager_agent:write_rp_valid
	wire  [141:0] intel_niosv_m_0_instruction_manager_wr_limiter_rsp_src_data;          // intel_niosv_m_0_instruction_manager_wr_limiter:rsp_src_data -> intel_niosv_m_0_instruction_manager_agent:write_rp_data
	wire          intel_niosv_m_0_instruction_manager_wr_limiter_rsp_src_ready;         // intel_niosv_m_0_instruction_manager_agent:write_rp_ready -> intel_niosv_m_0_instruction_manager_wr_limiter:rsp_src_ready
	wire    [6:0] intel_niosv_m_0_instruction_manager_wr_limiter_rsp_src_channel;       // intel_niosv_m_0_instruction_manager_wr_limiter:rsp_src_channel -> intel_niosv_m_0_instruction_manager_agent:write_rp_channel
	wire          intel_niosv_m_0_instruction_manager_wr_limiter_rsp_src_startofpacket; // intel_niosv_m_0_instruction_manager_wr_limiter:rsp_src_startofpacket -> intel_niosv_m_0_instruction_manager_agent:write_rp_startofpacket
	wire          intel_niosv_m_0_instruction_manager_wr_limiter_rsp_src_endofpacket;   // intel_niosv_m_0_instruction_manager_wr_limiter:rsp_src_endofpacket -> intel_niosv_m_0_instruction_manager_agent:write_rp_endofpacket
	wire          router_003_src_valid;                                                 // router_003:src_valid -> intel_niosv_m_0_instruction_manager_rd_limiter:cmd_sink_valid
	wire  [141:0] router_003_src_data;                                                  // router_003:src_data -> intel_niosv_m_0_instruction_manager_rd_limiter:cmd_sink_data
	wire          router_003_src_ready;                                                 // intel_niosv_m_0_instruction_manager_rd_limiter:cmd_sink_ready -> router_003:src_ready
	wire    [6:0] router_003_src_channel;                                               // router_003:src_channel -> intel_niosv_m_0_instruction_manager_rd_limiter:cmd_sink_channel
	wire          router_003_src_startofpacket;                                         // router_003:src_startofpacket -> intel_niosv_m_0_instruction_manager_rd_limiter:cmd_sink_startofpacket
	wire          router_003_src_endofpacket;                                           // router_003:src_endofpacket -> intel_niosv_m_0_instruction_manager_rd_limiter:cmd_sink_endofpacket
	wire  [141:0] intel_niosv_m_0_instruction_manager_rd_limiter_cmd_src_data;          // intel_niosv_m_0_instruction_manager_rd_limiter:cmd_src_data -> cmd_demux_003:sink_data
	wire          intel_niosv_m_0_instruction_manager_rd_limiter_cmd_src_ready;         // cmd_demux_003:sink_ready -> intel_niosv_m_0_instruction_manager_rd_limiter:cmd_src_ready
	wire    [6:0] intel_niosv_m_0_instruction_manager_rd_limiter_cmd_src_channel;       // intel_niosv_m_0_instruction_manager_rd_limiter:cmd_src_channel -> cmd_demux_003:sink_channel
	wire          intel_niosv_m_0_instruction_manager_rd_limiter_cmd_src_startofpacket; // intel_niosv_m_0_instruction_manager_rd_limiter:cmd_src_startofpacket -> cmd_demux_003:sink_startofpacket
	wire          intel_niosv_m_0_instruction_manager_rd_limiter_cmd_src_endofpacket;   // intel_niosv_m_0_instruction_manager_rd_limiter:cmd_src_endofpacket -> cmd_demux_003:sink_endofpacket
	wire          rsp_mux_003_src_valid;                                                // rsp_mux_003:src_valid -> intel_niosv_m_0_instruction_manager_rd_limiter:rsp_sink_valid
	wire  [141:0] rsp_mux_003_src_data;                                                 // rsp_mux_003:src_data -> intel_niosv_m_0_instruction_manager_rd_limiter:rsp_sink_data
	wire          rsp_mux_003_src_ready;                                                // intel_niosv_m_0_instruction_manager_rd_limiter:rsp_sink_ready -> rsp_mux_003:src_ready
	wire    [6:0] rsp_mux_003_src_channel;                                              // rsp_mux_003:src_channel -> intel_niosv_m_0_instruction_manager_rd_limiter:rsp_sink_channel
	wire          rsp_mux_003_src_startofpacket;                                        // rsp_mux_003:src_startofpacket -> intel_niosv_m_0_instruction_manager_rd_limiter:rsp_sink_startofpacket
	wire          rsp_mux_003_src_endofpacket;                                          // rsp_mux_003:src_endofpacket -> intel_niosv_m_0_instruction_manager_rd_limiter:rsp_sink_endofpacket
	wire          intel_niosv_m_0_instruction_manager_rd_limiter_rsp_src_valid;         // intel_niosv_m_0_instruction_manager_rd_limiter:rsp_src_valid -> intel_niosv_m_0_instruction_manager_agent:read_rp_valid
	wire  [141:0] intel_niosv_m_0_instruction_manager_rd_limiter_rsp_src_data;          // intel_niosv_m_0_instruction_manager_rd_limiter:rsp_src_data -> intel_niosv_m_0_instruction_manager_agent:read_rp_data
	wire          intel_niosv_m_0_instruction_manager_rd_limiter_rsp_src_ready;         // intel_niosv_m_0_instruction_manager_agent:read_rp_ready -> intel_niosv_m_0_instruction_manager_rd_limiter:rsp_src_ready
	wire    [6:0] intel_niosv_m_0_instruction_manager_rd_limiter_rsp_src_channel;       // intel_niosv_m_0_instruction_manager_rd_limiter:rsp_src_channel -> intel_niosv_m_0_instruction_manager_agent:read_rp_channel
	wire          intel_niosv_m_0_instruction_manager_rd_limiter_rsp_src_startofpacket; // intel_niosv_m_0_instruction_manager_rd_limiter:rsp_src_startofpacket -> intel_niosv_m_0_instruction_manager_agent:read_rp_startofpacket
	wire          intel_niosv_m_0_instruction_manager_rd_limiter_rsp_src_endofpacket;   // intel_niosv_m_0_instruction_manager_rd_limiter:rsp_src_endofpacket -> intel_niosv_m_0_instruction_manager_agent:read_rp_endofpacket
	wire          cmd_demux_src0_valid;                                                 // cmd_demux:src0_valid -> cmd_mux:sink0_valid
	wire  [141:0] cmd_demux_src0_data;                                                  // cmd_demux:src0_data -> cmd_mux:sink0_data
	wire          cmd_demux_src0_ready;                                                 // cmd_mux:sink0_ready -> cmd_demux:src0_ready
	wire    [6:0] cmd_demux_src0_channel;                                               // cmd_demux:src0_channel -> cmd_mux:sink0_channel
	wire          cmd_demux_src0_startofpacket;                                         // cmd_demux:src0_startofpacket -> cmd_mux:sink0_startofpacket
	wire          cmd_demux_src0_endofpacket;                                           // cmd_demux:src0_endofpacket -> cmd_mux:sink0_endofpacket
	wire          cmd_demux_src1_valid;                                                 // cmd_demux:src1_valid -> cmd_mux_001:sink0_valid
	wire  [141:0] cmd_demux_src1_data;                                                  // cmd_demux:src1_data -> cmd_mux_001:sink0_data
	wire          cmd_demux_src1_ready;                                                 // cmd_mux_001:sink0_ready -> cmd_demux:src1_ready
	wire    [6:0] cmd_demux_src1_channel;                                               // cmd_demux:src1_channel -> cmd_mux_001:sink0_channel
	wire          cmd_demux_src1_startofpacket;                                         // cmd_demux:src1_startofpacket -> cmd_mux_001:sink0_startofpacket
	wire          cmd_demux_src1_endofpacket;                                           // cmd_demux:src1_endofpacket -> cmd_mux_001:sink0_endofpacket
	wire          cmd_demux_src2_valid;                                                 // cmd_demux:src2_valid -> cmd_mux_003:sink0_valid
	wire  [141:0] cmd_demux_src2_data;                                                  // cmd_demux:src2_data -> cmd_mux_003:sink0_data
	wire          cmd_demux_src2_ready;                                                 // cmd_mux_003:sink0_ready -> cmd_demux:src2_ready
	wire    [6:0] cmd_demux_src2_channel;                                               // cmd_demux:src2_channel -> cmd_mux_003:sink0_channel
	wire          cmd_demux_src2_startofpacket;                                         // cmd_demux:src2_startofpacket -> cmd_mux_003:sink0_startofpacket
	wire          cmd_demux_src2_endofpacket;                                           // cmd_demux:src2_endofpacket -> cmd_mux_003:sink0_endofpacket
	wire          cmd_demux_src3_valid;                                                 // cmd_demux:src3_valid -> cmd_mux_004:sink0_valid
	wire  [141:0] cmd_demux_src3_data;                                                  // cmd_demux:src3_data -> cmd_mux_004:sink0_data
	wire          cmd_demux_src3_ready;                                                 // cmd_mux_004:sink0_ready -> cmd_demux:src3_ready
	wire    [6:0] cmd_demux_src3_channel;                                               // cmd_demux:src3_channel -> cmd_mux_004:sink0_channel
	wire          cmd_demux_src3_startofpacket;                                         // cmd_demux:src3_startofpacket -> cmd_mux_004:sink0_startofpacket
	wire          cmd_demux_src3_endofpacket;                                           // cmd_demux:src3_endofpacket -> cmd_mux_004:sink0_endofpacket
	wire          cmd_demux_src4_valid;                                                 // cmd_demux:src4_valid -> cmd_mux_005:sink0_valid
	wire  [141:0] cmd_demux_src4_data;                                                  // cmd_demux:src4_data -> cmd_mux_005:sink0_data
	wire          cmd_demux_src4_ready;                                                 // cmd_mux_005:sink0_ready -> cmd_demux:src4_ready
	wire    [6:0] cmd_demux_src4_channel;                                               // cmd_demux:src4_channel -> cmd_mux_005:sink0_channel
	wire          cmd_demux_src4_startofpacket;                                         // cmd_demux:src4_startofpacket -> cmd_mux_005:sink0_startofpacket
	wire          cmd_demux_src4_endofpacket;                                           // cmd_demux:src4_endofpacket -> cmd_mux_005:sink0_endofpacket
	wire          cmd_demux_src5_valid;                                                 // cmd_demux:src5_valid -> cmd_mux_006:sink0_valid
	wire  [141:0] cmd_demux_src5_data;                                                  // cmd_demux:src5_data -> cmd_mux_006:sink0_data
	wire          cmd_demux_src5_ready;                                                 // cmd_mux_006:sink0_ready -> cmd_demux:src5_ready
	wire    [6:0] cmd_demux_src5_channel;                                               // cmd_demux:src5_channel -> cmd_mux_006:sink0_channel
	wire          cmd_demux_src5_startofpacket;                                         // cmd_demux:src5_startofpacket -> cmd_mux_006:sink0_startofpacket
	wire          cmd_demux_src5_endofpacket;                                           // cmd_demux:src5_endofpacket -> cmd_mux_006:sink0_endofpacket
	wire          cmd_demux_001_src0_valid;                                             // cmd_demux_001:src0_valid -> cmd_mux:sink1_valid
	wire  [141:0] cmd_demux_001_src0_data;                                              // cmd_demux_001:src0_data -> cmd_mux:sink1_data
	wire          cmd_demux_001_src0_ready;                                             // cmd_mux:sink1_ready -> cmd_demux_001:src0_ready
	wire    [6:0] cmd_demux_001_src0_channel;                                           // cmd_demux_001:src0_channel -> cmd_mux:sink1_channel
	wire          cmd_demux_001_src0_startofpacket;                                     // cmd_demux_001:src0_startofpacket -> cmd_mux:sink1_startofpacket
	wire          cmd_demux_001_src0_endofpacket;                                       // cmd_demux_001:src0_endofpacket -> cmd_mux:sink1_endofpacket
	wire          cmd_demux_001_src1_valid;                                             // cmd_demux_001:src1_valid -> cmd_mux_002:sink0_valid
	wire  [141:0] cmd_demux_001_src1_data;                                              // cmd_demux_001:src1_data -> cmd_mux_002:sink0_data
	wire          cmd_demux_001_src1_ready;                                             // cmd_mux_002:sink0_ready -> cmd_demux_001:src1_ready
	wire    [6:0] cmd_demux_001_src1_channel;                                           // cmd_demux_001:src1_channel -> cmd_mux_002:sink0_channel
	wire          cmd_demux_001_src1_startofpacket;                                     // cmd_demux_001:src1_startofpacket -> cmd_mux_002:sink0_startofpacket
	wire          cmd_demux_001_src1_endofpacket;                                       // cmd_demux_001:src1_endofpacket -> cmd_mux_002:sink0_endofpacket
	wire          cmd_demux_001_src2_valid;                                             // cmd_demux_001:src2_valid -> cmd_mux_003:sink1_valid
	wire  [141:0] cmd_demux_001_src2_data;                                              // cmd_demux_001:src2_data -> cmd_mux_003:sink1_data
	wire          cmd_demux_001_src2_ready;                                             // cmd_mux_003:sink1_ready -> cmd_demux_001:src2_ready
	wire    [6:0] cmd_demux_001_src2_channel;                                           // cmd_demux_001:src2_channel -> cmd_mux_003:sink1_channel
	wire          cmd_demux_001_src2_startofpacket;                                     // cmd_demux_001:src2_startofpacket -> cmd_mux_003:sink1_startofpacket
	wire          cmd_demux_001_src2_endofpacket;                                       // cmd_demux_001:src2_endofpacket -> cmd_mux_003:sink1_endofpacket
	wire          cmd_demux_001_src3_valid;                                             // cmd_demux_001:src3_valid -> cmd_mux_004:sink1_valid
	wire  [141:0] cmd_demux_001_src3_data;                                              // cmd_demux_001:src3_data -> cmd_mux_004:sink1_data
	wire          cmd_demux_001_src3_ready;                                             // cmd_mux_004:sink1_ready -> cmd_demux_001:src3_ready
	wire    [6:0] cmd_demux_001_src3_channel;                                           // cmd_demux_001:src3_channel -> cmd_mux_004:sink1_channel
	wire          cmd_demux_001_src3_startofpacket;                                     // cmd_demux_001:src3_startofpacket -> cmd_mux_004:sink1_startofpacket
	wire          cmd_demux_001_src3_endofpacket;                                       // cmd_demux_001:src3_endofpacket -> cmd_mux_004:sink1_endofpacket
	wire          cmd_demux_001_src4_valid;                                             // cmd_demux_001:src4_valid -> cmd_mux_005:sink1_valid
	wire  [141:0] cmd_demux_001_src4_data;                                              // cmd_demux_001:src4_data -> cmd_mux_005:sink1_data
	wire          cmd_demux_001_src4_ready;                                             // cmd_mux_005:sink1_ready -> cmd_demux_001:src4_ready
	wire    [6:0] cmd_demux_001_src4_channel;                                           // cmd_demux_001:src4_channel -> cmd_mux_005:sink1_channel
	wire          cmd_demux_001_src4_startofpacket;                                     // cmd_demux_001:src4_startofpacket -> cmd_mux_005:sink1_startofpacket
	wire          cmd_demux_001_src4_endofpacket;                                       // cmd_demux_001:src4_endofpacket -> cmd_mux_005:sink1_endofpacket
	wire          cmd_demux_001_src5_valid;                                             // cmd_demux_001:src5_valid -> cmd_mux_006:sink1_valid
	wire  [141:0] cmd_demux_001_src5_data;                                              // cmd_demux_001:src5_data -> cmd_mux_006:sink1_data
	wire          cmd_demux_001_src5_ready;                                             // cmd_mux_006:sink1_ready -> cmd_demux_001:src5_ready
	wire    [6:0] cmd_demux_001_src5_channel;                                           // cmd_demux_001:src5_channel -> cmd_mux_006:sink1_channel
	wire          cmd_demux_001_src5_startofpacket;                                     // cmd_demux_001:src5_startofpacket -> cmd_mux_006:sink1_startofpacket
	wire          cmd_demux_001_src5_endofpacket;                                       // cmd_demux_001:src5_endofpacket -> cmd_mux_006:sink1_endofpacket
	wire          cmd_demux_002_src0_valid;                                             // cmd_demux_002:src0_valid -> cmd_mux_001:sink1_valid
	wire  [141:0] cmd_demux_002_src0_data;                                              // cmd_demux_002:src0_data -> cmd_mux_001:sink1_data
	wire          cmd_demux_002_src0_ready;                                             // cmd_mux_001:sink1_ready -> cmd_demux_002:src0_ready
	wire    [6:0] cmd_demux_002_src0_channel;                                           // cmd_demux_002:src0_channel -> cmd_mux_001:sink1_channel
	wire          cmd_demux_002_src0_startofpacket;                                     // cmd_demux_002:src0_startofpacket -> cmd_mux_001:sink1_startofpacket
	wire          cmd_demux_002_src0_endofpacket;                                       // cmd_demux_002:src0_endofpacket -> cmd_mux_001:sink1_endofpacket
	wire          cmd_demux_002_src1_valid;                                             // cmd_demux_002:src1_valid -> cmd_mux_004:sink2_valid
	wire  [141:0] cmd_demux_002_src1_data;                                              // cmd_demux_002:src1_data -> cmd_mux_004:sink2_data
	wire          cmd_demux_002_src1_ready;                                             // cmd_mux_004:sink2_ready -> cmd_demux_002:src1_ready
	wire    [6:0] cmd_demux_002_src1_channel;                                           // cmd_demux_002:src1_channel -> cmd_mux_004:sink2_channel
	wire          cmd_demux_002_src1_startofpacket;                                     // cmd_demux_002:src1_startofpacket -> cmd_mux_004:sink2_startofpacket
	wire          cmd_demux_002_src1_endofpacket;                                       // cmd_demux_002:src1_endofpacket -> cmd_mux_004:sink2_endofpacket
	wire          cmd_demux_003_src0_valid;                                             // cmd_demux_003:src0_valid -> cmd_mux_002:sink1_valid
	wire  [141:0] cmd_demux_003_src0_data;                                              // cmd_demux_003:src0_data -> cmd_mux_002:sink1_data
	wire          cmd_demux_003_src0_ready;                                             // cmd_mux_002:sink1_ready -> cmd_demux_003:src0_ready
	wire    [6:0] cmd_demux_003_src0_channel;                                           // cmd_demux_003:src0_channel -> cmd_mux_002:sink1_channel
	wire          cmd_demux_003_src0_startofpacket;                                     // cmd_demux_003:src0_startofpacket -> cmd_mux_002:sink1_startofpacket
	wire          cmd_demux_003_src0_endofpacket;                                       // cmd_demux_003:src0_endofpacket -> cmd_mux_002:sink1_endofpacket
	wire          cmd_demux_003_src1_valid;                                             // cmd_demux_003:src1_valid -> cmd_mux_004:sink3_valid
	wire  [141:0] cmd_demux_003_src1_data;                                              // cmd_demux_003:src1_data -> cmd_mux_004:sink3_data
	wire          cmd_demux_003_src1_ready;                                             // cmd_mux_004:sink3_ready -> cmd_demux_003:src1_ready
	wire    [6:0] cmd_demux_003_src1_channel;                                           // cmd_demux_003:src1_channel -> cmd_mux_004:sink3_channel
	wire          cmd_demux_003_src1_startofpacket;                                     // cmd_demux_003:src1_startofpacket -> cmd_mux_004:sink3_startofpacket
	wire          cmd_demux_003_src1_endofpacket;                                       // cmd_demux_003:src1_endofpacket -> cmd_mux_004:sink3_endofpacket
	wire          rsp_demux_src0_valid;                                                 // rsp_demux:src0_valid -> rsp_mux:sink0_valid
	wire  [141:0] rsp_demux_src0_data;                                                  // rsp_demux:src0_data -> rsp_mux:sink0_data
	wire          rsp_demux_src0_ready;                                                 // rsp_mux:sink0_ready -> rsp_demux:src0_ready
	wire    [6:0] rsp_demux_src0_channel;                                               // rsp_demux:src0_channel -> rsp_mux:sink0_channel
	wire          rsp_demux_src0_startofpacket;                                         // rsp_demux:src0_startofpacket -> rsp_mux:sink0_startofpacket
	wire          rsp_demux_src0_endofpacket;                                           // rsp_demux:src0_endofpacket -> rsp_mux:sink0_endofpacket
	wire          rsp_demux_src1_valid;                                                 // rsp_demux:src1_valid -> rsp_mux_001:sink0_valid
	wire  [141:0] rsp_demux_src1_data;                                                  // rsp_demux:src1_data -> rsp_mux_001:sink0_data
	wire          rsp_demux_src1_ready;                                                 // rsp_mux_001:sink0_ready -> rsp_demux:src1_ready
	wire    [6:0] rsp_demux_src1_channel;                                               // rsp_demux:src1_channel -> rsp_mux_001:sink0_channel
	wire          rsp_demux_src1_startofpacket;                                         // rsp_demux:src1_startofpacket -> rsp_mux_001:sink0_startofpacket
	wire          rsp_demux_src1_endofpacket;                                           // rsp_demux:src1_endofpacket -> rsp_mux_001:sink0_endofpacket
	wire          rsp_demux_001_src0_valid;                                             // rsp_demux_001:src0_valid -> rsp_mux:sink1_valid
	wire  [141:0] rsp_demux_001_src0_data;                                              // rsp_demux_001:src0_data -> rsp_mux:sink1_data
	wire          rsp_demux_001_src0_ready;                                             // rsp_mux:sink1_ready -> rsp_demux_001:src0_ready
	wire    [6:0] rsp_demux_001_src0_channel;                                           // rsp_demux_001:src0_channel -> rsp_mux:sink1_channel
	wire          rsp_demux_001_src0_startofpacket;                                     // rsp_demux_001:src0_startofpacket -> rsp_mux:sink1_startofpacket
	wire          rsp_demux_001_src0_endofpacket;                                       // rsp_demux_001:src0_endofpacket -> rsp_mux:sink1_endofpacket
	wire          rsp_demux_001_src1_valid;                                             // rsp_demux_001:src1_valid -> rsp_mux_002:sink0_valid
	wire  [141:0] rsp_demux_001_src1_data;                                              // rsp_demux_001:src1_data -> rsp_mux_002:sink0_data
	wire          rsp_demux_001_src1_ready;                                             // rsp_mux_002:sink0_ready -> rsp_demux_001:src1_ready
	wire    [6:0] rsp_demux_001_src1_channel;                                           // rsp_demux_001:src1_channel -> rsp_mux_002:sink0_channel
	wire          rsp_demux_001_src1_startofpacket;                                     // rsp_demux_001:src1_startofpacket -> rsp_mux_002:sink0_startofpacket
	wire          rsp_demux_001_src1_endofpacket;                                       // rsp_demux_001:src1_endofpacket -> rsp_mux_002:sink0_endofpacket
	wire          rsp_demux_002_src0_valid;                                             // rsp_demux_002:src0_valid -> rsp_mux_001:sink1_valid
	wire  [141:0] rsp_demux_002_src0_data;                                              // rsp_demux_002:src0_data -> rsp_mux_001:sink1_data
	wire          rsp_demux_002_src0_ready;                                             // rsp_mux_001:sink1_ready -> rsp_demux_002:src0_ready
	wire    [6:0] rsp_demux_002_src0_channel;                                           // rsp_demux_002:src0_channel -> rsp_mux_001:sink1_channel
	wire          rsp_demux_002_src0_startofpacket;                                     // rsp_demux_002:src0_startofpacket -> rsp_mux_001:sink1_startofpacket
	wire          rsp_demux_002_src0_endofpacket;                                       // rsp_demux_002:src0_endofpacket -> rsp_mux_001:sink1_endofpacket
	wire          rsp_demux_002_src1_valid;                                             // rsp_demux_002:src1_valid -> rsp_mux_003:sink0_valid
	wire  [141:0] rsp_demux_002_src1_data;                                              // rsp_demux_002:src1_data -> rsp_mux_003:sink0_data
	wire          rsp_demux_002_src1_ready;                                             // rsp_mux_003:sink0_ready -> rsp_demux_002:src1_ready
	wire    [6:0] rsp_demux_002_src1_channel;                                           // rsp_demux_002:src1_channel -> rsp_mux_003:sink0_channel
	wire          rsp_demux_002_src1_startofpacket;                                     // rsp_demux_002:src1_startofpacket -> rsp_mux_003:sink0_startofpacket
	wire          rsp_demux_002_src1_endofpacket;                                       // rsp_demux_002:src1_endofpacket -> rsp_mux_003:sink0_endofpacket
	wire          rsp_demux_003_src0_valid;                                             // rsp_demux_003:src0_valid -> rsp_mux:sink2_valid
	wire  [141:0] rsp_demux_003_src0_data;                                              // rsp_demux_003:src0_data -> rsp_mux:sink2_data
	wire          rsp_demux_003_src0_ready;                                             // rsp_mux:sink2_ready -> rsp_demux_003:src0_ready
	wire    [6:0] rsp_demux_003_src0_channel;                                           // rsp_demux_003:src0_channel -> rsp_mux:sink2_channel
	wire          rsp_demux_003_src0_startofpacket;                                     // rsp_demux_003:src0_startofpacket -> rsp_mux:sink2_startofpacket
	wire          rsp_demux_003_src0_endofpacket;                                       // rsp_demux_003:src0_endofpacket -> rsp_mux:sink2_endofpacket
	wire          rsp_demux_003_src1_valid;                                             // rsp_demux_003:src1_valid -> rsp_mux_001:sink2_valid
	wire  [141:0] rsp_demux_003_src1_data;                                              // rsp_demux_003:src1_data -> rsp_mux_001:sink2_data
	wire          rsp_demux_003_src1_ready;                                             // rsp_mux_001:sink2_ready -> rsp_demux_003:src1_ready
	wire    [6:0] rsp_demux_003_src1_channel;                                           // rsp_demux_003:src1_channel -> rsp_mux_001:sink2_channel
	wire          rsp_demux_003_src1_startofpacket;                                     // rsp_demux_003:src1_startofpacket -> rsp_mux_001:sink2_startofpacket
	wire          rsp_demux_003_src1_endofpacket;                                       // rsp_demux_003:src1_endofpacket -> rsp_mux_001:sink2_endofpacket
	wire          rsp_demux_004_src0_valid;                                             // rsp_demux_004:src0_valid -> rsp_mux:sink3_valid
	wire  [141:0] rsp_demux_004_src0_data;                                              // rsp_demux_004:src0_data -> rsp_mux:sink3_data
	wire          rsp_demux_004_src0_ready;                                             // rsp_mux:sink3_ready -> rsp_demux_004:src0_ready
	wire    [6:0] rsp_demux_004_src0_channel;                                           // rsp_demux_004:src0_channel -> rsp_mux:sink3_channel
	wire          rsp_demux_004_src0_startofpacket;                                     // rsp_demux_004:src0_startofpacket -> rsp_mux:sink3_startofpacket
	wire          rsp_demux_004_src0_endofpacket;                                       // rsp_demux_004:src0_endofpacket -> rsp_mux:sink3_endofpacket
	wire          rsp_demux_004_src1_valid;                                             // rsp_demux_004:src1_valid -> rsp_mux_001:sink3_valid
	wire  [141:0] rsp_demux_004_src1_data;                                              // rsp_demux_004:src1_data -> rsp_mux_001:sink3_data
	wire          rsp_demux_004_src1_ready;                                             // rsp_mux_001:sink3_ready -> rsp_demux_004:src1_ready
	wire    [6:0] rsp_demux_004_src1_channel;                                           // rsp_demux_004:src1_channel -> rsp_mux_001:sink3_channel
	wire          rsp_demux_004_src1_startofpacket;                                     // rsp_demux_004:src1_startofpacket -> rsp_mux_001:sink3_startofpacket
	wire          rsp_demux_004_src1_endofpacket;                                       // rsp_demux_004:src1_endofpacket -> rsp_mux_001:sink3_endofpacket
	wire          rsp_demux_004_src2_valid;                                             // rsp_demux_004:src2_valid -> rsp_mux_002:sink1_valid
	wire  [141:0] rsp_demux_004_src2_data;                                              // rsp_demux_004:src2_data -> rsp_mux_002:sink1_data
	wire          rsp_demux_004_src2_ready;                                             // rsp_mux_002:sink1_ready -> rsp_demux_004:src2_ready
	wire    [6:0] rsp_demux_004_src2_channel;                                           // rsp_demux_004:src2_channel -> rsp_mux_002:sink1_channel
	wire          rsp_demux_004_src2_startofpacket;                                     // rsp_demux_004:src2_startofpacket -> rsp_mux_002:sink1_startofpacket
	wire          rsp_demux_004_src2_endofpacket;                                       // rsp_demux_004:src2_endofpacket -> rsp_mux_002:sink1_endofpacket
	wire          rsp_demux_004_src3_valid;                                             // rsp_demux_004:src3_valid -> rsp_mux_003:sink1_valid
	wire  [141:0] rsp_demux_004_src3_data;                                              // rsp_demux_004:src3_data -> rsp_mux_003:sink1_data
	wire          rsp_demux_004_src3_ready;                                             // rsp_mux_003:sink1_ready -> rsp_demux_004:src3_ready
	wire    [6:0] rsp_demux_004_src3_channel;                                           // rsp_demux_004:src3_channel -> rsp_mux_003:sink1_channel
	wire          rsp_demux_004_src3_startofpacket;                                     // rsp_demux_004:src3_startofpacket -> rsp_mux_003:sink1_startofpacket
	wire          rsp_demux_004_src3_endofpacket;                                       // rsp_demux_004:src3_endofpacket -> rsp_mux_003:sink1_endofpacket
	wire          rsp_demux_005_src0_valid;                                             // rsp_demux_005:src0_valid -> rsp_mux:sink4_valid
	wire  [141:0] rsp_demux_005_src0_data;                                              // rsp_demux_005:src0_data -> rsp_mux:sink4_data
	wire          rsp_demux_005_src0_ready;                                             // rsp_mux:sink4_ready -> rsp_demux_005:src0_ready
	wire    [6:0] rsp_demux_005_src0_channel;                                           // rsp_demux_005:src0_channel -> rsp_mux:sink4_channel
	wire          rsp_demux_005_src0_startofpacket;                                     // rsp_demux_005:src0_startofpacket -> rsp_mux:sink4_startofpacket
	wire          rsp_demux_005_src0_endofpacket;                                       // rsp_demux_005:src0_endofpacket -> rsp_mux:sink4_endofpacket
	wire          rsp_demux_005_src1_valid;                                             // rsp_demux_005:src1_valid -> rsp_mux_001:sink4_valid
	wire  [141:0] rsp_demux_005_src1_data;                                              // rsp_demux_005:src1_data -> rsp_mux_001:sink4_data
	wire          rsp_demux_005_src1_ready;                                             // rsp_mux_001:sink4_ready -> rsp_demux_005:src1_ready
	wire    [6:0] rsp_demux_005_src1_channel;                                           // rsp_demux_005:src1_channel -> rsp_mux_001:sink4_channel
	wire          rsp_demux_005_src1_startofpacket;                                     // rsp_demux_005:src1_startofpacket -> rsp_mux_001:sink4_startofpacket
	wire          rsp_demux_005_src1_endofpacket;                                       // rsp_demux_005:src1_endofpacket -> rsp_mux_001:sink4_endofpacket
	wire          rsp_demux_006_src0_valid;                                             // rsp_demux_006:src0_valid -> rsp_mux:sink5_valid
	wire  [141:0] rsp_demux_006_src0_data;                                              // rsp_demux_006:src0_data -> rsp_mux:sink5_data
	wire          rsp_demux_006_src0_ready;                                             // rsp_mux:sink5_ready -> rsp_demux_006:src0_ready
	wire    [6:0] rsp_demux_006_src0_channel;                                           // rsp_demux_006:src0_channel -> rsp_mux:sink5_channel
	wire          rsp_demux_006_src0_startofpacket;                                     // rsp_demux_006:src0_startofpacket -> rsp_mux:sink5_startofpacket
	wire          rsp_demux_006_src0_endofpacket;                                       // rsp_demux_006:src0_endofpacket -> rsp_mux:sink5_endofpacket
	wire          rsp_demux_006_src1_valid;                                             // rsp_demux_006:src1_valid -> rsp_mux_001:sink5_valid
	wire  [141:0] rsp_demux_006_src1_data;                                              // rsp_demux_006:src1_data -> rsp_mux_001:sink5_data
	wire          rsp_demux_006_src1_ready;                                             // rsp_mux_001:sink5_ready -> rsp_demux_006:src1_ready
	wire    [6:0] rsp_demux_006_src1_channel;                                           // rsp_demux_006:src1_channel -> rsp_mux_001:sink5_channel
	wire          rsp_demux_006_src1_startofpacket;                                     // rsp_demux_006:src1_startofpacket -> rsp_mux_001:sink5_startofpacket
	wire          rsp_demux_006_src1_endofpacket;                                       // rsp_demux_006:src1_endofpacket -> rsp_mux_001:sink5_endofpacket
	wire    [6:0] intel_niosv_m_0_instruction_manager_wr_limiter_cmd_valid_data;        // intel_niosv_m_0_instruction_manager_wr_limiter:cmd_src_valid -> cmd_demux_002:sink_valid
	wire    [6:0] intel_niosv_m_0_instruction_manager_rd_limiter_cmd_valid_data;        // intel_niosv_m_0_instruction_manager_rd_limiter:cmd_src_valid -> cmd_demux_003:sink_valid

	qsys_top_altera_merlin_slave_translator_191_x56fcki #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0),
		.WAITREQUEST_ALLOWANCE          (0),
		.SYNC_RESET                     (1)
	) jtag_uart_0_avalon_jtag_slave_translator (
		.clk                    (iopll_0_outclk0_clk),                                                        //   input,   width = 1,                      clk.clk
		.reset                  (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,   width = 1,                    reset.reset
		.uav_address            (jtag_uart_0_avalon_jtag_slave_agent_m0_address),                             //   input,  width = 32, avalon_universal_slave_0.address
		.uav_burstcount         (jtag_uart_0_avalon_jtag_slave_agent_m0_burstcount),                          //   input,   width = 3,                         .burstcount
		.uav_read               (jtag_uart_0_avalon_jtag_slave_agent_m0_read),                                //   input,   width = 1,                         .read
		.uav_write              (jtag_uart_0_avalon_jtag_slave_agent_m0_write),                               //   input,   width = 1,                         .write
		.uav_waitrequest        (jtag_uart_0_avalon_jtag_slave_agent_m0_waitrequest),                         //  output,   width = 1,                         .waitrequest
		.uav_readdatavalid      (jtag_uart_0_avalon_jtag_slave_agent_m0_readdatavalid),                       //  output,   width = 1,                         .readdatavalid
		.uav_byteenable         (jtag_uart_0_avalon_jtag_slave_agent_m0_byteenable),                          //   input,   width = 4,                         .byteenable
		.uav_readdata           (jtag_uart_0_avalon_jtag_slave_agent_m0_readdata),                            //  output,  width = 32,                         .readdata
		.uav_writedata          (jtag_uart_0_avalon_jtag_slave_agent_m0_writedata),                           //   input,  width = 32,                         .writedata
		.uav_lock               (jtag_uart_0_avalon_jtag_slave_agent_m0_lock),                                //   input,   width = 1,                         .lock
		.uav_debugaccess        (jtag_uart_0_avalon_jtag_slave_agent_m0_debugaccess),                         //   input,   width = 1,                         .debugaccess
		.av_address             (jtag_uart_0_avalon_jtag_slave_address),                                      //  output,   width = 1,      avalon_anti_slave_0.address
		.av_write               (jtag_uart_0_avalon_jtag_slave_write),                                        //  output,   width = 1,                         .write
		.av_read                (jtag_uart_0_avalon_jtag_slave_read),                                         //  output,   width = 1,                         .read
		.av_readdata            (jtag_uart_0_avalon_jtag_slave_readdata),                                     //   input,  width = 32,                         .readdata
		.av_writedata           (jtag_uart_0_avalon_jtag_slave_writedata),                                    //  output,  width = 32,                         .writedata
		.av_waitrequest         (jtag_uart_0_avalon_jtag_slave_waitrequest),                                  //   input,   width = 1,                         .waitrequest
		.av_chipselect          (jtag_uart_0_avalon_jtag_slave_chipselect),                                   //  output,   width = 1,                         .chipselect
		.av_begintransfer       (),                                                                           // (terminated),                                       
		.av_beginbursttransfer  (),                                                                           // (terminated),                                       
		.av_burstcount          (),                                                                           // (terminated),                                       
		.av_byteenable          (),                                                                           // (terminated),                                       
		.av_readdatavalid       (1'b0),                                                                       // (terminated),                                       
		.av_writebyteenable     (),                                                                           // (terminated),                                       
		.av_lock                (),                                                                           // (terminated),                                       
		.av_clken               (),                                                                           // (terminated),                                       
		.uav_clken              (1'b0),                                                                       // (terminated),                                       
		.av_debugaccess         (),                                                                           // (terminated),                                       
		.av_outputenable        (),                                                                           // (terminated),                                       
		.uav_response           (),                                                                           // (terminated),                                       
		.av_response            (2'b00),                                                                      // (terminated),                                       
		.uav_writeresponsevalid (),                                                                           // (terminated),                                       
		.av_writeresponsevalid  (1'b0)                                                                        // (terminated),                                       
	);

	qsys_top_altera_merlin_axi_translator_1931_d46vvwa #(
		.USE_S0_AWID                       (1),
		.USE_S0_AWREGION                   (1),
		.USE_M0_AWREGION                   (0),
		.USE_S0_AWLEN                      (1),
		.USE_S0_AWSIZE                     (1),
		.USE_S0_AWBURST                    (1),
		.USE_S0_AWLOCK                     (1),
		.USE_M0_AWLOCK                     (0),
		.USE_S0_AWCACHE                    (1),
		.USE_M0_AWCACHE                    (0),
		.USE_M0_AWPROT                     (0),
		.USE_S0_AWQOS                      (1),
		.USE_M0_AWQOS                      (0),
		.USE_S0_WSTRB                      (1),
		.USE_M0_WLAST                      (1),
		.USE_S0_BID                        (1),
		.USE_S0_BRESP                      (1),
		.USE_M0_BRESP                      (1),
		.USE_S0_ARID                       (1),
		.USE_S0_ARREGION                   (1),
		.USE_M0_ARREGION                   (0),
		.USE_S0_ARLEN                      (1),
		.USE_S0_ARSIZE                     (1),
		.USE_S0_ARBURST                    (1),
		.USE_S0_ARLOCK                     (1),
		.USE_M0_ARLOCK                     (0),
		.USE_M0_ARCACHE                    (0),
		.USE_M0_ARQOS                      (0),
		.USE_M0_ARPROT                     (0),
		.USE_S0_ARCACHE                    (1),
		.USE_S0_ARQOS                      (1),
		.USE_S0_RID                        (1),
		.USE_S0_RRESP                      (1),
		.USE_M0_RRESP                      (1),
		.USE_S0_RLAST                      (1),
		.M0_ID_WIDTH                       (2),
		.DATA_WIDTH                        (32),
		.M0_SAI_WIDTH                      (4),
		.S0_SAI_WIDTH                      (4),
		.M0_USER_ADDRCHK_WIDTH             (4),
		.S0_USER_ADDRCHK_WIDTH             (4),
		.S0_ID_WIDTH                       (2),
		.M0_ADDR_WIDTH                     (20),
		.S0_WRITE_ADDR_USER_WIDTH          (1),
		.S0_READ_ADDR_USER_WIDTH           (1),
		.M0_WRITE_ADDR_USER_WIDTH          (1),
		.M0_READ_ADDR_USER_WIDTH           (1),
		.S0_WRITE_DATA_USER_WIDTH          (1),
		.S0_WRITE_RESPONSE_DATA_USER_WIDTH (1),
		.S0_READ_DATA_USER_WIDTH           (1),
		.M0_WRITE_DATA_USER_WIDTH          (1),
		.M0_WRITE_RESPONSE_DATA_USER_WIDTH (1),
		.M0_READ_DATA_USER_WIDTH           (1),
		.S0_ADDR_WIDTH                     (20),
		.USE_S0_AWUSER                     (1),
		.USE_S0_ARUSER                     (1),
		.USE_S0_WUSER                      (1),
		.USE_S0_RUSER                      (1),
		.USE_S0_BUSER                      (1),
		.USE_M0_AWUSER                     (0),
		.USE_M0_ARUSER                     (0),
		.USE_M0_WUSER                      (0),
		.USE_M0_RUSER                      (0),
		.USE_M0_BUSER                      (0),
		.M0_AXI_VERSION                    ("AXI4"),
		.M0_BURST_LENGTH_WIDTH             (8),
		.S0_BURST_LENGTH_WIDTH             (8),
		.M0_LOCK_WIDTH                     (1),
		.S0_LOCK_WIDTH                     (1),
		.S0_AXI_VERSION                    ("AXI4"),
		.ACE_LITE_SUPPORT                  (0),
		.USE_M0_AWUSER_ADDRCHK             (0),
		.USE_M0_AWUSER_SAI                 (0),
		.USE_M0_ARUSER_ADDRCHK             (0),
		.USE_M0_ARUSER_SAI                 (0),
		.USE_M0_WUSER_DATACHK              (0),
		.USE_M0_WUSER_POISON               (0),
		.USE_M0_RUSER_DATACHK              (0),
		.USE_M0_RUSER_POISON               (0),
		.USE_S0_AWUSER_ADDRCHK             (0),
		.USE_S0_AWUSER_SAI                 (0),
		.USE_S0_ARUSER_ADDRCHK             (0),
		.USE_S0_ARUSER_SAI                 (0),
		.USE_S0_WUSER_DATACHK              (0),
		.USE_S0_WUSER_POISON               (0),
		.USE_S0_RUSER_DATACHK              (0),
		.USE_S0_RUSER_POISON               (0),
		.ROLE_BASED_USER                   (0)
	) intel_onchip_memory_0_axi_s1_translator (
		.aclk              (iopll_0_outclk0_clk),                                                         //   input,   width = 1,       clk.clk
		.aresetn           (~jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,   width = 1, clk_reset.reset_n
		.m0_awid           (intel_onchip_memory_0_axi_s1_awid),                                           //  output,   width = 2,        m0.awid
		.m0_awaddr         (intel_onchip_memory_0_axi_s1_awaddr),                                         //  output,  width = 20,          .awaddr
		.m0_awlen          (intel_onchip_memory_0_axi_s1_awlen),                                          //  output,   width = 8,          .awlen
		.m0_awsize         (intel_onchip_memory_0_axi_s1_awsize),                                         //  output,   width = 3,          .awsize
		.m0_awburst        (intel_onchip_memory_0_axi_s1_awburst),                                        //  output,   width = 2,          .awburst
		.m0_awvalid        (intel_onchip_memory_0_axi_s1_awvalid),                                        //  output,   width = 1,          .awvalid
		.m0_awready        (intel_onchip_memory_0_axi_s1_awready),                                        //   input,   width = 1,          .awready
		.m0_wdata          (intel_onchip_memory_0_axi_s1_wdata),                                          //  output,  width = 32,          .wdata
		.m0_wstrb          (intel_onchip_memory_0_axi_s1_wstrb),                                          //  output,   width = 4,          .wstrb
		.m0_wlast          (intel_onchip_memory_0_axi_s1_wlast),                                          //  output,   width = 1,          .wlast
		.m0_wvalid         (intel_onchip_memory_0_axi_s1_wvalid),                                         //  output,   width = 1,          .wvalid
		.m0_wready         (intel_onchip_memory_0_axi_s1_wready),                                         //   input,   width = 1,          .wready
		.m0_bid            (intel_onchip_memory_0_axi_s1_bid),                                            //   input,   width = 2,          .bid
		.m0_bresp          (intel_onchip_memory_0_axi_s1_bresp),                                          //   input,   width = 2,          .bresp
		.m0_bvalid         (intel_onchip_memory_0_axi_s1_bvalid),                                         //   input,   width = 1,          .bvalid
		.m0_bready         (intel_onchip_memory_0_axi_s1_bready),                                         //  output,   width = 1,          .bready
		.m0_arid           (intel_onchip_memory_0_axi_s1_arid),                                           //  output,   width = 2,          .arid
		.m0_araddr         (intel_onchip_memory_0_axi_s1_araddr),                                         //  output,  width = 20,          .araddr
		.m0_arlen          (intel_onchip_memory_0_axi_s1_arlen),                                          //  output,   width = 8,          .arlen
		.m0_arsize         (intel_onchip_memory_0_axi_s1_arsize),                                         //  output,   width = 3,          .arsize
		.m0_arburst        (intel_onchip_memory_0_axi_s1_arburst),                                        //  output,   width = 2,          .arburst
		.m0_arvalid        (intel_onchip_memory_0_axi_s1_arvalid),                                        //  output,   width = 1,          .arvalid
		.m0_arready        (intel_onchip_memory_0_axi_s1_arready),                                        //   input,   width = 1,          .arready
		.m0_rid            (intel_onchip_memory_0_axi_s1_rid),                                            //   input,   width = 2,          .rid
		.m0_rdata          (intel_onchip_memory_0_axi_s1_rdata),                                          //   input,  width = 32,          .rdata
		.m0_rresp          (intel_onchip_memory_0_axi_s1_rresp),                                          //   input,   width = 2,          .rresp
		.m0_rlast          (intel_onchip_memory_0_axi_s1_rlast),                                          //   input,   width = 1,          .rlast
		.m0_rvalid         (intel_onchip_memory_0_axi_s1_rvalid),                                         //   input,   width = 1,          .rvalid
		.m0_rready         (intel_onchip_memory_0_axi_s1_rready),                                         //  output,   width = 1,          .rready
		.s0_awid           (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awid),                   //   input,   width = 2,        s0.awid
		.s0_awaddr         (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awaddr),                 //   input,  width = 20,          .awaddr
		.s0_awlen          (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awlen),                  //   input,   width = 8,          .awlen
		.s0_awsize         (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awsize),                 //   input,   width = 3,          .awsize
		.s0_awburst        (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awburst),                //   input,   width = 2,          .awburst
		.s0_awlock         (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awlock),                 //   input,   width = 1,          .awlock
		.s0_awcache        (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awcache),                //   input,   width = 4,          .awcache
		.s0_awprot         (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awprot),                 //   input,   width = 3,          .awprot
		.s0_awuser         (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awuser),                 //   input,   width = 1,          .awuser
		.s0_awqos          (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awqos),                  //   input,   width = 4,          .awqos
		.s0_awregion       (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awregion),               //   input,   width = 4,          .awregion
		.s0_awvalid        (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awvalid),                //   input,   width = 1,          .awvalid
		.s0_awready        (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awready),                //  output,   width = 1,          .awready
		.s0_wdata          (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_wdata),                  //   input,  width = 32,          .wdata
		.s0_wstrb          (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_wstrb),                  //   input,   width = 4,          .wstrb
		.s0_wlast          (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_wlast),                  //   input,   width = 1,          .wlast
		.s0_wvalid         (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_wvalid),                 //   input,   width = 1,          .wvalid
		.s0_wuser          (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_wuser),                  //   input,   width = 1,          .wuser
		.s0_wready         (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_wready),                 //  output,   width = 1,          .wready
		.s0_bid            (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_bid),                    //  output,   width = 2,          .bid
		.s0_bresp          (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_bresp),                  //  output,   width = 2,          .bresp
		.s0_buser          (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_buser),                  //  output,   width = 1,          .buser
		.s0_bvalid         (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_bvalid),                 //  output,   width = 1,          .bvalid
		.s0_bready         (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_bready),                 //   input,   width = 1,          .bready
		.s0_arid           (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arid),                   //   input,   width = 2,          .arid
		.s0_araddr         (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_araddr),                 //   input,  width = 20,          .araddr
		.s0_arlen          (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arlen),                  //   input,   width = 8,          .arlen
		.s0_arsize         (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arsize),                 //   input,   width = 3,          .arsize
		.s0_arburst        (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arburst),                //   input,   width = 2,          .arburst
		.s0_arlock         (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arlock),                 //   input,   width = 1,          .arlock
		.s0_arcache        (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arcache),                //   input,   width = 4,          .arcache
		.s0_arprot         (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arprot),                 //   input,   width = 3,          .arprot
		.s0_aruser         (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_aruser),                 //   input,   width = 1,          .aruser
		.s0_arqos          (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arqos),                  //   input,   width = 4,          .arqos
		.s0_arregion       (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arregion),               //   input,   width = 4,          .arregion
		.s0_arvalid        (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arvalid),                //   input,   width = 1,          .arvalid
		.s0_arready        (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arready),                //  output,   width = 1,          .arready
		.s0_rid            (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_rid),                    //  output,   width = 2,          .rid
		.s0_rdata          (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_rdata),                  //  output,  width = 32,          .rdata
		.s0_rresp          (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_rresp),                  //  output,   width = 2,          .rresp
		.s0_rlast          (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_rlast),                  //  output,   width = 1,          .rlast
		.s0_rvalid         (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_rvalid),                 //  output,   width = 1,          .rvalid
		.s0_rready         (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_rready),                 //   input,   width = 1,          .rready
		.s0_ruser          (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_ruser),                  //  output,   width = 1,          .ruser
		.m0_awlock         (),                                                                            // (terminated),                        
		.m0_awcache        (),                                                                            // (terminated),                        
		.m0_awprot         (),                                                                            // (terminated),                        
		.m0_awuser         (),                                                                            // (terminated),                        
		.m0_awuser_addrchk (),                                                                            // (terminated),                        
		.m0_awuser_sai     (),                                                                            // (terminated),                        
		.m0_awqos          (),                                                                            // (terminated),                        
		.m0_awregion       (),                                                                            // (terminated),                        
		.m0_wuser          (),                                                                            // (terminated),                        
		.m0_wuser_datachk  (),                                                                            // (terminated),                        
		.m0_wuser_poison   (),                                                                            // (terminated),                        
		.m0_buser          (1'b0),                                                                        // (terminated),                        
		.m0_arlock         (),                                                                            // (terminated),                        
		.m0_arcache        (),                                                                            // (terminated),                        
		.m0_arprot         (),                                                                            // (terminated),                        
		.m0_aruser         (),                                                                            // (terminated),                        
		.m0_aruser_addrchk (),                                                                            // (terminated),                        
		.m0_aruser_sai     (),                                                                            // (terminated),                        
		.m0_arqos          (),                                                                            // (terminated),                        
		.m0_arregion       (),                                                                            // (terminated),                        
		.m0_ruser          (1'b0),                                                                        // (terminated),                        
		.m0_ruser_datachk  (4'b0000),                                                                     // (terminated),                        
		.m0_ruser_poison   (1'b0),                                                                        // (terminated),                        
		.s0_awuser_addrchk (4'b0000),                                                                     // (terminated),                        
		.s0_awuser_sai     (4'b0000),                                                                     // (terminated),                        
		.s0_wuser_datachk  (4'b0000),                                                                     // (terminated),                        
		.s0_wuser_poison   (1'b0),                                                                        // (terminated),                        
		.s0_aruser_addrchk (4'b0000),                                                                     // (terminated),                        
		.s0_aruser_sai     (4'b0000),                                                                     // (terminated),                        
		.s0_ruser_datachk  (),                                                                            // (terminated),                        
		.s0_ruser_poison   (),                                                                            // (terminated),                        
		.s0_wid            (2'b00),                                                                       // (terminated),                        
		.s0_ardomain       (2'b00),                                                                       // (terminated),                        
		.s0_arsnoop        (4'b0000),                                                                     // (terminated),                        
		.s0_arbar          (2'b00),                                                                       // (terminated),                        
		.s0_awdomain       (2'b00),                                                                       // (terminated),                        
		.s0_awsnoop        (3'b000),                                                                      // (terminated),                        
		.s0_awbar          (2'b00),                                                                       // (terminated),                        
		.s0_awunique       (1'b0),                                                                        // (terminated),                        
		.m0_wid            (),                                                                            // (terminated),                        
		.m0_ardomain       (),                                                                            // (terminated),                        
		.m0_arsnoop        (),                                                                            // (terminated),                        
		.m0_arbar          (),                                                                            // (terminated),                        
		.m0_awdomain       (),                                                                            // (terminated),                        
		.m0_awsnoop        (),                                                                            // (terminated),                        
		.m0_awbar          (),                                                                            // (terminated),                        
		.m0_awunique       ()                                                                             // (terminated),                        
	);

	qsys_top_altera_merlin_slave_translator_191_x56fcki #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0),
		.WAITREQUEST_ALLOWANCE          (0),
		.SYNC_RESET                     (1)
	) sysid_qsys_0_control_slave_translator (
		.clk                    (iopll_0_outclk0_clk),                                                        //   input,   width = 1,                      clk.clk
		.reset                  (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,   width = 1,                    reset.reset
		.uav_address            (sysid_qsys_0_control_slave_agent_m0_address),                                //   input,  width = 32, avalon_universal_slave_0.address
		.uav_burstcount         (sysid_qsys_0_control_slave_agent_m0_burstcount),                             //   input,   width = 3,                         .burstcount
		.uav_read               (sysid_qsys_0_control_slave_agent_m0_read),                                   //   input,   width = 1,                         .read
		.uav_write              (sysid_qsys_0_control_slave_agent_m0_write),                                  //   input,   width = 1,                         .write
		.uav_waitrequest        (sysid_qsys_0_control_slave_agent_m0_waitrequest),                            //  output,   width = 1,                         .waitrequest
		.uav_readdatavalid      (sysid_qsys_0_control_slave_agent_m0_readdatavalid),                          //  output,   width = 1,                         .readdatavalid
		.uav_byteenable         (sysid_qsys_0_control_slave_agent_m0_byteenable),                             //   input,   width = 4,                         .byteenable
		.uav_readdata           (sysid_qsys_0_control_slave_agent_m0_readdata),                               //  output,  width = 32,                         .readdata
		.uav_writedata          (sysid_qsys_0_control_slave_agent_m0_writedata),                              //   input,  width = 32,                         .writedata
		.uav_lock               (sysid_qsys_0_control_slave_agent_m0_lock),                                   //   input,   width = 1,                         .lock
		.uav_debugaccess        (sysid_qsys_0_control_slave_agent_m0_debugaccess),                            //   input,   width = 1,                         .debugaccess
		.av_address             (sysid_qsys_0_control_slave_address),                                         //  output,   width = 1,      avalon_anti_slave_0.address
		.av_readdata            (sysid_qsys_0_control_slave_readdata),                                        //   input,  width = 32,                         .readdata
		.av_write               (),                                                                           // (terminated),                                       
		.av_read                (),                                                                           // (terminated),                                       
		.av_writedata           (),                                                                           // (terminated),                                       
		.av_begintransfer       (),                                                                           // (terminated),                                       
		.av_beginbursttransfer  (),                                                                           // (terminated),                                       
		.av_burstcount          (),                                                                           // (terminated),                                       
		.av_byteenable          (),                                                                           // (terminated),                                       
		.av_readdatavalid       (1'b0),                                                                       // (terminated),                                       
		.av_waitrequest         (1'b0),                                                                       // (terminated),                                       
		.av_writebyteenable     (),                                                                           // (terminated),                                       
		.av_lock                (),                                                                           // (terminated),                                       
		.av_chipselect          (),                                                                           // (terminated),                                       
		.av_clken               (),                                                                           // (terminated),                                       
		.uav_clken              (1'b0),                                                                       // (terminated),                                       
		.av_debugaccess         (),                                                                           // (terminated),                                       
		.av_outputenable        (),                                                                           // (terminated),                                       
		.uav_response           (),                                                                           // (terminated),                                       
		.av_response            (2'b00),                                                                      // (terminated),                                       
		.uav_writeresponsevalid (),                                                                           // (terminated),                                       
		.av_writeresponsevalid  (1'b0)                                                                        // (terminated),                                       
	);

	qsys_top_altera_merlin_slave_translator_191_x56fcki #(
		.AV_ADDRESS_W                   (16),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (1),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (1),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0),
		.WAITREQUEST_ALLOWANCE          (0),
		.SYNC_RESET                     (1)
	) intel_niosv_m_0_dm_agent_translator (
		.clk                    (iopll_0_outclk0_clk),                                                        //   input,   width = 1,                      clk.clk
		.reset                  (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,   width = 1,                    reset.reset
		.uav_address            (intel_niosv_m_0_dm_agent_agent_m0_address),                                  //   input,  width = 32, avalon_universal_slave_0.address
		.uav_burstcount         (intel_niosv_m_0_dm_agent_agent_m0_burstcount),                               //   input,   width = 3,                         .burstcount
		.uav_read               (intel_niosv_m_0_dm_agent_agent_m0_read),                                     //   input,   width = 1,                         .read
		.uav_write              (intel_niosv_m_0_dm_agent_agent_m0_write),                                    //   input,   width = 1,                         .write
		.uav_waitrequest        (intel_niosv_m_0_dm_agent_agent_m0_waitrequest),                              //  output,   width = 1,                         .waitrequest
		.uav_readdatavalid      (intel_niosv_m_0_dm_agent_agent_m0_readdatavalid),                            //  output,   width = 1,                         .readdatavalid
		.uav_byteenable         (intel_niosv_m_0_dm_agent_agent_m0_byteenable),                               //   input,   width = 4,                         .byteenable
		.uav_readdata           (intel_niosv_m_0_dm_agent_agent_m0_readdata),                                 //  output,  width = 32,                         .readdata
		.uav_writedata          (intel_niosv_m_0_dm_agent_agent_m0_writedata),                                //   input,  width = 32,                         .writedata
		.uav_lock               (intel_niosv_m_0_dm_agent_agent_m0_lock),                                     //   input,   width = 1,                         .lock
		.uav_debugaccess        (intel_niosv_m_0_dm_agent_agent_m0_debugaccess),                              //   input,   width = 1,                         .debugaccess
		.av_address             (intel_niosv_m_0_dm_agent_address),                                           //  output,  width = 16,      avalon_anti_slave_0.address
		.av_write               (intel_niosv_m_0_dm_agent_write),                                             //  output,   width = 1,                         .write
		.av_read                (intel_niosv_m_0_dm_agent_read),                                              //  output,   width = 1,                         .read
		.av_readdata            (intel_niosv_m_0_dm_agent_readdata),                                          //   input,  width = 32,                         .readdata
		.av_writedata           (intel_niosv_m_0_dm_agent_writedata),                                         //  output,  width = 32,                         .writedata
		.av_readdatavalid       (intel_niosv_m_0_dm_agent_readdatavalid),                                     //   input,   width = 1,                         .readdatavalid
		.av_waitrequest         (intel_niosv_m_0_dm_agent_waitrequest),                                       //   input,   width = 1,                         .waitrequest
		.av_begintransfer       (),                                                                           // (terminated),                                       
		.av_beginbursttransfer  (),                                                                           // (terminated),                                       
		.av_burstcount          (),                                                                           // (terminated),                                       
		.av_byteenable          (),                                                                           // (terminated),                                       
		.av_writebyteenable     (),                                                                           // (terminated),                                       
		.av_lock                (),                                                                           // (terminated),                                       
		.av_chipselect          (),                                                                           // (terminated),                                       
		.av_clken               (),                                                                           // (terminated),                                       
		.uav_clken              (1'b0),                                                                       // (terminated),                                       
		.av_debugaccess         (),                                                                           // (terminated),                                       
		.av_outputenable        (),                                                                           // (terminated),                                       
		.uav_response           (),                                                                           // (terminated),                                       
		.av_response            (2'b00),                                                                      // (terminated),                                       
		.uav_writeresponsevalid (),                                                                           // (terminated),                                       
		.av_writeresponsevalid  (1'b0)                                                                        // (terminated),                                       
	);

	qsys_top_altera_merlin_slave_translator_191_x56fcki #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0),
		.WAITREQUEST_ALLOWANCE          (0),
		.SYNC_RESET                     (1)
	) pio_0_s1_translator (
		.clk                    (iopll_0_outclk0_clk),                                                        //   input,   width = 1,                      clk.clk
		.reset                  (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,   width = 1,                    reset.reset
		.uav_address            (pio_0_s1_agent_m0_address),                                                  //   input,  width = 32, avalon_universal_slave_0.address
		.uav_burstcount         (pio_0_s1_agent_m0_burstcount),                                               //   input,   width = 3,                         .burstcount
		.uav_read               (pio_0_s1_agent_m0_read),                                                     //   input,   width = 1,                         .read
		.uav_write              (pio_0_s1_agent_m0_write),                                                    //   input,   width = 1,                         .write
		.uav_waitrequest        (pio_0_s1_agent_m0_waitrequest),                                              //  output,   width = 1,                         .waitrequest
		.uav_readdatavalid      (pio_0_s1_agent_m0_readdatavalid),                                            //  output,   width = 1,                         .readdatavalid
		.uav_byteenable         (pio_0_s1_agent_m0_byteenable),                                               //   input,   width = 4,                         .byteenable
		.uav_readdata           (pio_0_s1_agent_m0_readdata),                                                 //  output,  width = 32,                         .readdata
		.uav_writedata          (pio_0_s1_agent_m0_writedata),                                                //   input,  width = 32,                         .writedata
		.uav_lock               (pio_0_s1_agent_m0_lock),                                                     //   input,   width = 1,                         .lock
		.uav_debugaccess        (pio_0_s1_agent_m0_debugaccess),                                              //   input,   width = 1,                         .debugaccess
		.av_address             (pio_0_s1_address),                                                           //  output,   width = 2,      avalon_anti_slave_0.address
		.av_write               (pio_0_s1_write),                                                             //  output,   width = 1,                         .write
		.av_readdata            (pio_0_s1_readdata),                                                          //   input,  width = 32,                         .readdata
		.av_writedata           (pio_0_s1_writedata),                                                         //  output,  width = 32,                         .writedata
		.av_chipselect          (pio_0_s1_chipselect),                                                        //  output,   width = 1,                         .chipselect
		.av_read                (),                                                                           // (terminated),                                       
		.av_begintransfer       (),                                                                           // (terminated),                                       
		.av_beginbursttransfer  (),                                                                           // (terminated),                                       
		.av_burstcount          (),                                                                           // (terminated),                                       
		.av_byteenable          (),                                                                           // (terminated),                                       
		.av_readdatavalid       (1'b0),                                                                       // (terminated),                                       
		.av_waitrequest         (1'b0),                                                                       // (terminated),                                       
		.av_writebyteenable     (),                                                                           // (terminated),                                       
		.av_lock                (),                                                                           // (terminated),                                       
		.av_clken               (),                                                                           // (terminated),                                       
		.uav_clken              (1'b0),                                                                       // (terminated),                                       
		.av_debugaccess         (),                                                                           // (terminated),                                       
		.av_outputenable        (),                                                                           // (terminated),                                       
		.uav_response           (),                                                                           // (terminated),                                       
		.av_response            (2'b00),                                                                      // (terminated),                                       
		.uav_writeresponsevalid (),                                                                           // (terminated),                                       
		.av_writeresponsevalid  (1'b0)                                                                        // (terminated),                                       
	);

	qsys_top_altera_merlin_slave_translator_191_x56fcki #(
		.AV_ADDRESS_W                   (6),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (1),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (1),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0),
		.WAITREQUEST_ALLOWANCE          (0),
		.SYNC_RESET                     (1)
	) intel_niosv_m_0_timer_sw_agent_translator (
		.clk                    (iopll_0_outclk0_clk),                                                        //   input,   width = 1,                      clk.clk
		.reset                  (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,   width = 1,                    reset.reset
		.uav_address            (intel_niosv_m_0_timer_sw_agent_agent_m0_address),                            //   input,  width = 32, avalon_universal_slave_0.address
		.uav_burstcount         (intel_niosv_m_0_timer_sw_agent_agent_m0_burstcount),                         //   input,   width = 3,                         .burstcount
		.uav_read               (intel_niosv_m_0_timer_sw_agent_agent_m0_read),                               //   input,   width = 1,                         .read
		.uav_write              (intel_niosv_m_0_timer_sw_agent_agent_m0_write),                              //   input,   width = 1,                         .write
		.uav_waitrequest        (intel_niosv_m_0_timer_sw_agent_agent_m0_waitrequest),                        //  output,   width = 1,                         .waitrequest
		.uav_readdatavalid      (intel_niosv_m_0_timer_sw_agent_agent_m0_readdatavalid),                      //  output,   width = 1,                         .readdatavalid
		.uav_byteenable         (intel_niosv_m_0_timer_sw_agent_agent_m0_byteenable),                         //   input,   width = 4,                         .byteenable
		.uav_readdata           (intel_niosv_m_0_timer_sw_agent_agent_m0_readdata),                           //  output,  width = 32,                         .readdata
		.uav_writedata          (intel_niosv_m_0_timer_sw_agent_agent_m0_writedata),                          //   input,  width = 32,                         .writedata
		.uav_lock               (intel_niosv_m_0_timer_sw_agent_agent_m0_lock),                               //   input,   width = 1,                         .lock
		.uav_debugaccess        (intel_niosv_m_0_timer_sw_agent_agent_m0_debugaccess),                        //   input,   width = 1,                         .debugaccess
		.av_address             (intel_niosv_m_0_timer_sw_agent_address),                                     //  output,   width = 6,      avalon_anti_slave_0.address
		.av_write               (intel_niosv_m_0_timer_sw_agent_write),                                       //  output,   width = 1,                         .write
		.av_read                (intel_niosv_m_0_timer_sw_agent_read),                                        //  output,   width = 1,                         .read
		.av_readdata            (intel_niosv_m_0_timer_sw_agent_readdata),                                    //   input,  width = 32,                         .readdata
		.av_writedata           (intel_niosv_m_0_timer_sw_agent_writedata),                                   //  output,  width = 32,                         .writedata
		.av_byteenable          (intel_niosv_m_0_timer_sw_agent_byteenable),                                  //  output,   width = 4,                         .byteenable
		.av_readdatavalid       (intel_niosv_m_0_timer_sw_agent_readdatavalid),                               //   input,   width = 1,                         .readdatavalid
		.av_waitrequest         (intel_niosv_m_0_timer_sw_agent_waitrequest),                                 //   input,   width = 1,                         .waitrequest
		.av_begintransfer       (),                                                                           // (terminated),                                       
		.av_beginbursttransfer  (),                                                                           // (terminated),                                       
		.av_burstcount          (),                                                                           // (terminated),                                       
		.av_writebyteenable     (),                                                                           // (terminated),                                       
		.av_lock                (),                                                                           // (terminated),                                       
		.av_chipselect          (),                                                                           // (terminated),                                       
		.av_clken               (),                                                                           // (terminated),                                       
		.uav_clken              (1'b0),                                                                       // (terminated),                                       
		.av_debugaccess         (),                                                                           // (terminated),                                       
		.av_outputenable        (),                                                                           // (terminated),                                       
		.uav_response           (),                                                                           // (terminated),                                       
		.av_response            (2'b00),                                                                      // (terminated),                                       
		.uav_writeresponsevalid (),                                                                           // (terminated),                                       
		.av_writeresponsevalid  (1'b0)                                                                        // (terminated),                                       
	);

	qsys_top_altera_merlin_axi_master_ni_1962_2kryw2a #(
		.ID_WIDTH                  (1),
		.ADDR_WIDTH                (32),
		.RDATA_WIDTH               (32),
		.WDATA_WIDTH               (32),
		.ADDR_USER_WIDTH           (1),
		.DATA_USER_WIDTH           (1),
		.AXI_BURST_LENGTH_WIDTH    (4),
		.AXI_LOCK_WIDTH            (2),
		.SAI_WIDTH                 (1),
		.ADDRCHK_WIDTH             (1),
		.USE_PKT_DATACHK           (0),
		.USE_PKT_ADDRCHK           (0),
		.AXI_VERSION               ("AXI4Lite"),
		.ACE_LITE_SUPPORT          (0),
		.ROLE_BASED_USER           (0),
		.WRITE_ISSUING_CAPABILITY  (1),
		.READ_ISSUING_CAPABILITY   (1),
		.PKT_BEGIN_BURST           (99),
		.PKT_CACHE_H               (117),
		.PKT_CACHE_L               (114),
		.PKT_ADDR_SIDEBAND_H       (97),
		.PKT_ADDR_SIDEBAND_L       (97),
		.PKT_PROTECTION_H          (113),
		.PKT_PROTECTION_L          (111),
		.PKT_BURST_SIZE_H          (94),
		.PKT_BURST_SIZE_L          (92),
		.PKT_BURST_TYPE_H          (96),
		.PKT_BURST_TYPE_L          (95),
		.PKT_RESPONSE_STATUS_L     (118),
		.PKT_RESPONSE_STATUS_H     (119),
		.PKT_BURSTWRAP_H           (91),
		.PKT_BURSTWRAP_L           (85),
		.PKT_BYTE_CNT_H            (84),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_EXCLUSIVE       (73),
		.PKT_TRANS_LOCK            (72),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (106),
		.PKT_SRC_ID_L              (104),
		.PKT_DEST_ID_H             (109),
		.PKT_DEST_ID_L             (107),
		.PKT_THREAD_ID_H           (110),
		.PKT_THREAD_ID_L           (110),
		.PKT_QOS_L                 (100),
		.PKT_QOS_H                 (103),
		.PKT_ORI_BURST_SIZE_L      (120),
		.PKT_ORI_BURST_SIZE_H      (122),
		.PKT_DATA_SIDEBAND_H       (98),
		.PKT_DATA_SIDEBAND_L       (98),
		.PKT_DOMAIN_H              (130),
		.PKT_DOMAIN_L              (129),
		.PKT_SNOOP_H               (128),
		.PKT_SNOOP_L               (125),
		.PKT_BARRIER_H             (124),
		.PKT_BARRIER_L             (123),
		.PKT_WUNIQUE               (131),
		.PKT_EOP_OOO               (136),
		.PKT_SOP_OOO               (137),
		.PKT_POISON_H              (132),
		.PKT_POISON_L              (132),
		.PKT_DATACHK_H             (133),
		.PKT_DATACHK_L             (133),
		.PKT_ADDRCHK_H             (134),
		.PKT_ADDRCHK_L             (134),
		.PKT_SAI_H                 (135),
		.PKT_SAI_L                 (135),
		.ST_DATA_W                 (142),
		.ST_CHANNEL_W              (7),
		.ID                        (0),
		.SYNC_RESET                (1)
	) intel_niosv_m_0_data_manager_agent (
		.aclk                   (iopll_0_outclk0_clk),                                                         //   input,    width = 1,              clk.clk
		.aresetn                (~jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1,        clk_reset.reset_n
		.write_cp_valid         (intel_niosv_m_0_data_manager_agent_write_cp_valid),                           //  output,    width = 1,         write_cp.valid
		.write_cp_data          (intel_niosv_m_0_data_manager_agent_write_cp_data),                            //  output,  width = 142,                 .data
		.write_cp_startofpacket (intel_niosv_m_0_data_manager_agent_write_cp_startofpacket),                   //  output,    width = 1,                 .startofpacket
		.write_cp_endofpacket   (intel_niosv_m_0_data_manager_agent_write_cp_endofpacket),                     //  output,    width = 1,                 .endofpacket
		.write_cp_ready         (intel_niosv_m_0_data_manager_agent_write_cp_ready),                           //   input,    width = 1,                 .ready
		.write_rp_valid         (rsp_mux_src_valid),                                                           //   input,    width = 1,         write_rp.valid
		.write_rp_data          (rsp_mux_src_data),                                                            //   input,  width = 142,                 .data
		.write_rp_channel       (rsp_mux_src_channel),                                                         //   input,    width = 7,                 .channel
		.write_rp_startofpacket (rsp_mux_src_startofpacket),                                                   //   input,    width = 1,                 .startofpacket
		.write_rp_endofpacket   (rsp_mux_src_endofpacket),                                                     //   input,    width = 1,                 .endofpacket
		.write_rp_ready         (rsp_mux_src_ready),                                                           //  output,    width = 1,                 .ready
		.read_cp_valid          (intel_niosv_m_0_data_manager_agent_read_cp_valid),                            //  output,    width = 1,          read_cp.valid
		.read_cp_data           (intel_niosv_m_0_data_manager_agent_read_cp_data),                             //  output,  width = 142,                 .data
		.read_cp_startofpacket  (intel_niosv_m_0_data_manager_agent_read_cp_startofpacket),                    //  output,    width = 1,                 .startofpacket
		.read_cp_endofpacket    (intel_niosv_m_0_data_manager_agent_read_cp_endofpacket),                      //  output,    width = 1,                 .endofpacket
		.read_cp_ready          (intel_niosv_m_0_data_manager_agent_read_cp_ready),                            //   input,    width = 1,                 .ready
		.read_rp_valid          (rsp_mux_001_src_valid),                                                       //   input,    width = 1,          read_rp.valid
		.read_rp_data           (rsp_mux_001_src_data),                                                        //   input,  width = 142,                 .data
		.read_rp_channel        (rsp_mux_001_src_channel),                                                     //   input,    width = 7,                 .channel
		.read_rp_startofpacket  (rsp_mux_001_src_startofpacket),                                               //   input,    width = 1,                 .startofpacket
		.read_rp_endofpacket    (rsp_mux_001_src_endofpacket),                                                 //   input,    width = 1,                 .endofpacket
		.read_rp_ready          (rsp_mux_001_src_ready),                                                       //  output,    width = 1,                 .ready
		.awaddr                 (intel_niosv_m_0_data_manager_awaddr),                                         //   input,   width = 32, altera_axi_slave.awaddr
		.awprot                 (intel_niosv_m_0_data_manager_awprot),                                         //   input,    width = 3,                 .awprot
		.awvalid                (intel_niosv_m_0_data_manager_awvalid),                                        //   input,    width = 1,                 .awvalid
		.awready                (intel_niosv_m_0_data_manager_awready),                                        //  output,    width = 1,                 .awready
		.wdata                  (intel_niosv_m_0_data_manager_wdata),                                          //   input,   width = 32,                 .wdata
		.wstrb                  (intel_niosv_m_0_data_manager_wstrb),                                          //   input,    width = 4,                 .wstrb
		.wvalid                 (intel_niosv_m_0_data_manager_wvalid),                                         //   input,    width = 1,                 .wvalid
		.wready                 (intel_niosv_m_0_data_manager_wready),                                         //  output,    width = 1,                 .wready
		.bresp                  (intel_niosv_m_0_data_manager_bresp),                                          //  output,    width = 2,                 .bresp
		.bvalid                 (intel_niosv_m_0_data_manager_bvalid),                                         //  output,    width = 1,                 .bvalid
		.bready                 (intel_niosv_m_0_data_manager_bready),                                         //   input,    width = 1,                 .bready
		.araddr                 (intel_niosv_m_0_data_manager_araddr),                                         //   input,   width = 32,                 .araddr
		.arprot                 (intel_niosv_m_0_data_manager_arprot),                                         //   input,    width = 3,                 .arprot
		.arvalid                (intel_niosv_m_0_data_manager_arvalid),                                        //   input,    width = 1,                 .arvalid
		.arready                (intel_niosv_m_0_data_manager_arready),                                        //  output,    width = 1,                 .arready
		.rdata                  (intel_niosv_m_0_data_manager_rdata),                                          //  output,   width = 32,                 .rdata
		.rresp                  (intel_niosv_m_0_data_manager_rresp),                                          //  output,    width = 2,                 .rresp
		.rvalid                 (intel_niosv_m_0_data_manager_rvalid),                                         //  output,    width = 1,                 .rvalid
		.rready                 (intel_niosv_m_0_data_manager_rready),                                         //   input,    width = 1,                 .rready
		.awuser_addrchk         (1'b0),                                                                        // (terminated),                                
		.awuser_sai             (1'b0),                                                                        // (terminated),                                
		.wuser_datachk          (4'b0000),                                                                     // (terminated),                                
		.wuser_poison           (1'b0),                                                                        // (terminated),                                
		.aruser_addrchk         (1'b0),                                                                        // (terminated),                                
		.aruser_sai             (1'b0),                                                                        // (terminated),                                
		.ruser_datachk          (),                                                                            // (terminated),                                
		.ruser_poison           (),                                                                            // (terminated),                                
		.awid                   (1'b0),                                                                        // (terminated),                                
		.awlen                  (4'b0000),                                                                     // (terminated),                                
		.awsize                 (3'b010),                                                                      // (terminated),                                
		.awburst                (2'b01),                                                                       // (terminated),                                
		.awlock                 (2'b00),                                                                       // (terminated),                                
		.awcache                (4'b0000),                                                                     // (terminated),                                
		.awqos                  (4'b0000),                                                                     // (terminated),                                
		.awregion               (4'b0000),                                                                     // (terminated),                                
		.awuser                 (1'b0),                                                                        // (terminated),                                
		.arid                   (1'b0),                                                                        // (terminated),                                
		.arlen                  (4'b0000),                                                                     // (terminated),                                
		.arsize                 (3'b010),                                                                      // (terminated),                                
		.arburst                (2'b01),                                                                       // (terminated),                                
		.arlock                 (2'b00),                                                                       // (terminated),                                
		.arcache                (4'b0000),                                                                     // (terminated),                                
		.arqos                  (4'b0000),                                                                     // (terminated),                                
		.arregion               (4'b0000),                                                                     // (terminated),                                
		.aruser                 (1'b0),                                                                        // (terminated),                                
		.wid                    (1'b0),                                                                        // (terminated),                                
		.wlast                  (1'b1),                                                                        // (terminated),                                
		.wuser                  (1'b0),                                                                        // (terminated),                                
		.bid                    (),                                                                            // (terminated),                                
		.buser                  (),                                                                            // (terminated),                                
		.rid                    (),                                                                            // (terminated),                                
		.rlast                  (),                                                                            // (terminated),                                
		.ruser                  (),                                                                            // (terminated),                                
		.arsnoop                (4'b0000),                                                                     // (terminated),                                
		.ardomain               (2'b00),                                                                       // (terminated),                                
		.arbar                  (2'b00),                                                                       // (terminated),                                
		.awsnoop                (3'b000),                                                                      // (terminated),                                
		.awdomain               (2'b00),                                                                       // (terminated),                                
		.awbar                  (2'b00),                                                                       // (terminated),                                
		.awunique               (1'b0)                                                                         // (terminated),                                
	);

	qsys_top_altera_merlin_axi_master_ni_1962_2kryw2a #(
		.ID_WIDTH                  (1),
		.ADDR_WIDTH                (32),
		.RDATA_WIDTH               (32),
		.WDATA_WIDTH               (32),
		.ADDR_USER_WIDTH           (1),
		.DATA_USER_WIDTH           (1),
		.AXI_BURST_LENGTH_WIDTH    (4),
		.AXI_LOCK_WIDTH            (2),
		.SAI_WIDTH                 (1),
		.ADDRCHK_WIDTH             (1),
		.USE_PKT_DATACHK           (0),
		.USE_PKT_ADDRCHK           (0),
		.AXI_VERSION               ("AXI4Lite"),
		.ACE_LITE_SUPPORT          (0),
		.ROLE_BASED_USER           (0),
		.WRITE_ISSUING_CAPABILITY  (1),
		.READ_ISSUING_CAPABILITY   (8),
		.PKT_BEGIN_BURST           (99),
		.PKT_CACHE_H               (117),
		.PKT_CACHE_L               (114),
		.PKT_ADDR_SIDEBAND_H       (97),
		.PKT_ADDR_SIDEBAND_L       (97),
		.PKT_PROTECTION_H          (113),
		.PKT_PROTECTION_L          (111),
		.PKT_BURST_SIZE_H          (94),
		.PKT_BURST_SIZE_L          (92),
		.PKT_BURST_TYPE_H          (96),
		.PKT_BURST_TYPE_L          (95),
		.PKT_RESPONSE_STATUS_L     (118),
		.PKT_RESPONSE_STATUS_H     (119),
		.PKT_BURSTWRAP_H           (91),
		.PKT_BURSTWRAP_L           (85),
		.PKT_BYTE_CNT_H            (84),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_EXCLUSIVE       (73),
		.PKT_TRANS_LOCK            (72),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (106),
		.PKT_SRC_ID_L              (104),
		.PKT_DEST_ID_H             (109),
		.PKT_DEST_ID_L             (107),
		.PKT_THREAD_ID_H           (110),
		.PKT_THREAD_ID_L           (110),
		.PKT_QOS_L                 (100),
		.PKT_QOS_H                 (103),
		.PKT_ORI_BURST_SIZE_L      (120),
		.PKT_ORI_BURST_SIZE_H      (122),
		.PKT_DATA_SIDEBAND_H       (98),
		.PKT_DATA_SIDEBAND_L       (98),
		.PKT_DOMAIN_H              (130),
		.PKT_DOMAIN_L              (129),
		.PKT_SNOOP_H               (128),
		.PKT_SNOOP_L               (125),
		.PKT_BARRIER_H             (124),
		.PKT_BARRIER_L             (123),
		.PKT_WUNIQUE               (131),
		.PKT_EOP_OOO               (136),
		.PKT_SOP_OOO               (137),
		.PKT_POISON_H              (132),
		.PKT_POISON_L              (132),
		.PKT_DATACHK_H             (133),
		.PKT_DATACHK_L             (133),
		.PKT_ADDRCHK_H             (134),
		.PKT_ADDRCHK_L             (134),
		.PKT_SAI_H                 (135),
		.PKT_SAI_L                 (135),
		.ST_DATA_W                 (142),
		.ST_CHANNEL_W              (7),
		.ID                        (1),
		.SYNC_RESET                (1)
	) intel_niosv_m_0_instruction_manager_agent (
		.aclk                   (iopll_0_outclk0_clk),                                                         //   input,    width = 1,              clk.clk
		.aresetn                (~jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1,        clk_reset.reset_n
		.write_cp_valid         (intel_niosv_m_0_instruction_manager_agent_write_cp_valid),                    //  output,    width = 1,         write_cp.valid
		.write_cp_data          (intel_niosv_m_0_instruction_manager_agent_write_cp_data),                     //  output,  width = 142,                 .data
		.write_cp_startofpacket (intel_niosv_m_0_instruction_manager_agent_write_cp_startofpacket),            //  output,    width = 1,                 .startofpacket
		.write_cp_endofpacket   (intel_niosv_m_0_instruction_manager_agent_write_cp_endofpacket),              //  output,    width = 1,                 .endofpacket
		.write_cp_ready         (intel_niosv_m_0_instruction_manager_agent_write_cp_ready),                    //   input,    width = 1,                 .ready
		.write_rp_valid         (intel_niosv_m_0_instruction_manager_wr_limiter_rsp_src_valid),                //   input,    width = 1,         write_rp.valid
		.write_rp_data          (intel_niosv_m_0_instruction_manager_wr_limiter_rsp_src_data),                 //   input,  width = 142,                 .data
		.write_rp_channel       (intel_niosv_m_0_instruction_manager_wr_limiter_rsp_src_channel),              //   input,    width = 7,                 .channel
		.write_rp_startofpacket (intel_niosv_m_0_instruction_manager_wr_limiter_rsp_src_startofpacket),        //   input,    width = 1,                 .startofpacket
		.write_rp_endofpacket   (intel_niosv_m_0_instruction_manager_wr_limiter_rsp_src_endofpacket),          //   input,    width = 1,                 .endofpacket
		.write_rp_ready         (intel_niosv_m_0_instruction_manager_wr_limiter_rsp_src_ready),                //  output,    width = 1,                 .ready
		.read_cp_valid          (intel_niosv_m_0_instruction_manager_agent_read_cp_valid),                     //  output,    width = 1,          read_cp.valid
		.read_cp_data           (intel_niosv_m_0_instruction_manager_agent_read_cp_data),                      //  output,  width = 142,                 .data
		.read_cp_startofpacket  (intel_niosv_m_0_instruction_manager_agent_read_cp_startofpacket),             //  output,    width = 1,                 .startofpacket
		.read_cp_endofpacket    (intel_niosv_m_0_instruction_manager_agent_read_cp_endofpacket),               //  output,    width = 1,                 .endofpacket
		.read_cp_ready          (intel_niosv_m_0_instruction_manager_agent_read_cp_ready),                     //   input,    width = 1,                 .ready
		.read_rp_valid          (intel_niosv_m_0_instruction_manager_rd_limiter_rsp_src_valid),                //   input,    width = 1,          read_rp.valid
		.read_rp_data           (intel_niosv_m_0_instruction_manager_rd_limiter_rsp_src_data),                 //   input,  width = 142,                 .data
		.read_rp_channel        (intel_niosv_m_0_instruction_manager_rd_limiter_rsp_src_channel),              //   input,    width = 7,                 .channel
		.read_rp_startofpacket  (intel_niosv_m_0_instruction_manager_rd_limiter_rsp_src_startofpacket),        //   input,    width = 1,                 .startofpacket
		.read_rp_endofpacket    (intel_niosv_m_0_instruction_manager_rd_limiter_rsp_src_endofpacket),          //   input,    width = 1,                 .endofpacket
		.read_rp_ready          (intel_niosv_m_0_instruction_manager_rd_limiter_rsp_src_ready),                //  output,    width = 1,                 .ready
		.awaddr                 (intel_niosv_m_0_instruction_manager_awaddr),                                  //   input,   width = 32, altera_axi_slave.awaddr
		.awprot                 (intel_niosv_m_0_instruction_manager_awprot),                                  //   input,    width = 3,                 .awprot
		.awvalid                (intel_niosv_m_0_instruction_manager_awvalid),                                 //   input,    width = 1,                 .awvalid
		.awready                (intel_niosv_m_0_instruction_manager_awready),                                 //  output,    width = 1,                 .awready
		.wdata                  (intel_niosv_m_0_instruction_manager_wdata),                                   //   input,   width = 32,                 .wdata
		.wstrb                  (intel_niosv_m_0_instruction_manager_wstrb),                                   //   input,    width = 4,                 .wstrb
		.wvalid                 (intel_niosv_m_0_instruction_manager_wvalid),                                  //   input,    width = 1,                 .wvalid
		.wready                 (intel_niosv_m_0_instruction_manager_wready),                                  //  output,    width = 1,                 .wready
		.bresp                  (intel_niosv_m_0_instruction_manager_bresp),                                   //  output,    width = 2,                 .bresp
		.bvalid                 (intel_niosv_m_0_instruction_manager_bvalid),                                  //  output,    width = 1,                 .bvalid
		.bready                 (intel_niosv_m_0_instruction_manager_bready),                                  //   input,    width = 1,                 .bready
		.araddr                 (intel_niosv_m_0_instruction_manager_araddr),                                  //   input,   width = 32,                 .araddr
		.arprot                 (intel_niosv_m_0_instruction_manager_arprot),                                  //   input,    width = 3,                 .arprot
		.arvalid                (intel_niosv_m_0_instruction_manager_arvalid),                                 //   input,    width = 1,                 .arvalid
		.arready                (intel_niosv_m_0_instruction_manager_arready),                                 //  output,    width = 1,                 .arready
		.rdata                  (intel_niosv_m_0_instruction_manager_rdata),                                   //  output,   width = 32,                 .rdata
		.rresp                  (intel_niosv_m_0_instruction_manager_rresp),                                   //  output,    width = 2,                 .rresp
		.rvalid                 (intel_niosv_m_0_instruction_manager_rvalid),                                  //  output,    width = 1,                 .rvalid
		.rready                 (intel_niosv_m_0_instruction_manager_rready),                                  //   input,    width = 1,                 .rready
		.awuser_addrchk         (1'b0),                                                                        // (terminated),                                
		.awuser_sai             (1'b0),                                                                        // (terminated),                                
		.wuser_datachk          (4'b0000),                                                                     // (terminated),                                
		.wuser_poison           (1'b0),                                                                        // (terminated),                                
		.aruser_addrchk         (1'b0),                                                                        // (terminated),                                
		.aruser_sai             (1'b0),                                                                        // (terminated),                                
		.ruser_datachk          (),                                                                            // (terminated),                                
		.ruser_poison           (),                                                                            // (terminated),                                
		.awid                   (1'b0),                                                                        // (terminated),                                
		.awlen                  (4'b0000),                                                                     // (terminated),                                
		.awsize                 (3'b010),                                                                      // (terminated),                                
		.awburst                (2'b01),                                                                       // (terminated),                                
		.awlock                 (2'b00),                                                                       // (terminated),                                
		.awcache                (4'b0000),                                                                     // (terminated),                                
		.awqos                  (4'b0000),                                                                     // (terminated),                                
		.awregion               (4'b0000),                                                                     // (terminated),                                
		.awuser                 (1'b0),                                                                        // (terminated),                                
		.arid                   (1'b0),                                                                        // (terminated),                                
		.arlen                  (4'b0000),                                                                     // (terminated),                                
		.arsize                 (3'b010),                                                                      // (terminated),                                
		.arburst                (2'b01),                                                                       // (terminated),                                
		.arlock                 (2'b00),                                                                       // (terminated),                                
		.arcache                (4'b0000),                                                                     // (terminated),                                
		.arqos                  (4'b0000),                                                                     // (terminated),                                
		.arregion               (4'b0000),                                                                     // (terminated),                                
		.aruser                 (1'b0),                                                                        // (terminated),                                
		.wid                    (1'b0),                                                                        // (terminated),                                
		.wlast                  (1'b1),                                                                        // (terminated),                                
		.wuser                  (1'b0),                                                                        // (terminated),                                
		.bid                    (),                                                                            // (terminated),                                
		.buser                  (),                                                                            // (terminated),                                
		.rid                    (),                                                                            // (terminated),                                
		.rlast                  (),                                                                            // (terminated),                                
		.ruser                  (),                                                                            // (terminated),                                
		.arsnoop                (4'b0000),                                                                     // (terminated),                                
		.ardomain               (2'b00),                                                                       // (terminated),                                
		.arbar                  (2'b00),                                                                       // (terminated),                                
		.awsnoop                (3'b000),                                                                      // (terminated),                                
		.awdomain               (2'b00),                                                                       // (terminated),                                
		.awbar                  (2'b00),                                                                       // (terminated),                                
		.awunique               (1'b0)                                                                         // (terminated),                                
	);

	qsys_top_altera_merlin_slave_agent_1921_b6r3djy #(
		.PKT_ORI_BURST_SIZE_H      (122),
		.PKT_ORI_BURST_SIZE_L      (120),
		.PKT_RESPONSE_STATUS_H     (119),
		.PKT_RESPONSE_STATUS_L     (118),
		.PKT_BURST_SIZE_H          (94),
		.PKT_BURST_SIZE_L          (92),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (99),
		.PKT_PROTECTION_H          (113),
		.PKT_PROTECTION_L          (111),
		.PKT_BURSTWRAP_H           (91),
		.PKT_BURSTWRAP_L           (85),
		.PKT_BYTE_CNT_H            (84),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (106),
		.PKT_SRC_ID_L              (104),
		.PKT_DEST_ID_H             (109),
		.PKT_DEST_ID_L             (107),
		.PKT_POISON_H              (132),
		.PKT_POISON_L              (132),
		.PKT_DATACHK_H             (133),
		.PKT_DATACHK_L             (133),
		.PKT_SAI_H                 (135),
		.PKT_SAI_L                 (135),
		.PKT_ADDRCHK_H             (134),
		.PKT_ADDRCHK_L             (134),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (7),
		.ST_DATA_W                 (142),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.USE_MEMORY_BLOCKS         (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0),
		.SYNC_RESET                (1),
		.USE_PKT_DATACHK           (0),
		.ROLE_BASED_USER           (0)
	) jtag_uart_0_avalon_jtag_slave_agent (
		.clk                     (iopll_0_outclk0_clk),                                                        //   input,    width = 1,             clk.clk
		.reset                   (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1,       clk_reset.reset
		.m0_address              (jtag_uart_0_avalon_jtag_slave_agent_m0_address),                             //  output,   width = 32,              m0.address
		.m0_burstcount           (jtag_uart_0_avalon_jtag_slave_agent_m0_burstcount),                          //  output,    width = 3,                .burstcount
		.m0_byteenable           (jtag_uart_0_avalon_jtag_slave_agent_m0_byteenable),                          //  output,    width = 4,                .byteenable
		.m0_debugaccess          (jtag_uart_0_avalon_jtag_slave_agent_m0_debugaccess),                         //  output,    width = 1,                .debugaccess
		.m0_lock                 (jtag_uart_0_avalon_jtag_slave_agent_m0_lock),                                //  output,    width = 1,                .lock
		.m0_readdata             (jtag_uart_0_avalon_jtag_slave_agent_m0_readdata),                            //   input,   width = 32,                .readdata
		.m0_readdatavalid        (jtag_uart_0_avalon_jtag_slave_agent_m0_readdatavalid),                       //   input,    width = 1,                .readdatavalid
		.m0_read                 (jtag_uart_0_avalon_jtag_slave_agent_m0_read),                                //  output,    width = 1,                .read
		.m0_waitrequest          (jtag_uart_0_avalon_jtag_slave_agent_m0_waitrequest),                         //   input,    width = 1,                .waitrequest
		.m0_writedata            (jtag_uart_0_avalon_jtag_slave_agent_m0_writedata),                           //  output,   width = 32,                .writedata
		.m0_write                (jtag_uart_0_avalon_jtag_slave_agent_m0_write),                               //  output,    width = 1,                .write
		.rp_endofpacket          (jtag_uart_0_avalon_jtag_slave_agent_rp_endofpacket),                         //  output,    width = 1,              rp.endofpacket
		.rp_ready                (jtag_uart_0_avalon_jtag_slave_agent_rp_ready),                               //   input,    width = 1,                .ready
		.rp_valid                (jtag_uart_0_avalon_jtag_slave_agent_rp_valid),                               //  output,    width = 1,                .valid
		.rp_data                 (jtag_uart_0_avalon_jtag_slave_agent_rp_data),                                //  output,  width = 142,                .data
		.rp_startofpacket        (jtag_uart_0_avalon_jtag_slave_agent_rp_startofpacket),                       //  output,    width = 1,                .startofpacket
		.cp_ready                (cmd_mux_src_ready),                                                          //  output,    width = 1,              cp.ready
		.cp_valid                (cmd_mux_src_valid),                                                          //   input,    width = 1,                .valid
		.cp_data                 (cmd_mux_src_data),                                                           //   input,  width = 142,                .data
		.cp_startofpacket        (cmd_mux_src_startofpacket),                                                  //   input,    width = 1,                .startofpacket
		.cp_endofpacket          (cmd_mux_src_endofpacket),                                                    //   input,    width = 1,                .endofpacket
		.cp_channel              (cmd_mux_src_channel),                                                        //   input,    width = 7,                .channel
		.rf_sink_ready           (jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_ready),                     //  output,    width = 1,         rf_sink.ready
		.rf_sink_valid           (jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_valid),                     //   input,    width = 1,                .valid
		.rf_sink_startofpacket   (jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_startofpacket),             //   input,    width = 1,                .startofpacket
		.rf_sink_endofpacket     (jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_endofpacket),               //   input,    width = 1,                .endofpacket
		.rf_sink_data            (jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_data),                      //   input,  width = 143,                .data
		.rf_source_ready         (jtag_uart_0_avalon_jtag_slave_agent_rf_source_ready),                        //   input,    width = 1,       rf_source.ready
		.rf_source_valid         (jtag_uart_0_avalon_jtag_slave_agent_rf_source_valid),                        //  output,    width = 1,                .valid
		.rf_source_startofpacket (jtag_uart_0_avalon_jtag_slave_agent_rf_source_startofpacket),                //  output,    width = 1,                .startofpacket
		.rf_source_endofpacket   (jtag_uart_0_avalon_jtag_slave_agent_rf_source_endofpacket),                  //  output,    width = 1,                .endofpacket
		.rf_source_data          (jtag_uart_0_avalon_jtag_slave_agent_rf_source_data),                         //  output,  width = 143,                .data
		.rdata_fifo_sink_ready   (jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_out_ready),                   //  output,    width = 1, rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_out_valid),                   //   input,    width = 1,                .valid
		.rdata_fifo_sink_data    (jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_out_data),                    //   input,   width = 34,                .data
		.rdata_fifo_src_ready    (jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_ready),                   //   input,    width = 1,  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_valid),                   //  output,    width = 1,                .valid
		.rdata_fifo_src_data     (jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_data),                    //  output,   width = 34,                .data
		.m0_response             (2'b00),                                                                      // (terminated),                               
		.m0_writeresponsevalid   (1'b0),                                                                       // (terminated),                               
		.rdata_fifo_sink_error   (1'b0)                                                                        // (terminated),                               
	);

	qsys_top_altera_avalon_sc_fifo_1931_vhmcgqy #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (143),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0),
		.EMPTY_WIDTH         (1),
		.SYNC_RESET          (1)
	) jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo (
		.clk               (iopll_0_outclk0_clk),                                            //   input,    width = 1,       clk.clk
		.reset             (intel_niosv_m_0_reset_reset_bridge_in_reset_reset),              //   input,    width = 1, clk_reset.reset
		.in_data           (jtag_uart_0_avalon_jtag_slave_agent_rf_source_data),             //   input,  width = 143,        in.data
		.in_valid          (jtag_uart_0_avalon_jtag_slave_agent_rf_source_valid),            //   input,    width = 1,          .valid
		.in_ready          (jtag_uart_0_avalon_jtag_slave_agent_rf_source_ready),            //  output,    width = 1,          .ready
		.in_startofpacket  (jtag_uart_0_avalon_jtag_slave_agent_rf_source_startofpacket),    //   input,    width = 1,          .startofpacket
		.in_endofpacket    (jtag_uart_0_avalon_jtag_slave_agent_rf_source_endofpacket),      //   input,    width = 1,          .endofpacket
		.out_data          (jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_data),          //  output,  width = 143,       out.data
		.out_valid         (jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_valid),         //  output,    width = 1,          .valid
		.out_ready         (jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_ready),         //   input,    width = 1,          .ready
		.out_startofpacket (jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_startofpacket), //  output,    width = 1,          .startofpacket
		.out_endofpacket   (jtag_uart_0_avalon_jtag_slave_agent_rsp_fifo_out_endofpacket),   //  output,    width = 1,          .endofpacket
		.csr_address       (2'b00),                                                          // (terminated),                         
		.csr_read          (1'b0),                                                           // (terminated),                         
		.csr_write         (1'b0),                                                           // (terminated),                         
		.csr_readdata      (),                                                               // (terminated),                         
		.csr_writedata     (32'b00000000000000000000000000000000),                           // (terminated),                         
		.almost_full_data  (),                                                               // (terminated),                         
		.almost_empty_data (),                                                               // (terminated),                         
		.in_empty          (1'b0),                                                           // (terminated),                         
		.out_empty         (),                                                               // (terminated),                         
		.in_error          (1'b0),                                                           // (terminated),                         
		.out_error         (),                                                               // (terminated),                         
		.in_channel        (1'b0),                                                           // (terminated),                         
		.out_channel       ()                                                                // (terminated),                         
	);

	qsys_top_altera_avalon_sc_fifo_1931_vhmcgqy #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0),
		.EMPTY_WIDTH         (1),
		.SYNC_RESET          (1)
	) jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo (
		.clk               (iopll_0_outclk0_clk),                                      //   input,   width = 1,       clk.clk
		.reset             (intel_niosv_m_0_reset_reset_bridge_in_reset_reset),        //   input,   width = 1, clk_reset.reset
		.in_data           (jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_data),  //   input,  width = 34,        in.data
		.in_valid          (jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_valid), //   input,   width = 1,          .valid
		.in_ready          (jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_src_ready), //  output,   width = 1,          .ready
		.out_data          (jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_out_data),  //  output,  width = 34,       out.data
		.out_valid         (jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_out_valid), //  output,   width = 1,          .valid
		.out_ready         (jtag_uart_0_avalon_jtag_slave_agent_rdata_fifo_out_ready), //   input,   width = 1,          .ready
		.csr_address       (2'b00),                                                    // (terminated),                        
		.csr_read          (1'b0),                                                     // (terminated),                        
		.csr_write         (1'b0),                                                     // (terminated),                        
		.csr_readdata      (),                                                         // (terminated),                        
		.csr_writedata     (32'b00000000000000000000000000000000),                     // (terminated),                        
		.almost_full_data  (),                                                         // (terminated),                        
		.almost_empty_data (),                                                         // (terminated),                        
		.in_startofpacket  (1'b0),                                                     // (terminated),                        
		.in_endofpacket    (1'b0),                                                     // (terminated),                        
		.out_startofpacket (),                                                         // (terminated),                        
		.out_endofpacket   (),                                                         // (terminated),                        
		.in_empty          (1'b0),                                                     // (terminated),                        
		.out_empty         (),                                                         // (terminated),                        
		.in_error          (1'b0),                                                     // (terminated),                        
		.out_error         (),                                                         // (terminated),                        
		.in_channel        (1'b0),                                                     // (terminated),                        
		.out_channel       ()                                                          // (terminated),                        
	);

	qsys_top_altera_merlin_axi_slave_ni_1971_c6ig3wy #(
		.PKT_QOS_H                   (103),
		.PKT_QOS_L                   (100),
		.PKT_THREAD_ID_H             (110),
		.PKT_THREAD_ID_L             (110),
		.PKT_RESPONSE_STATUS_H       (119),
		.PKT_RESPONSE_STATUS_L       (118),
		.PKT_BEGIN_BURST             (99),
		.PKT_CACHE_H                 (117),
		.PKT_CACHE_L                 (114),
		.PKT_DATA_SIDEBAND_H         (98),
		.PKT_DATA_SIDEBAND_L         (98),
		.PKT_ADDR_SIDEBAND_H         (97),
		.PKT_ADDR_SIDEBAND_L         (97),
		.PKT_BURST_TYPE_H            (96),
		.PKT_BURST_TYPE_L            (95),
		.PKT_PROTECTION_H            (113),
		.PKT_PROTECTION_L            (111),
		.PKT_BURST_SIZE_H            (94),
		.PKT_BURST_SIZE_L            (92),
		.PKT_BURSTWRAP_H             (91),
		.PKT_BURSTWRAP_L             (85),
		.PKT_BYTE_CNT_H              (84),
		.PKT_BYTE_CNT_L              (74),
		.PKT_ADDR_H                  (67),
		.PKT_ADDR_L                  (36),
		.PKT_TRANS_EXCLUSIVE         (73),
		.PKT_TRANS_LOCK              (72),
		.PKT_TRANS_COMPRESSED_READ   (68),
		.PKT_TRANS_POSTED            (69),
		.PKT_TRANS_WRITE             (70),
		.PKT_TRANS_READ              (71),
		.PKT_DATA_H                  (31),
		.PKT_DATA_L                  (0),
		.PKT_BYTEEN_H                (35),
		.PKT_BYTEEN_L                (32),
		.PKT_SRC_ID_H                (106),
		.PKT_SRC_ID_L                (104),
		.PKT_DEST_ID_H               (109),
		.PKT_DEST_ID_L               (107),
		.PKT_ORI_BURST_SIZE_L        (120),
		.PKT_ORI_BURST_SIZE_H        (122),
		.PKT_DOMAIN_L                (129),
		.PKT_DOMAIN_H                (130),
		.PKT_SNOOP_L                 (125),
		.PKT_SNOOP_H                 (128),
		.PKT_BARRIER_L               (123),
		.PKT_BARRIER_H               (124),
		.PKT_WUNIQUE                 (131),
		.PKT_EOP_OOO                 (136),
		.PKT_SOP_OOO                 (137),
		.PKT_POISON_H                (132),
		.PKT_POISON_L                (132),
		.PKT_DATACHK_H               (133),
		.PKT_DATACHK_L               (133),
		.PKT_ADDRCHK_H               (134),
		.PKT_ADDRCHK_L               (134),
		.PKT_SAI_H                   (135),
		.PKT_SAI_L                   (135),
		.SAI_WIDTH                   (1),
		.ADDRCHK_WIDTH               (1),
		.ADDR_USER_WIDTH             (1),
		.DATA_USER_WIDTH             (1),
		.ST_DATA_W                   (142),
		.ADDR_WIDTH                  (20),
		.RDATA_WIDTH                 (32),
		.WDATA_WIDTH                 (32),
		.ST_CHANNEL_W                (7),
		.AXI_SLAVE_ID_W              (2),
		.ACE_LITE_SUPPORT            (0),
		.PASS_ID_TO_SLAVE            (1),
		.AXI_VERSION                 ("AXI4"),
		.WRITE_ACCEPTANCE_CAPABILITY (1),
		.READ_ACCEPTANCE_CAPABILITY  (1),
		.USE_PKT_DATACHK             (0),
		.USE_PKT_ADDRCHK             (0),
		.SYNC_RESET                  (1),
		.USE_MEMORY_BLOCKS           (0),
		.ROLE_BASED_USER             (0),
		.ENABLE_OOO                  (0),
		.REORDER_BUFFER              (0)
	) intel_onchip_memory_0_axi_s1_agent (
		.aclk                   (iopll_0_outclk0_clk),                                                         //   input,    width = 1,        clock_sink.clk
		.aresetn                (~jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1,        reset_sink.reset_n
		.read_cp_valid          (cmd_mux_002_src_valid),                                                       //   input,    width = 1,           read_cp.valid
		.read_cp_ready          (cmd_mux_002_src_ready),                                                       //  output,    width = 1,                  .ready
		.read_cp_data           (cmd_mux_002_src_data),                                                        //   input,  width = 142,                  .data
		.read_cp_channel        (cmd_mux_002_src_channel),                                                     //   input,    width = 7,                  .channel
		.read_cp_startofpacket  (cmd_mux_002_src_startofpacket),                                               //   input,    width = 1,                  .startofpacket
		.read_cp_endofpacket    (cmd_mux_002_src_endofpacket),                                                 //   input,    width = 1,                  .endofpacket
		.write_cp_ready         (cmd_mux_001_src_ready),                                                       //  output,    width = 1,          write_cp.ready
		.write_cp_valid         (cmd_mux_001_src_valid),                                                       //   input,    width = 1,                  .valid
		.write_cp_data          (cmd_mux_001_src_data),                                                        //   input,  width = 142,                  .data
		.write_cp_channel       (cmd_mux_001_src_channel),                                                     //   input,    width = 7,                  .channel
		.write_cp_startofpacket (cmd_mux_001_src_startofpacket),                                               //   input,    width = 1,                  .startofpacket
		.write_cp_endofpacket   (cmd_mux_001_src_endofpacket),                                                 //   input,    width = 1,                  .endofpacket
		.read_rp_ready          (intel_onchip_memory_0_axi_s1_agent_read_rp_ready),                            //   input,    width = 1,           read_rp.ready
		.read_rp_valid          (intel_onchip_memory_0_axi_s1_agent_read_rp_valid),                            //  output,    width = 1,                  .valid
		.read_rp_data           (intel_onchip_memory_0_axi_s1_agent_read_rp_data),                             //  output,  width = 142,                  .data
		.read_rp_startofpacket  (intel_onchip_memory_0_axi_s1_agent_read_rp_startofpacket),                    //  output,    width = 1,                  .startofpacket
		.read_rp_endofpacket    (intel_onchip_memory_0_axi_s1_agent_read_rp_endofpacket),                      //  output,    width = 1,                  .endofpacket
		.write_rp_ready         (intel_onchip_memory_0_axi_s1_agent_write_rp_ready),                           //   input,    width = 1,          write_rp.ready
		.write_rp_valid         (intel_onchip_memory_0_axi_s1_agent_write_rp_valid),                           //  output,    width = 1,                  .valid
		.write_rp_data          (intel_onchip_memory_0_axi_s1_agent_write_rp_data),                            //  output,  width = 142,                  .data
		.write_rp_startofpacket (intel_onchip_memory_0_axi_s1_agent_write_rp_startofpacket),                   //  output,    width = 1,                  .startofpacket
		.write_rp_endofpacket   (intel_onchip_memory_0_axi_s1_agent_write_rp_endofpacket),                     //  output,    width = 1,                  .endofpacket
		.awid                   (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awid),                   //  output,    width = 2, altera_axi_master.awid
		.awaddr                 (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awaddr),                 //  output,   width = 20,                  .awaddr
		.awlen                  (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awlen),                  //  output,    width = 8,                  .awlen
		.awsize                 (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awsize),                 //  output,    width = 3,                  .awsize
		.awburst                (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awburst),                //  output,    width = 2,                  .awburst
		.awlock                 (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awlock),                 //  output,    width = 1,                  .awlock
		.awcache                (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awcache),                //  output,    width = 4,                  .awcache
		.awprot                 (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awprot),                 //  output,    width = 3,                  .awprot
		.awuser                 (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awuser),                 //  output,    width = 1,                  .awuser
		.awvalid                (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awvalid),                //  output,    width = 1,                  .awvalid
		.awready                (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awready),                //   input,    width = 1,                  .awready
		.wdata                  (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_wdata),                  //  output,   width = 32,                  .wdata
		.wstrb                  (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_wstrb),                  //  output,    width = 4,                  .wstrb
		.wlast                  (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_wlast),                  //  output,    width = 1,                  .wlast
		.wvalid                 (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_wvalid),                 //  output,    width = 1,                  .wvalid
		.wready                 (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_wready),                 //   input,    width = 1,                  .wready
		.bid                    (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_bid),                    //   input,    width = 2,                  .bid
		.bresp                  (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_bresp),                  //   input,    width = 2,                  .bresp
		.bvalid                 (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_bvalid),                 //   input,    width = 1,                  .bvalid
		.bready                 (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_bready),                 //  output,    width = 1,                  .bready
		.arid                   (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arid),                   //  output,    width = 2,                  .arid
		.araddr                 (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_araddr),                 //  output,   width = 20,                  .araddr
		.arlen                  (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arlen),                  //  output,    width = 8,                  .arlen
		.arsize                 (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arsize),                 //  output,    width = 3,                  .arsize
		.arburst                (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arburst),                //  output,    width = 2,                  .arburst
		.arlock                 (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arlock),                 //  output,    width = 1,                  .arlock
		.arcache                (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arcache),                //  output,    width = 4,                  .arcache
		.arprot                 (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arprot),                 //  output,    width = 3,                  .arprot
		.aruser                 (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_aruser),                 //  output,    width = 1,                  .aruser
		.arvalid                (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arvalid),                //  output,    width = 1,                  .arvalid
		.arready                (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arready),                //   input,    width = 1,                  .arready
		.rid                    (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_rid),                    //   input,    width = 2,                  .rid
		.rdata                  (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_rdata),                  //   input,   width = 32,                  .rdata
		.rresp                  (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_rresp),                  //   input,    width = 2,                  .rresp
		.rlast                  (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_rlast),                  //   input,    width = 1,                  .rlast
		.rvalid                 (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_rvalid),                 //   input,    width = 1,                  .rvalid
		.rready                 (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_rready),                 //  output,    width = 1,                  .rready
		.wuser                  (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_wuser),                  //  output,    width = 1,                  .wuser
		.awqos                  (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awqos),                  //  output,    width = 4,                  .awqos
		.awregion               (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_awregion),               //  output,    width = 4,                  .awregion
		.ruser                  (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_ruser),                  //   input,    width = 1,                  .ruser
		.buser                  (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_buser),                  //   input,    width = 1,                  .buser
		.arqos                  (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arqos),                  //  output,    width = 4,                  .arqos
		.arregion               (intel_onchip_memory_0_axi_s1_agent_altera_axi_master_arregion),               //  output,    width = 4,                  .arregion
		.awuser_addrchk         (),                                                                            // (terminated),                                 
		.awuser_sai             (),                                                                            // (terminated),                                 
		.wuser_datachk          (),                                                                            // (terminated),                                 
		.wuser_poison           (),                                                                            // (terminated),                                 
		.aruser_addrchk         (),                                                                            // (terminated),                                 
		.aruser_sai             (),                                                                            // (terminated),                                 
		.ruser_datachk          (4'b0000),                                                                     // (terminated),                                 
		.ruser_poison           (1'b0),                                                                        // (terminated),                                 
		.wid                    (),                                                                            // (terminated),                                 
		.arsnoop                (),                                                                            // (terminated),                                 
		.ardomain               (),                                                                            // (terminated),                                 
		.arbar                  (),                                                                            // (terminated),                                 
		.awsnoop                (),                                                                            // (terminated),                                 
		.awdomain               (),                                                                            // (terminated),                                 
		.awbar                  (),                                                                            // (terminated),                                 
		.awunique               ()                                                                             // (terminated),                                 
	);

	qsys_top_altera_merlin_slave_agent_1921_b6r3djy #(
		.PKT_ORI_BURST_SIZE_H      (122),
		.PKT_ORI_BURST_SIZE_L      (120),
		.PKT_RESPONSE_STATUS_H     (119),
		.PKT_RESPONSE_STATUS_L     (118),
		.PKT_BURST_SIZE_H          (94),
		.PKT_BURST_SIZE_L          (92),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (99),
		.PKT_PROTECTION_H          (113),
		.PKT_PROTECTION_L          (111),
		.PKT_BURSTWRAP_H           (91),
		.PKT_BURSTWRAP_L           (85),
		.PKT_BYTE_CNT_H            (84),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (106),
		.PKT_SRC_ID_L              (104),
		.PKT_DEST_ID_H             (109),
		.PKT_DEST_ID_L             (107),
		.PKT_POISON_H              (132),
		.PKT_POISON_L              (132),
		.PKT_DATACHK_H             (133),
		.PKT_DATACHK_L             (133),
		.PKT_SAI_H                 (135),
		.PKT_SAI_L                 (135),
		.PKT_ADDRCHK_H             (134),
		.PKT_ADDRCHK_L             (134),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (7),
		.ST_DATA_W                 (142),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.USE_MEMORY_BLOCKS         (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0),
		.SYNC_RESET                (1),
		.USE_PKT_DATACHK           (0),
		.ROLE_BASED_USER           (0)
	) sysid_qsys_0_control_slave_agent (
		.clk                     (iopll_0_outclk0_clk),                                                        //   input,    width = 1,             clk.clk
		.reset                   (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1,       clk_reset.reset
		.m0_address              (sysid_qsys_0_control_slave_agent_m0_address),                                //  output,   width = 32,              m0.address
		.m0_burstcount           (sysid_qsys_0_control_slave_agent_m0_burstcount),                             //  output,    width = 3,                .burstcount
		.m0_byteenable           (sysid_qsys_0_control_slave_agent_m0_byteenable),                             //  output,    width = 4,                .byteenable
		.m0_debugaccess          (sysid_qsys_0_control_slave_agent_m0_debugaccess),                            //  output,    width = 1,                .debugaccess
		.m0_lock                 (sysid_qsys_0_control_slave_agent_m0_lock),                                   //  output,    width = 1,                .lock
		.m0_readdata             (sysid_qsys_0_control_slave_agent_m0_readdata),                               //   input,   width = 32,                .readdata
		.m0_readdatavalid        (sysid_qsys_0_control_slave_agent_m0_readdatavalid),                          //   input,    width = 1,                .readdatavalid
		.m0_read                 (sysid_qsys_0_control_slave_agent_m0_read),                                   //  output,    width = 1,                .read
		.m0_waitrequest          (sysid_qsys_0_control_slave_agent_m0_waitrequest),                            //   input,    width = 1,                .waitrequest
		.m0_writedata            (sysid_qsys_0_control_slave_agent_m0_writedata),                              //  output,   width = 32,                .writedata
		.m0_write                (sysid_qsys_0_control_slave_agent_m0_write),                                  //  output,    width = 1,                .write
		.rp_endofpacket          (sysid_qsys_0_control_slave_agent_rp_endofpacket),                            //  output,    width = 1,              rp.endofpacket
		.rp_ready                (sysid_qsys_0_control_slave_agent_rp_ready),                                  //   input,    width = 1,                .ready
		.rp_valid                (sysid_qsys_0_control_slave_agent_rp_valid),                                  //  output,    width = 1,                .valid
		.rp_data                 (sysid_qsys_0_control_slave_agent_rp_data),                                   //  output,  width = 142,                .data
		.rp_startofpacket        (sysid_qsys_0_control_slave_agent_rp_startofpacket),                          //  output,    width = 1,                .startofpacket
		.cp_ready                (cmd_mux_003_src_ready),                                                      //  output,    width = 1,              cp.ready
		.cp_valid                (cmd_mux_003_src_valid),                                                      //   input,    width = 1,                .valid
		.cp_data                 (cmd_mux_003_src_data),                                                       //   input,  width = 142,                .data
		.cp_startofpacket        (cmd_mux_003_src_startofpacket),                                              //   input,    width = 1,                .startofpacket
		.cp_endofpacket          (cmd_mux_003_src_endofpacket),                                                //   input,    width = 1,                .endofpacket
		.cp_channel              (cmd_mux_003_src_channel),                                                    //   input,    width = 7,                .channel
		.rf_sink_ready           (sysid_qsys_0_control_slave_agent_rsp_fifo_out_ready),                        //  output,    width = 1,         rf_sink.ready
		.rf_sink_valid           (sysid_qsys_0_control_slave_agent_rsp_fifo_out_valid),                        //   input,    width = 1,                .valid
		.rf_sink_startofpacket   (sysid_qsys_0_control_slave_agent_rsp_fifo_out_startofpacket),                //   input,    width = 1,                .startofpacket
		.rf_sink_endofpacket     (sysid_qsys_0_control_slave_agent_rsp_fifo_out_endofpacket),                  //   input,    width = 1,                .endofpacket
		.rf_sink_data            (sysid_qsys_0_control_slave_agent_rsp_fifo_out_data),                         //   input,  width = 143,                .data
		.rf_source_ready         (sysid_qsys_0_control_slave_agent_rf_source_ready),                           //   input,    width = 1,       rf_source.ready
		.rf_source_valid         (sysid_qsys_0_control_slave_agent_rf_source_valid),                           //  output,    width = 1,                .valid
		.rf_source_startofpacket (sysid_qsys_0_control_slave_agent_rf_source_startofpacket),                   //  output,    width = 1,                .startofpacket
		.rf_source_endofpacket   (sysid_qsys_0_control_slave_agent_rf_source_endofpacket),                     //  output,    width = 1,                .endofpacket
		.rf_source_data          (sysid_qsys_0_control_slave_agent_rf_source_data),                            //  output,  width = 143,                .data
		.rdata_fifo_sink_ready   (sysid_qsys_0_control_slave_agent_rdata_fifo_out_ready),                      //  output,    width = 1, rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sysid_qsys_0_control_slave_agent_rdata_fifo_out_valid),                      //   input,    width = 1,                .valid
		.rdata_fifo_sink_data    (sysid_qsys_0_control_slave_agent_rdata_fifo_out_data),                       //   input,   width = 34,                .data
		.rdata_fifo_src_ready    (sysid_qsys_0_control_slave_agent_rdata_fifo_src_ready),                      //   input,    width = 1,  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sysid_qsys_0_control_slave_agent_rdata_fifo_src_valid),                      //  output,    width = 1,                .valid
		.rdata_fifo_src_data     (sysid_qsys_0_control_slave_agent_rdata_fifo_src_data),                       //  output,   width = 34,                .data
		.m0_response             (2'b00),                                                                      // (terminated),                               
		.m0_writeresponsevalid   (1'b0),                                                                       // (terminated),                               
		.rdata_fifo_sink_error   (1'b0)                                                                        // (terminated),                               
	);

	qsys_top_altera_avalon_sc_fifo_1931_vhmcgqy #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (143),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0),
		.EMPTY_WIDTH         (1),
		.SYNC_RESET          (1)
	) sysid_qsys_0_control_slave_agent_rsp_fifo (
		.clk               (iopll_0_outclk0_clk),                                         //   input,    width = 1,       clk.clk
		.reset             (intel_niosv_m_0_reset_reset_bridge_in_reset_reset),           //   input,    width = 1, clk_reset.reset
		.in_data           (sysid_qsys_0_control_slave_agent_rf_source_data),             //   input,  width = 143,        in.data
		.in_valid          (sysid_qsys_0_control_slave_agent_rf_source_valid),            //   input,    width = 1,          .valid
		.in_ready          (sysid_qsys_0_control_slave_agent_rf_source_ready),            //  output,    width = 1,          .ready
		.in_startofpacket  (sysid_qsys_0_control_slave_agent_rf_source_startofpacket),    //   input,    width = 1,          .startofpacket
		.in_endofpacket    (sysid_qsys_0_control_slave_agent_rf_source_endofpacket),      //   input,    width = 1,          .endofpacket
		.out_data          (sysid_qsys_0_control_slave_agent_rsp_fifo_out_data),          //  output,  width = 143,       out.data
		.out_valid         (sysid_qsys_0_control_slave_agent_rsp_fifo_out_valid),         //  output,    width = 1,          .valid
		.out_ready         (sysid_qsys_0_control_slave_agent_rsp_fifo_out_ready),         //   input,    width = 1,          .ready
		.out_startofpacket (sysid_qsys_0_control_slave_agent_rsp_fifo_out_startofpacket), //  output,    width = 1,          .startofpacket
		.out_endofpacket   (sysid_qsys_0_control_slave_agent_rsp_fifo_out_endofpacket),   //  output,    width = 1,          .endofpacket
		.csr_address       (2'b00),                                                       // (terminated),                         
		.csr_read          (1'b0),                                                        // (terminated),                         
		.csr_write         (1'b0),                                                        // (terminated),                         
		.csr_readdata      (),                                                            // (terminated),                         
		.csr_writedata     (32'b00000000000000000000000000000000),                        // (terminated),                         
		.almost_full_data  (),                                                            // (terminated),                         
		.almost_empty_data (),                                                            // (terminated),                         
		.in_empty          (1'b0),                                                        // (terminated),                         
		.out_empty         (),                                                            // (terminated),                         
		.in_error          (1'b0),                                                        // (terminated),                         
		.out_error         (),                                                            // (terminated),                         
		.in_channel        (1'b0),                                                        // (terminated),                         
		.out_channel       ()                                                             // (terminated),                         
	);

	qsys_top_altera_avalon_sc_fifo_1931_vhmcgqy #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0),
		.EMPTY_WIDTH         (1),
		.SYNC_RESET          (1)
	) sysid_qsys_0_control_slave_agent_rdata_fifo (
		.clk               (iopll_0_outclk0_clk),                                   //   input,   width = 1,       clk.clk
		.reset             (intel_niosv_m_0_reset_reset_bridge_in_reset_reset),     //   input,   width = 1, clk_reset.reset
		.in_data           (sysid_qsys_0_control_slave_agent_rdata_fifo_src_data),  //   input,  width = 34,        in.data
		.in_valid          (sysid_qsys_0_control_slave_agent_rdata_fifo_src_valid), //   input,   width = 1,          .valid
		.in_ready          (sysid_qsys_0_control_slave_agent_rdata_fifo_src_ready), //  output,   width = 1,          .ready
		.out_data          (sysid_qsys_0_control_slave_agent_rdata_fifo_out_data),  //  output,  width = 34,       out.data
		.out_valid         (sysid_qsys_0_control_slave_agent_rdata_fifo_out_valid), //  output,   width = 1,          .valid
		.out_ready         (sysid_qsys_0_control_slave_agent_rdata_fifo_out_ready), //   input,   width = 1,          .ready
		.csr_address       (2'b00),                                                 // (terminated),                        
		.csr_read          (1'b0),                                                  // (terminated),                        
		.csr_write         (1'b0),                                                  // (terminated),                        
		.csr_readdata      (),                                                      // (terminated),                        
		.csr_writedata     (32'b00000000000000000000000000000000),                  // (terminated),                        
		.almost_full_data  (),                                                      // (terminated),                        
		.almost_empty_data (),                                                      // (terminated),                        
		.in_startofpacket  (1'b0),                                                  // (terminated),                        
		.in_endofpacket    (1'b0),                                                  // (terminated),                        
		.out_startofpacket (),                                                      // (terminated),                        
		.out_endofpacket   (),                                                      // (terminated),                        
		.in_empty          (1'b0),                                                  // (terminated),                        
		.out_empty         (),                                                      // (terminated),                        
		.in_error          (1'b0),                                                  // (terminated),                        
		.out_error         (),                                                      // (terminated),                        
		.in_channel        (1'b0),                                                  // (terminated),                        
		.out_channel       ()                                                       // (terminated),                        
	);

	qsys_top_altera_merlin_slave_agent_1921_b6r3djy #(
		.PKT_ORI_BURST_SIZE_H      (122),
		.PKT_ORI_BURST_SIZE_L      (120),
		.PKT_RESPONSE_STATUS_H     (119),
		.PKT_RESPONSE_STATUS_L     (118),
		.PKT_BURST_SIZE_H          (94),
		.PKT_BURST_SIZE_L          (92),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (99),
		.PKT_PROTECTION_H          (113),
		.PKT_PROTECTION_L          (111),
		.PKT_BURSTWRAP_H           (91),
		.PKT_BURSTWRAP_L           (85),
		.PKT_BYTE_CNT_H            (84),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (106),
		.PKT_SRC_ID_L              (104),
		.PKT_DEST_ID_H             (109),
		.PKT_DEST_ID_L             (107),
		.PKT_POISON_H              (132),
		.PKT_POISON_L              (132),
		.PKT_DATACHK_H             (133),
		.PKT_DATACHK_L             (133),
		.PKT_SAI_H                 (135),
		.PKT_SAI_L                 (135),
		.PKT_ADDRCHK_H             (134),
		.PKT_ADDRCHK_L             (134),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (7),
		.ST_DATA_W                 (142),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.USE_MEMORY_BLOCKS         (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0),
		.SYNC_RESET                (1),
		.USE_PKT_DATACHK           (0),
		.ROLE_BASED_USER           (0)
	) intel_niosv_m_0_dm_agent_agent (
		.clk                     (iopll_0_outclk0_clk),                                                        //   input,    width = 1,             clk.clk
		.reset                   (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1,       clk_reset.reset
		.m0_address              (intel_niosv_m_0_dm_agent_agent_m0_address),                                  //  output,   width = 32,              m0.address
		.m0_burstcount           (intel_niosv_m_0_dm_agent_agent_m0_burstcount),                               //  output,    width = 3,                .burstcount
		.m0_byteenable           (intel_niosv_m_0_dm_agent_agent_m0_byteenable),                               //  output,    width = 4,                .byteenable
		.m0_debugaccess          (intel_niosv_m_0_dm_agent_agent_m0_debugaccess),                              //  output,    width = 1,                .debugaccess
		.m0_lock                 (intel_niosv_m_0_dm_agent_agent_m0_lock),                                     //  output,    width = 1,                .lock
		.m0_readdata             (intel_niosv_m_0_dm_agent_agent_m0_readdata),                                 //   input,   width = 32,                .readdata
		.m0_readdatavalid        (intel_niosv_m_0_dm_agent_agent_m0_readdatavalid),                            //   input,    width = 1,                .readdatavalid
		.m0_read                 (intel_niosv_m_0_dm_agent_agent_m0_read),                                     //  output,    width = 1,                .read
		.m0_waitrequest          (intel_niosv_m_0_dm_agent_agent_m0_waitrequest),                              //   input,    width = 1,                .waitrequest
		.m0_writedata            (intel_niosv_m_0_dm_agent_agent_m0_writedata),                                //  output,   width = 32,                .writedata
		.m0_write                (intel_niosv_m_0_dm_agent_agent_m0_write),                                    //  output,    width = 1,                .write
		.rp_endofpacket          (intel_niosv_m_0_dm_agent_agent_rp_endofpacket),                              //  output,    width = 1,              rp.endofpacket
		.rp_ready                (intel_niosv_m_0_dm_agent_agent_rp_ready),                                    //   input,    width = 1,                .ready
		.rp_valid                (intel_niosv_m_0_dm_agent_agent_rp_valid),                                    //  output,    width = 1,                .valid
		.rp_data                 (intel_niosv_m_0_dm_agent_agent_rp_data),                                     //  output,  width = 142,                .data
		.rp_startofpacket        (intel_niosv_m_0_dm_agent_agent_rp_startofpacket),                            //  output,    width = 1,                .startofpacket
		.cp_ready                (cmd_mux_004_src_ready),                                                      //  output,    width = 1,              cp.ready
		.cp_valid                (cmd_mux_004_src_valid),                                                      //   input,    width = 1,                .valid
		.cp_data                 (cmd_mux_004_src_data),                                                       //   input,  width = 142,                .data
		.cp_startofpacket        (cmd_mux_004_src_startofpacket),                                              //   input,    width = 1,                .startofpacket
		.cp_endofpacket          (cmd_mux_004_src_endofpacket),                                                //   input,    width = 1,                .endofpacket
		.cp_channel              (cmd_mux_004_src_channel),                                                    //   input,    width = 7,                .channel
		.rf_sink_ready           (intel_niosv_m_0_dm_agent_agent_rsp_fifo_out_ready),                          //  output,    width = 1,         rf_sink.ready
		.rf_sink_valid           (intel_niosv_m_0_dm_agent_agent_rsp_fifo_out_valid),                          //   input,    width = 1,                .valid
		.rf_sink_startofpacket   (intel_niosv_m_0_dm_agent_agent_rsp_fifo_out_startofpacket),                  //   input,    width = 1,                .startofpacket
		.rf_sink_endofpacket     (intel_niosv_m_0_dm_agent_agent_rsp_fifo_out_endofpacket),                    //   input,    width = 1,                .endofpacket
		.rf_sink_data            (intel_niosv_m_0_dm_agent_agent_rsp_fifo_out_data),                           //   input,  width = 143,                .data
		.rf_source_ready         (intel_niosv_m_0_dm_agent_agent_rf_source_ready),                             //   input,    width = 1,       rf_source.ready
		.rf_source_valid         (intel_niosv_m_0_dm_agent_agent_rf_source_valid),                             //  output,    width = 1,                .valid
		.rf_source_startofpacket (intel_niosv_m_0_dm_agent_agent_rf_source_startofpacket),                     //  output,    width = 1,                .startofpacket
		.rf_source_endofpacket   (intel_niosv_m_0_dm_agent_agent_rf_source_endofpacket),                       //  output,    width = 1,                .endofpacket
		.rf_source_data          (intel_niosv_m_0_dm_agent_agent_rf_source_data),                              //  output,  width = 143,                .data
		.rdata_fifo_sink_ready   (intel_niosv_m_0_dm_agent_agent_rdata_fifo_out_ready),                        //  output,    width = 1, rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (intel_niosv_m_0_dm_agent_agent_rdata_fifo_out_valid),                        //   input,    width = 1,                .valid
		.rdata_fifo_sink_data    (intel_niosv_m_0_dm_agent_agent_rdata_fifo_out_data),                         //   input,   width = 34,                .data
		.rdata_fifo_src_ready    (intel_niosv_m_0_dm_agent_agent_rdata_fifo_src_ready),                        //   input,    width = 1,  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (intel_niosv_m_0_dm_agent_agent_rdata_fifo_src_valid),                        //  output,    width = 1,                .valid
		.rdata_fifo_src_data     (intel_niosv_m_0_dm_agent_agent_rdata_fifo_src_data),                         //  output,   width = 34,                .data
		.m0_response             (2'b00),                                                                      // (terminated),                               
		.m0_writeresponsevalid   (1'b0),                                                                       // (terminated),                               
		.rdata_fifo_sink_error   (1'b0)                                                                        // (terminated),                               
	);

	qsys_top_altera_avalon_sc_fifo_1931_vhmcgqy #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (143),
		.FIFO_DEPTH          (3),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0),
		.EMPTY_WIDTH         (1),
		.SYNC_RESET          (1)
	) intel_niosv_m_0_dm_agent_agent_rsp_fifo (
		.clk               (iopll_0_outclk0_clk),                                       //   input,    width = 1,       clk.clk
		.reset             (intel_niosv_m_0_reset_reset_bridge_in_reset_reset),         //   input,    width = 1, clk_reset.reset
		.in_data           (intel_niosv_m_0_dm_agent_agent_rf_source_data),             //   input,  width = 143,        in.data
		.in_valid          (intel_niosv_m_0_dm_agent_agent_rf_source_valid),            //   input,    width = 1,          .valid
		.in_ready          (intel_niosv_m_0_dm_agent_agent_rf_source_ready),            //  output,    width = 1,          .ready
		.in_startofpacket  (intel_niosv_m_0_dm_agent_agent_rf_source_startofpacket),    //   input,    width = 1,          .startofpacket
		.in_endofpacket    (intel_niosv_m_0_dm_agent_agent_rf_source_endofpacket),      //   input,    width = 1,          .endofpacket
		.out_data          (intel_niosv_m_0_dm_agent_agent_rsp_fifo_out_data),          //  output,  width = 143,       out.data
		.out_valid         (intel_niosv_m_0_dm_agent_agent_rsp_fifo_out_valid),         //  output,    width = 1,          .valid
		.out_ready         (intel_niosv_m_0_dm_agent_agent_rsp_fifo_out_ready),         //   input,    width = 1,          .ready
		.out_startofpacket (intel_niosv_m_0_dm_agent_agent_rsp_fifo_out_startofpacket), //  output,    width = 1,          .startofpacket
		.out_endofpacket   (intel_niosv_m_0_dm_agent_agent_rsp_fifo_out_endofpacket),   //  output,    width = 1,          .endofpacket
		.csr_address       (2'b00),                                                     // (terminated),                         
		.csr_read          (1'b0),                                                      // (terminated),                         
		.csr_write         (1'b0),                                                      // (terminated),                         
		.csr_readdata      (),                                                          // (terminated),                         
		.csr_writedata     (32'b00000000000000000000000000000000),                      // (terminated),                         
		.almost_full_data  (),                                                          // (terminated),                         
		.almost_empty_data (),                                                          // (terminated),                         
		.in_empty          (1'b0),                                                      // (terminated),                         
		.out_empty         (),                                                          // (terminated),                         
		.in_error          (1'b0),                                                      // (terminated),                         
		.out_error         (),                                                          // (terminated),                         
		.in_channel        (1'b0),                                                      // (terminated),                         
		.out_channel       ()                                                           // (terminated),                         
	);

	qsys_top_altera_avalon_sc_fifo_1931_vhmcgqy #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (3),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0),
		.EMPTY_WIDTH         (1),
		.SYNC_RESET          (1)
	) intel_niosv_m_0_dm_agent_agent_rdata_fifo (
		.clk               (iopll_0_outclk0_clk),                                 //   input,   width = 1,       clk.clk
		.reset             (intel_niosv_m_0_reset_reset_bridge_in_reset_reset),   //   input,   width = 1, clk_reset.reset
		.in_data           (intel_niosv_m_0_dm_agent_agent_rdata_fifo_src_data),  //   input,  width = 34,        in.data
		.in_valid          (intel_niosv_m_0_dm_agent_agent_rdata_fifo_src_valid), //   input,   width = 1,          .valid
		.in_ready          (intel_niosv_m_0_dm_agent_agent_rdata_fifo_src_ready), //  output,   width = 1,          .ready
		.out_data          (intel_niosv_m_0_dm_agent_agent_rdata_fifo_out_data),  //  output,  width = 34,       out.data
		.out_valid         (intel_niosv_m_0_dm_agent_agent_rdata_fifo_out_valid), //  output,   width = 1,          .valid
		.out_ready         (intel_niosv_m_0_dm_agent_agent_rdata_fifo_out_ready), //   input,   width = 1,          .ready
		.csr_address       (2'b00),                                               // (terminated),                        
		.csr_read          (1'b0),                                                // (terminated),                        
		.csr_write         (1'b0),                                                // (terminated),                        
		.csr_readdata      (),                                                    // (terminated),                        
		.csr_writedata     (32'b00000000000000000000000000000000),                // (terminated),                        
		.almost_full_data  (),                                                    // (terminated),                        
		.almost_empty_data (),                                                    // (terminated),                        
		.in_startofpacket  (1'b0),                                                // (terminated),                        
		.in_endofpacket    (1'b0),                                                // (terminated),                        
		.out_startofpacket (),                                                    // (terminated),                        
		.out_endofpacket   (),                                                    // (terminated),                        
		.in_empty          (1'b0),                                                // (terminated),                        
		.out_empty         (),                                                    // (terminated),                        
		.in_error          (1'b0),                                                // (terminated),                        
		.out_error         (),                                                    // (terminated),                        
		.in_channel        (1'b0),                                                // (terminated),                        
		.out_channel       ()                                                     // (terminated),                        
	);

	qsys_top_altera_merlin_slave_agent_1921_b6r3djy #(
		.PKT_ORI_BURST_SIZE_H      (122),
		.PKT_ORI_BURST_SIZE_L      (120),
		.PKT_RESPONSE_STATUS_H     (119),
		.PKT_RESPONSE_STATUS_L     (118),
		.PKT_BURST_SIZE_H          (94),
		.PKT_BURST_SIZE_L          (92),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (99),
		.PKT_PROTECTION_H          (113),
		.PKT_PROTECTION_L          (111),
		.PKT_BURSTWRAP_H           (91),
		.PKT_BURSTWRAP_L           (85),
		.PKT_BYTE_CNT_H            (84),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (106),
		.PKT_SRC_ID_L              (104),
		.PKT_DEST_ID_H             (109),
		.PKT_DEST_ID_L             (107),
		.PKT_POISON_H              (132),
		.PKT_POISON_L              (132),
		.PKT_DATACHK_H             (133),
		.PKT_DATACHK_L             (133),
		.PKT_SAI_H                 (135),
		.PKT_SAI_L                 (135),
		.PKT_ADDRCHK_H             (134),
		.PKT_ADDRCHK_L             (134),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (7),
		.ST_DATA_W                 (142),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.USE_MEMORY_BLOCKS         (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0),
		.SYNC_RESET                (1),
		.USE_PKT_DATACHK           (0),
		.ROLE_BASED_USER           (0)
	) pio_0_s1_agent (
		.clk                     (iopll_0_outclk0_clk),                                                        //   input,    width = 1,             clk.clk
		.reset                   (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1,       clk_reset.reset
		.m0_address              (pio_0_s1_agent_m0_address),                                                  //  output,   width = 32,              m0.address
		.m0_burstcount           (pio_0_s1_agent_m0_burstcount),                                               //  output,    width = 3,                .burstcount
		.m0_byteenable           (pio_0_s1_agent_m0_byteenable),                                               //  output,    width = 4,                .byteenable
		.m0_debugaccess          (pio_0_s1_agent_m0_debugaccess),                                              //  output,    width = 1,                .debugaccess
		.m0_lock                 (pio_0_s1_agent_m0_lock),                                                     //  output,    width = 1,                .lock
		.m0_readdata             (pio_0_s1_agent_m0_readdata),                                                 //   input,   width = 32,                .readdata
		.m0_readdatavalid        (pio_0_s1_agent_m0_readdatavalid),                                            //   input,    width = 1,                .readdatavalid
		.m0_read                 (pio_0_s1_agent_m0_read),                                                     //  output,    width = 1,                .read
		.m0_waitrequest          (pio_0_s1_agent_m0_waitrequest),                                              //   input,    width = 1,                .waitrequest
		.m0_writedata            (pio_0_s1_agent_m0_writedata),                                                //  output,   width = 32,                .writedata
		.m0_write                (pio_0_s1_agent_m0_write),                                                    //  output,    width = 1,                .write
		.rp_endofpacket          (pio_0_s1_agent_rp_endofpacket),                                              //  output,    width = 1,              rp.endofpacket
		.rp_ready                (pio_0_s1_agent_rp_ready),                                                    //   input,    width = 1,                .ready
		.rp_valid                (pio_0_s1_agent_rp_valid),                                                    //  output,    width = 1,                .valid
		.rp_data                 (pio_0_s1_agent_rp_data),                                                     //  output,  width = 142,                .data
		.rp_startofpacket        (pio_0_s1_agent_rp_startofpacket),                                            //  output,    width = 1,                .startofpacket
		.cp_ready                (cmd_mux_005_src_ready),                                                      //  output,    width = 1,              cp.ready
		.cp_valid                (cmd_mux_005_src_valid),                                                      //   input,    width = 1,                .valid
		.cp_data                 (cmd_mux_005_src_data),                                                       //   input,  width = 142,                .data
		.cp_startofpacket        (cmd_mux_005_src_startofpacket),                                              //   input,    width = 1,                .startofpacket
		.cp_endofpacket          (cmd_mux_005_src_endofpacket),                                                //   input,    width = 1,                .endofpacket
		.cp_channel              (cmd_mux_005_src_channel),                                                    //   input,    width = 7,                .channel
		.rf_sink_ready           (pio_0_s1_agent_rsp_fifo_out_ready),                                          //  output,    width = 1,         rf_sink.ready
		.rf_sink_valid           (pio_0_s1_agent_rsp_fifo_out_valid),                                          //   input,    width = 1,                .valid
		.rf_sink_startofpacket   (pio_0_s1_agent_rsp_fifo_out_startofpacket),                                  //   input,    width = 1,                .startofpacket
		.rf_sink_endofpacket     (pio_0_s1_agent_rsp_fifo_out_endofpacket),                                    //   input,    width = 1,                .endofpacket
		.rf_sink_data            (pio_0_s1_agent_rsp_fifo_out_data),                                           //   input,  width = 143,                .data
		.rf_source_ready         (pio_0_s1_agent_rf_source_ready),                                             //   input,    width = 1,       rf_source.ready
		.rf_source_valid         (pio_0_s1_agent_rf_source_valid),                                             //  output,    width = 1,                .valid
		.rf_source_startofpacket (pio_0_s1_agent_rf_source_startofpacket),                                     //  output,    width = 1,                .startofpacket
		.rf_source_endofpacket   (pio_0_s1_agent_rf_source_endofpacket),                                       //  output,    width = 1,                .endofpacket
		.rf_source_data          (pio_0_s1_agent_rf_source_data),                                              //  output,  width = 143,                .data
		.rdata_fifo_sink_ready   (pio_0_s1_agent_rdata_fifo_out_ready),                                        //  output,    width = 1, rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (pio_0_s1_agent_rdata_fifo_out_valid),                                        //   input,    width = 1,                .valid
		.rdata_fifo_sink_data    (pio_0_s1_agent_rdata_fifo_out_data),                                         //   input,   width = 34,                .data
		.rdata_fifo_src_ready    (pio_0_s1_agent_rdata_fifo_src_ready),                                        //   input,    width = 1,  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (pio_0_s1_agent_rdata_fifo_src_valid),                                        //  output,    width = 1,                .valid
		.rdata_fifo_src_data     (pio_0_s1_agent_rdata_fifo_src_data),                                         //  output,   width = 34,                .data
		.m0_response             (2'b00),                                                                      // (terminated),                               
		.m0_writeresponsevalid   (1'b0),                                                                       // (terminated),                               
		.rdata_fifo_sink_error   (1'b0)                                                                        // (terminated),                               
	);

	qsys_top_altera_avalon_sc_fifo_1931_vhmcgqy #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (143),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0),
		.EMPTY_WIDTH         (1),
		.SYNC_RESET          (1)
	) pio_0_s1_agent_rsp_fifo (
		.clk               (iopll_0_outclk0_clk),                               //   input,    width = 1,       clk.clk
		.reset             (intel_niosv_m_0_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.in_data           (pio_0_s1_agent_rf_source_data),                     //   input,  width = 143,        in.data
		.in_valid          (pio_0_s1_agent_rf_source_valid),                    //   input,    width = 1,          .valid
		.in_ready          (pio_0_s1_agent_rf_source_ready),                    //  output,    width = 1,          .ready
		.in_startofpacket  (pio_0_s1_agent_rf_source_startofpacket),            //   input,    width = 1,          .startofpacket
		.in_endofpacket    (pio_0_s1_agent_rf_source_endofpacket),              //   input,    width = 1,          .endofpacket
		.out_data          (pio_0_s1_agent_rsp_fifo_out_data),                  //  output,  width = 143,       out.data
		.out_valid         (pio_0_s1_agent_rsp_fifo_out_valid),                 //  output,    width = 1,          .valid
		.out_ready         (pio_0_s1_agent_rsp_fifo_out_ready),                 //   input,    width = 1,          .ready
		.out_startofpacket (pio_0_s1_agent_rsp_fifo_out_startofpacket),         //  output,    width = 1,          .startofpacket
		.out_endofpacket   (pio_0_s1_agent_rsp_fifo_out_endofpacket),           //  output,    width = 1,          .endofpacket
		.csr_address       (2'b00),                                             // (terminated),                         
		.csr_read          (1'b0),                                              // (terminated),                         
		.csr_write         (1'b0),                                              // (terminated),                         
		.csr_readdata      (),                                                  // (terminated),                         
		.csr_writedata     (32'b00000000000000000000000000000000),              // (terminated),                         
		.almost_full_data  (),                                                  // (terminated),                         
		.almost_empty_data (),                                                  // (terminated),                         
		.in_empty          (1'b0),                                              // (terminated),                         
		.out_empty         (),                                                  // (terminated),                         
		.in_error          (1'b0),                                              // (terminated),                         
		.out_error         (),                                                  // (terminated),                         
		.in_channel        (1'b0),                                              // (terminated),                         
		.out_channel       ()                                                   // (terminated),                         
	);

	qsys_top_altera_avalon_sc_fifo_1931_vhmcgqy #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0),
		.EMPTY_WIDTH         (1),
		.SYNC_RESET          (1)
	) pio_0_s1_agent_rdata_fifo (
		.clk               (iopll_0_outclk0_clk),                               //   input,   width = 1,       clk.clk
		.reset             (intel_niosv_m_0_reset_reset_bridge_in_reset_reset), //   input,   width = 1, clk_reset.reset
		.in_data           (pio_0_s1_agent_rdata_fifo_src_data),                //   input,  width = 34,        in.data
		.in_valid          (pio_0_s1_agent_rdata_fifo_src_valid),               //   input,   width = 1,          .valid
		.in_ready          (pio_0_s1_agent_rdata_fifo_src_ready),               //  output,   width = 1,          .ready
		.out_data          (pio_0_s1_agent_rdata_fifo_out_data),                //  output,  width = 34,       out.data
		.out_valid         (pio_0_s1_agent_rdata_fifo_out_valid),               //  output,   width = 1,          .valid
		.out_ready         (pio_0_s1_agent_rdata_fifo_out_ready),               //   input,   width = 1,          .ready
		.csr_address       (2'b00),                                             // (terminated),                        
		.csr_read          (1'b0),                                              // (terminated),                        
		.csr_write         (1'b0),                                              // (terminated),                        
		.csr_readdata      (),                                                  // (terminated),                        
		.csr_writedata     (32'b00000000000000000000000000000000),              // (terminated),                        
		.almost_full_data  (),                                                  // (terminated),                        
		.almost_empty_data (),                                                  // (terminated),                        
		.in_startofpacket  (1'b0),                                              // (terminated),                        
		.in_endofpacket    (1'b0),                                              // (terminated),                        
		.out_startofpacket (),                                                  // (terminated),                        
		.out_endofpacket   (),                                                  // (terminated),                        
		.in_empty          (1'b0),                                              // (terminated),                        
		.out_empty         (),                                                  // (terminated),                        
		.in_error          (1'b0),                                              // (terminated),                        
		.out_error         (),                                                  // (terminated),                        
		.in_channel        (1'b0),                                              // (terminated),                        
		.out_channel       ()                                                   // (terminated),                        
	);

	qsys_top_altera_merlin_slave_agent_1921_b6r3djy #(
		.PKT_ORI_BURST_SIZE_H      (122),
		.PKT_ORI_BURST_SIZE_L      (120),
		.PKT_RESPONSE_STATUS_H     (119),
		.PKT_RESPONSE_STATUS_L     (118),
		.PKT_BURST_SIZE_H          (94),
		.PKT_BURST_SIZE_L          (92),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (99),
		.PKT_PROTECTION_H          (113),
		.PKT_PROTECTION_L          (111),
		.PKT_BURSTWRAP_H           (91),
		.PKT_BURSTWRAP_L           (85),
		.PKT_BYTE_CNT_H            (84),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (106),
		.PKT_SRC_ID_L              (104),
		.PKT_DEST_ID_H             (109),
		.PKT_DEST_ID_L             (107),
		.PKT_POISON_H              (132),
		.PKT_POISON_L              (132),
		.PKT_DATACHK_H             (133),
		.PKT_DATACHK_L             (133),
		.PKT_SAI_H                 (135),
		.PKT_SAI_L                 (135),
		.PKT_ADDRCHK_H             (134),
		.PKT_ADDRCHK_L             (134),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (7),
		.ST_DATA_W                 (142),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.USE_MEMORY_BLOCKS         (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0),
		.SYNC_RESET                (1),
		.USE_PKT_DATACHK           (0),
		.ROLE_BASED_USER           (0)
	) intel_niosv_m_0_timer_sw_agent_agent (
		.clk                     (iopll_0_outclk0_clk),                                                        //   input,    width = 1,             clk.clk
		.reset                   (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1,       clk_reset.reset
		.m0_address              (intel_niosv_m_0_timer_sw_agent_agent_m0_address),                            //  output,   width = 32,              m0.address
		.m0_burstcount           (intel_niosv_m_0_timer_sw_agent_agent_m0_burstcount),                         //  output,    width = 3,                .burstcount
		.m0_byteenable           (intel_niosv_m_0_timer_sw_agent_agent_m0_byteenable),                         //  output,    width = 4,                .byteenable
		.m0_debugaccess          (intel_niosv_m_0_timer_sw_agent_agent_m0_debugaccess),                        //  output,    width = 1,                .debugaccess
		.m0_lock                 (intel_niosv_m_0_timer_sw_agent_agent_m0_lock),                               //  output,    width = 1,                .lock
		.m0_readdata             (intel_niosv_m_0_timer_sw_agent_agent_m0_readdata),                           //   input,   width = 32,                .readdata
		.m0_readdatavalid        (intel_niosv_m_0_timer_sw_agent_agent_m0_readdatavalid),                      //   input,    width = 1,                .readdatavalid
		.m0_read                 (intel_niosv_m_0_timer_sw_agent_agent_m0_read),                               //  output,    width = 1,                .read
		.m0_waitrequest          (intel_niosv_m_0_timer_sw_agent_agent_m0_waitrequest),                        //   input,    width = 1,                .waitrequest
		.m0_writedata            (intel_niosv_m_0_timer_sw_agent_agent_m0_writedata),                          //  output,   width = 32,                .writedata
		.m0_write                (intel_niosv_m_0_timer_sw_agent_agent_m0_write),                              //  output,    width = 1,                .write
		.rp_endofpacket          (intel_niosv_m_0_timer_sw_agent_agent_rp_endofpacket),                        //  output,    width = 1,              rp.endofpacket
		.rp_ready                (intel_niosv_m_0_timer_sw_agent_agent_rp_ready),                              //   input,    width = 1,                .ready
		.rp_valid                (intel_niosv_m_0_timer_sw_agent_agent_rp_valid),                              //  output,    width = 1,                .valid
		.rp_data                 (intel_niosv_m_0_timer_sw_agent_agent_rp_data),                               //  output,  width = 142,                .data
		.rp_startofpacket        (intel_niosv_m_0_timer_sw_agent_agent_rp_startofpacket),                      //  output,    width = 1,                .startofpacket
		.cp_ready                (cmd_mux_006_src_ready),                                                      //  output,    width = 1,              cp.ready
		.cp_valid                (cmd_mux_006_src_valid),                                                      //   input,    width = 1,                .valid
		.cp_data                 (cmd_mux_006_src_data),                                                       //   input,  width = 142,                .data
		.cp_startofpacket        (cmd_mux_006_src_startofpacket),                                              //   input,    width = 1,                .startofpacket
		.cp_endofpacket          (cmd_mux_006_src_endofpacket),                                                //   input,    width = 1,                .endofpacket
		.cp_channel              (cmd_mux_006_src_channel),                                                    //   input,    width = 7,                .channel
		.rf_sink_ready           (intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo_out_ready),                    //  output,    width = 1,         rf_sink.ready
		.rf_sink_valid           (intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo_out_valid),                    //   input,    width = 1,                .valid
		.rf_sink_startofpacket   (intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo_out_startofpacket),            //   input,    width = 1,                .startofpacket
		.rf_sink_endofpacket     (intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo_out_endofpacket),              //   input,    width = 1,                .endofpacket
		.rf_sink_data            (intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo_out_data),                     //   input,  width = 143,                .data
		.rf_source_ready         (intel_niosv_m_0_timer_sw_agent_agent_rf_source_ready),                       //   input,    width = 1,       rf_source.ready
		.rf_source_valid         (intel_niosv_m_0_timer_sw_agent_agent_rf_source_valid),                       //  output,    width = 1,                .valid
		.rf_source_startofpacket (intel_niosv_m_0_timer_sw_agent_agent_rf_source_startofpacket),               //  output,    width = 1,                .startofpacket
		.rf_source_endofpacket   (intel_niosv_m_0_timer_sw_agent_agent_rf_source_endofpacket),                 //  output,    width = 1,                .endofpacket
		.rf_source_data          (intel_niosv_m_0_timer_sw_agent_agent_rf_source_data),                        //  output,  width = 143,                .data
		.rdata_fifo_sink_ready   (intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo_out_ready),                  //  output,    width = 1, rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo_out_valid),                  //   input,    width = 1,                .valid
		.rdata_fifo_sink_data    (intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo_out_data),                   //   input,   width = 34,                .data
		.rdata_fifo_src_ready    (intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo_src_ready),                  //   input,    width = 1,  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo_src_valid),                  //  output,    width = 1,                .valid
		.rdata_fifo_src_data     (intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo_src_data),                   //  output,   width = 34,                .data
		.m0_response             (2'b00),                                                                      // (terminated),                               
		.m0_writeresponsevalid   (1'b0),                                                                       // (terminated),                               
		.rdata_fifo_sink_error   (1'b0)                                                                        // (terminated),                               
	);

	qsys_top_altera_avalon_sc_fifo_1931_vhmcgqy #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (143),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0),
		.EMPTY_WIDTH         (1),
		.SYNC_RESET          (1)
	) intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo (
		.clk               (iopll_0_outclk0_clk),                                             //   input,    width = 1,       clk.clk
		.reset             (intel_niosv_m_0_reset_reset_bridge_in_reset_reset),               //   input,    width = 1, clk_reset.reset
		.in_data           (intel_niosv_m_0_timer_sw_agent_agent_rf_source_data),             //   input,  width = 143,        in.data
		.in_valid          (intel_niosv_m_0_timer_sw_agent_agent_rf_source_valid),            //   input,    width = 1,          .valid
		.in_ready          (intel_niosv_m_0_timer_sw_agent_agent_rf_source_ready),            //  output,    width = 1,          .ready
		.in_startofpacket  (intel_niosv_m_0_timer_sw_agent_agent_rf_source_startofpacket),    //   input,    width = 1,          .startofpacket
		.in_endofpacket    (intel_niosv_m_0_timer_sw_agent_agent_rf_source_endofpacket),      //   input,    width = 1,          .endofpacket
		.out_data          (intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo_out_data),          //  output,  width = 143,       out.data
		.out_valid         (intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo_out_valid),         //  output,    width = 1,          .valid
		.out_ready         (intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo_out_ready),         //   input,    width = 1,          .ready
		.out_startofpacket (intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo_out_startofpacket), //  output,    width = 1,          .startofpacket
		.out_endofpacket   (intel_niosv_m_0_timer_sw_agent_agent_rsp_fifo_out_endofpacket),   //  output,    width = 1,          .endofpacket
		.csr_address       (2'b00),                                                           // (terminated),                         
		.csr_read          (1'b0),                                                            // (terminated),                         
		.csr_write         (1'b0),                                                            // (terminated),                         
		.csr_readdata      (),                                                                // (terminated),                         
		.csr_writedata     (32'b00000000000000000000000000000000),                            // (terminated),                         
		.almost_full_data  (),                                                                // (terminated),                         
		.almost_empty_data (),                                                                // (terminated),                         
		.in_empty          (1'b0),                                                            // (terminated),                         
		.out_empty         (),                                                                // (terminated),                         
		.in_error          (1'b0),                                                            // (terminated),                         
		.out_error         (),                                                                // (terminated),                         
		.in_channel        (1'b0),                                                            // (terminated),                         
		.out_channel       ()                                                                 // (terminated),                         
	);

	qsys_top_altera_avalon_sc_fifo_1931_vhmcgqy #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0),
		.EMPTY_WIDTH         (1),
		.SYNC_RESET          (1)
	) intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo (
		.clk               (iopll_0_outclk0_clk),                                       //   input,   width = 1,       clk.clk
		.reset             (intel_niosv_m_0_reset_reset_bridge_in_reset_reset),         //   input,   width = 1, clk_reset.reset
		.in_data           (intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo_src_data),  //   input,  width = 34,        in.data
		.in_valid          (intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo_src_valid), //   input,   width = 1,          .valid
		.in_ready          (intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo_src_ready), //  output,   width = 1,          .ready
		.out_data          (intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo_out_data),  //  output,  width = 34,       out.data
		.out_valid         (intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo_out_valid), //  output,   width = 1,          .valid
		.out_ready         (intel_niosv_m_0_timer_sw_agent_agent_rdata_fifo_out_ready), //   input,   width = 1,          .ready
		.csr_address       (2'b00),                                                     // (terminated),                        
		.csr_read          (1'b0),                                                      // (terminated),                        
		.csr_write         (1'b0),                                                      // (terminated),                        
		.csr_readdata      (),                                                          // (terminated),                        
		.csr_writedata     (32'b00000000000000000000000000000000),                      // (terminated),                        
		.almost_full_data  (),                                                          // (terminated),                        
		.almost_empty_data (),                                                          // (terminated),                        
		.in_startofpacket  (1'b0),                                                      // (terminated),                        
		.in_endofpacket    (1'b0),                                                      // (terminated),                        
		.out_startofpacket (),                                                          // (terminated),                        
		.out_endofpacket   (),                                                          // (terminated),                        
		.in_empty          (1'b0),                                                      // (terminated),                        
		.out_empty         (),                                                          // (terminated),                        
		.in_error          (1'b0),                                                      // (terminated),                        
		.out_error         (),                                                          // (terminated),                        
		.in_channel        (1'b0),                                                      // (terminated),                        
		.out_channel       ()                                                           // (terminated),                        
	);

	qsys_top_altera_merlin_router_1921_utv3xty router (
		.sink_ready         (intel_niosv_m_0_data_manager_agent_write_cp_ready),                          //  output,    width = 1,      sink.ready
		.sink_valid         (intel_niosv_m_0_data_manager_agent_write_cp_valid),                          //   input,    width = 1,          .valid
		.sink_data          (intel_niosv_m_0_data_manager_agent_write_cp_data),                           //   input,  width = 142,          .data
		.sink_startofpacket (intel_niosv_m_0_data_manager_agent_write_cp_startofpacket),                  //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (intel_niosv_m_0_data_manager_agent_write_cp_endofpacket),                    //   input,    width = 1,          .endofpacket
		.clk                (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset              (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready          (router_src_ready),                                                           //   input,    width = 1,       src.ready
		.src_valid          (router_src_valid),                                                           //  output,    width = 1,          .valid
		.src_data           (router_src_data),                                                            //  output,  width = 142,          .data
		.src_channel        (router_src_channel),                                                         //  output,    width = 7,          .channel
		.src_startofpacket  (router_src_startofpacket),                                                   //  output,    width = 1,          .startofpacket
		.src_endofpacket    (router_src_endofpacket)                                                      //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_router_1921_zl5jwpa router_001 (
		.sink_ready         (intel_niosv_m_0_data_manager_agent_read_cp_ready),                           //  output,    width = 1,      sink.ready
		.sink_valid         (intel_niosv_m_0_data_manager_agent_read_cp_valid),                           //   input,    width = 1,          .valid
		.sink_data          (intel_niosv_m_0_data_manager_agent_read_cp_data),                            //   input,  width = 142,          .data
		.sink_startofpacket (intel_niosv_m_0_data_manager_agent_read_cp_startofpacket),                   //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (intel_niosv_m_0_data_manager_agent_read_cp_endofpacket),                     //   input,    width = 1,          .endofpacket
		.clk                (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset              (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready          (router_001_src_ready),                                                       //   input,    width = 1,       src.ready
		.src_valid          (router_001_src_valid),                                                       //  output,    width = 1,          .valid
		.src_data           (router_001_src_data),                                                        //  output,  width = 142,          .data
		.src_channel        (router_001_src_channel),                                                     //  output,    width = 7,          .channel
		.src_startofpacket  (router_001_src_startofpacket),                                               //  output,    width = 1,          .startofpacket
		.src_endofpacket    (router_001_src_endofpacket)                                                  //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_router_1921_kr7tdby router_002 (
		.sink_ready         (intel_niosv_m_0_instruction_manager_agent_write_cp_ready),                   //  output,    width = 1,      sink.ready
		.sink_valid         (intel_niosv_m_0_instruction_manager_agent_write_cp_valid),                   //   input,    width = 1,          .valid
		.sink_data          (intel_niosv_m_0_instruction_manager_agent_write_cp_data),                    //   input,  width = 142,          .data
		.sink_startofpacket (intel_niosv_m_0_instruction_manager_agent_write_cp_startofpacket),           //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (intel_niosv_m_0_instruction_manager_agent_write_cp_endofpacket),             //   input,    width = 1,          .endofpacket
		.clk                (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset              (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready          (router_002_src_ready),                                                       //   input,    width = 1,       src.ready
		.src_valid          (router_002_src_valid),                                                       //  output,    width = 1,          .valid
		.src_data           (router_002_src_data),                                                        //  output,  width = 142,          .data
		.src_channel        (router_002_src_channel),                                                     //  output,    width = 7,          .channel
		.src_startofpacket  (router_002_src_startofpacket),                                               //  output,    width = 1,          .startofpacket
		.src_endofpacket    (router_002_src_endofpacket)                                                  //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_router_1921_ximin2q router_003 (
		.sink_ready         (intel_niosv_m_0_instruction_manager_agent_read_cp_ready),                    //  output,    width = 1,      sink.ready
		.sink_valid         (intel_niosv_m_0_instruction_manager_agent_read_cp_valid),                    //   input,    width = 1,          .valid
		.sink_data          (intel_niosv_m_0_instruction_manager_agent_read_cp_data),                     //   input,  width = 142,          .data
		.sink_startofpacket (intel_niosv_m_0_instruction_manager_agent_read_cp_startofpacket),            //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (intel_niosv_m_0_instruction_manager_agent_read_cp_endofpacket),              //   input,    width = 1,          .endofpacket
		.clk                (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset              (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready          (router_003_src_ready),                                                       //   input,    width = 1,       src.ready
		.src_valid          (router_003_src_valid),                                                       //  output,    width = 1,          .valid
		.src_data           (router_003_src_data),                                                        //  output,  width = 142,          .data
		.src_channel        (router_003_src_channel),                                                     //  output,    width = 7,          .channel
		.src_startofpacket  (router_003_src_startofpacket),                                               //  output,    width = 1,          .startofpacket
		.src_endofpacket    (router_003_src_endofpacket)                                                  //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_router_1921_u3zwzza router_004 (
		.sink_ready         (jtag_uart_0_avalon_jtag_slave_agent_rp_ready),                               //  output,    width = 1,      sink.ready
		.sink_valid         (jtag_uart_0_avalon_jtag_slave_agent_rp_valid),                               //   input,    width = 1,          .valid
		.sink_data          (jtag_uart_0_avalon_jtag_slave_agent_rp_data),                                //   input,  width = 142,          .data
		.sink_startofpacket (jtag_uart_0_avalon_jtag_slave_agent_rp_startofpacket),                       //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (jtag_uart_0_avalon_jtag_slave_agent_rp_endofpacket),                         //   input,    width = 1,          .endofpacket
		.clk                (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset              (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready          (router_004_src_ready),                                                       //   input,    width = 1,       src.ready
		.src_valid          (router_004_src_valid),                                                       //  output,    width = 1,          .valid
		.src_data           (router_004_src_data),                                                        //  output,  width = 142,          .data
		.src_channel        (router_004_src_channel),                                                     //  output,    width = 7,          .channel
		.src_startofpacket  (router_004_src_startofpacket),                                               //  output,    width = 1,          .startofpacket
		.src_endofpacket    (router_004_src_endofpacket)                                                  //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_router_1921_dimnyca router_005 (
		.sink_ready         (intel_onchip_memory_0_axi_s1_agent_write_rp_ready),                          //  output,    width = 1,      sink.ready
		.sink_valid         (intel_onchip_memory_0_axi_s1_agent_write_rp_valid),                          //   input,    width = 1,          .valid
		.sink_data          (intel_onchip_memory_0_axi_s1_agent_write_rp_data),                           //   input,  width = 142,          .data
		.sink_startofpacket (intel_onchip_memory_0_axi_s1_agent_write_rp_startofpacket),                  //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (intel_onchip_memory_0_axi_s1_agent_write_rp_endofpacket),                    //   input,    width = 1,          .endofpacket
		.clk                (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset              (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready          (router_005_src_ready),                                                       //   input,    width = 1,       src.ready
		.src_valid          (router_005_src_valid),                                                       //  output,    width = 1,          .valid
		.src_data           (router_005_src_data),                                                        //  output,  width = 142,          .data
		.src_channel        (router_005_src_channel),                                                     //  output,    width = 7,          .channel
		.src_startofpacket  (router_005_src_startofpacket),                                               //  output,    width = 1,          .startofpacket
		.src_endofpacket    (router_005_src_endofpacket)                                                  //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_router_1921_jtwzolq router_006 (
		.sink_ready         (intel_onchip_memory_0_axi_s1_agent_read_rp_ready),                           //  output,    width = 1,      sink.ready
		.sink_valid         (intel_onchip_memory_0_axi_s1_agent_read_rp_valid),                           //   input,    width = 1,          .valid
		.sink_data          (intel_onchip_memory_0_axi_s1_agent_read_rp_data),                            //   input,  width = 142,          .data
		.sink_startofpacket (intel_onchip_memory_0_axi_s1_agent_read_rp_startofpacket),                   //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (intel_onchip_memory_0_axi_s1_agent_read_rp_endofpacket),                     //   input,    width = 1,          .endofpacket
		.clk                (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset              (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready          (router_006_src_ready),                                                       //   input,    width = 1,       src.ready
		.src_valid          (router_006_src_valid),                                                       //  output,    width = 1,          .valid
		.src_data           (router_006_src_data),                                                        //  output,  width = 142,          .data
		.src_channel        (router_006_src_channel),                                                     //  output,    width = 7,          .channel
		.src_startofpacket  (router_006_src_startofpacket),                                               //  output,    width = 1,          .startofpacket
		.src_endofpacket    (router_006_src_endofpacket)                                                  //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_router_1921_u3zwzza router_007 (
		.sink_ready         (sysid_qsys_0_control_slave_agent_rp_ready),                                  //  output,    width = 1,      sink.ready
		.sink_valid         (sysid_qsys_0_control_slave_agent_rp_valid),                                  //   input,    width = 1,          .valid
		.sink_data          (sysid_qsys_0_control_slave_agent_rp_data),                                   //   input,  width = 142,          .data
		.sink_startofpacket (sysid_qsys_0_control_slave_agent_rp_startofpacket),                          //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (sysid_qsys_0_control_slave_agent_rp_endofpacket),                            //   input,    width = 1,          .endofpacket
		.clk                (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset              (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready          (router_007_src_ready),                                                       //   input,    width = 1,       src.ready
		.src_valid          (router_007_src_valid),                                                       //  output,    width = 1,          .valid
		.src_data           (router_007_src_data),                                                        //  output,  width = 142,          .data
		.src_channel        (router_007_src_channel),                                                     //  output,    width = 7,          .channel
		.src_startofpacket  (router_007_src_startofpacket),                                               //  output,    width = 1,          .startofpacket
		.src_endofpacket    (router_007_src_endofpacket)                                                  //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_router_1921_4swavfy router_008 (
		.sink_ready         (intel_niosv_m_0_dm_agent_agent_rp_ready),                                    //  output,    width = 1,      sink.ready
		.sink_valid         (intel_niosv_m_0_dm_agent_agent_rp_valid),                                    //   input,    width = 1,          .valid
		.sink_data          (intel_niosv_m_0_dm_agent_agent_rp_data),                                     //   input,  width = 142,          .data
		.sink_startofpacket (intel_niosv_m_0_dm_agent_agent_rp_startofpacket),                            //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (intel_niosv_m_0_dm_agent_agent_rp_endofpacket),                              //   input,    width = 1,          .endofpacket
		.clk                (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset              (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready          (router_008_src_ready),                                                       //   input,    width = 1,       src.ready
		.src_valid          (router_008_src_valid),                                                       //  output,    width = 1,          .valid
		.src_data           (router_008_src_data),                                                        //  output,  width = 142,          .data
		.src_channel        (router_008_src_channel),                                                     //  output,    width = 7,          .channel
		.src_startofpacket  (router_008_src_startofpacket),                                               //  output,    width = 1,          .startofpacket
		.src_endofpacket    (router_008_src_endofpacket)                                                  //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_router_1921_u3zwzza router_009 (
		.sink_ready         (pio_0_s1_agent_rp_ready),                                                    //  output,    width = 1,      sink.ready
		.sink_valid         (pio_0_s1_agent_rp_valid),                                                    //   input,    width = 1,          .valid
		.sink_data          (pio_0_s1_agent_rp_data),                                                     //   input,  width = 142,          .data
		.sink_startofpacket (pio_0_s1_agent_rp_startofpacket),                                            //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (pio_0_s1_agent_rp_endofpacket),                                              //   input,    width = 1,          .endofpacket
		.clk                (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset              (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready          (router_009_src_ready),                                                       //   input,    width = 1,       src.ready
		.src_valid          (router_009_src_valid),                                                       //  output,    width = 1,          .valid
		.src_data           (router_009_src_data),                                                        //  output,  width = 142,          .data
		.src_channel        (router_009_src_channel),                                                     //  output,    width = 7,          .channel
		.src_startofpacket  (router_009_src_startofpacket),                                               //  output,    width = 1,          .startofpacket
		.src_endofpacket    (router_009_src_endofpacket)                                                  //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_router_1921_u3zwzza router_010 (
		.sink_ready         (intel_niosv_m_0_timer_sw_agent_agent_rp_ready),                              //  output,    width = 1,      sink.ready
		.sink_valid         (intel_niosv_m_0_timer_sw_agent_agent_rp_valid),                              //   input,    width = 1,          .valid
		.sink_data          (intel_niosv_m_0_timer_sw_agent_agent_rp_data),                               //   input,  width = 142,          .data
		.sink_startofpacket (intel_niosv_m_0_timer_sw_agent_agent_rp_startofpacket),                      //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (intel_niosv_m_0_timer_sw_agent_agent_rp_endofpacket),                        //   input,    width = 1,          .endofpacket
		.clk                (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset              (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready          (router_010_src_ready),                                                       //   input,    width = 1,       src.ready
		.src_valid          (router_010_src_valid),                                                       //  output,    width = 1,          .valid
		.src_data           (router_010_src_data),                                                        //  output,  width = 142,          .data
		.src_channel        (router_010_src_channel),                                                     //  output,    width = 7,          .channel
		.src_startofpacket  (router_010_src_startofpacket),                                               //  output,    width = 1,          .startofpacket
		.src_endofpacket    (router_010_src_endofpacket)                                                  //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_traffic_limiter_1921_ggluely #(
		.SYNC_RESET                           (1),
		.PKT_DEST_ID_H                        (109),
		.PKT_DEST_ID_L                        (107),
		.PKT_SRC_ID_H                         (106),
		.PKT_SRC_ID_L                         (104),
		.PKT_BYTE_CNT_H                       (84),
		.PKT_BYTE_CNT_L                       (74),
		.PKT_BYTEEN_H                         (35),
		.PKT_BYTEEN_L                         (32),
		.PKT_TRANS_POSTED                     (69),
		.PKT_TRANS_WRITE                      (70),
		.PKT_TRANS_SEQ_H                      (141),
		.PKT_TRANS_SEQ_L                      (138),
		.MAX_OUTSTANDING_RESPONSES            (3),
		.PIPELINED                            (0),
		.ST_DATA_W                            (142),
		.ST_CHANNEL_W                         (7),
		.VALID_WIDTH                          (7),
		.ENFORCE_ORDER                        (1),
		.PREVENT_HAZARDS                      (0),
		.SUPPORTS_POSTED_WRITES               (1),
		.SUPPORTS_NONPOSTED_WRITES            (0),
		.REORDER                              (0),
		.ENABLE_CONCURRENT_SUBORDINATE_ACCESS (0),
		.NO_REPEATED_IDS_BETWEEN_SUBORDINATES (0),
		.ENABLE_OOO                           (0)
	) intel_niosv_m_0_instruction_manager_wr_limiter (
		.clk                    (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset                  (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.cmd_sink_ready         (router_002_src_ready),                                                       //  output,    width = 1,  cmd_sink.ready
		.cmd_sink_valid         (router_002_src_valid),                                                       //   input,    width = 1,          .valid
		.cmd_sink_data          (router_002_src_data),                                                        //   input,  width = 142,          .data
		.cmd_sink_channel       (router_002_src_channel),                                                     //   input,    width = 7,          .channel
		.cmd_sink_startofpacket (router_002_src_startofpacket),                                               //   input,    width = 1,          .startofpacket
		.cmd_sink_endofpacket   (router_002_src_endofpacket),                                                 //   input,    width = 1,          .endofpacket
		.cmd_src_ready          (intel_niosv_m_0_instruction_manager_wr_limiter_cmd_src_ready),               //   input,    width = 1,   cmd_src.ready
		.cmd_src_data           (intel_niosv_m_0_instruction_manager_wr_limiter_cmd_src_data),                //  output,  width = 142,          .data
		.cmd_src_channel        (intel_niosv_m_0_instruction_manager_wr_limiter_cmd_src_channel),             //  output,    width = 7,          .channel
		.cmd_src_startofpacket  (intel_niosv_m_0_instruction_manager_wr_limiter_cmd_src_startofpacket),       //  output,    width = 1,          .startofpacket
		.cmd_src_endofpacket    (intel_niosv_m_0_instruction_manager_wr_limiter_cmd_src_endofpacket),         //  output,    width = 1,          .endofpacket
		.rsp_sink_ready         (rsp_mux_002_src_ready),                                                      //  output,    width = 1,  rsp_sink.ready
		.rsp_sink_valid         (rsp_mux_002_src_valid),                                                      //   input,    width = 1,          .valid
		.rsp_sink_channel       (rsp_mux_002_src_channel),                                                    //   input,    width = 7,          .channel
		.rsp_sink_data          (rsp_mux_002_src_data),                                                       //   input,  width = 142,          .data
		.rsp_sink_startofpacket (rsp_mux_002_src_startofpacket),                                              //   input,    width = 1,          .startofpacket
		.rsp_sink_endofpacket   (rsp_mux_002_src_endofpacket),                                                //   input,    width = 1,          .endofpacket
		.rsp_src_ready          (intel_niosv_m_0_instruction_manager_wr_limiter_rsp_src_ready),               //   input,    width = 1,   rsp_src.ready
		.rsp_src_valid          (intel_niosv_m_0_instruction_manager_wr_limiter_rsp_src_valid),               //  output,    width = 1,          .valid
		.rsp_src_data           (intel_niosv_m_0_instruction_manager_wr_limiter_rsp_src_data),                //  output,  width = 142,          .data
		.rsp_src_channel        (intel_niosv_m_0_instruction_manager_wr_limiter_rsp_src_channel),             //  output,    width = 7,          .channel
		.rsp_src_startofpacket  (intel_niosv_m_0_instruction_manager_wr_limiter_rsp_src_startofpacket),       //  output,    width = 1,          .startofpacket
		.rsp_src_endofpacket    (intel_niosv_m_0_instruction_manager_wr_limiter_rsp_src_endofpacket),         //  output,    width = 1,          .endofpacket
		.cmd_src_valid          (intel_niosv_m_0_instruction_manager_wr_limiter_cmd_valid_data)               //  output,    width = 7, cmd_valid.data
	);

	qsys_top_altera_merlin_traffic_limiter_1921_ggluely #(
		.SYNC_RESET                           (1),
		.PKT_DEST_ID_H                        (109),
		.PKT_DEST_ID_L                        (107),
		.PKT_SRC_ID_H                         (106),
		.PKT_SRC_ID_L                         (104),
		.PKT_BYTE_CNT_H                       (84),
		.PKT_BYTE_CNT_L                       (74),
		.PKT_BYTEEN_H                         (35),
		.PKT_BYTEEN_L                         (32),
		.PKT_TRANS_POSTED                     (69),
		.PKT_TRANS_WRITE                      (70),
		.PKT_TRANS_SEQ_H                      (141),
		.PKT_TRANS_SEQ_L                      (138),
		.MAX_OUTSTANDING_RESPONSES            (3),
		.PIPELINED                            (0),
		.ST_DATA_W                            (142),
		.ST_CHANNEL_W                         (7),
		.VALID_WIDTH                          (7),
		.ENFORCE_ORDER                        (1),
		.PREVENT_HAZARDS                      (0),
		.SUPPORTS_POSTED_WRITES               (1),
		.SUPPORTS_NONPOSTED_WRITES            (0),
		.REORDER                              (0),
		.ENABLE_CONCURRENT_SUBORDINATE_ACCESS (0),
		.NO_REPEATED_IDS_BETWEEN_SUBORDINATES (0),
		.ENABLE_OOO                           (0)
	) intel_niosv_m_0_instruction_manager_rd_limiter (
		.clk                    (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset                  (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.cmd_sink_ready         (router_003_src_ready),                                                       //  output,    width = 1,  cmd_sink.ready
		.cmd_sink_valid         (router_003_src_valid),                                                       //   input,    width = 1,          .valid
		.cmd_sink_data          (router_003_src_data),                                                        //   input,  width = 142,          .data
		.cmd_sink_channel       (router_003_src_channel),                                                     //   input,    width = 7,          .channel
		.cmd_sink_startofpacket (router_003_src_startofpacket),                                               //   input,    width = 1,          .startofpacket
		.cmd_sink_endofpacket   (router_003_src_endofpacket),                                                 //   input,    width = 1,          .endofpacket
		.cmd_src_ready          (intel_niosv_m_0_instruction_manager_rd_limiter_cmd_src_ready),               //   input,    width = 1,   cmd_src.ready
		.cmd_src_data           (intel_niosv_m_0_instruction_manager_rd_limiter_cmd_src_data),                //  output,  width = 142,          .data
		.cmd_src_channel        (intel_niosv_m_0_instruction_manager_rd_limiter_cmd_src_channel),             //  output,    width = 7,          .channel
		.cmd_src_startofpacket  (intel_niosv_m_0_instruction_manager_rd_limiter_cmd_src_startofpacket),       //  output,    width = 1,          .startofpacket
		.cmd_src_endofpacket    (intel_niosv_m_0_instruction_manager_rd_limiter_cmd_src_endofpacket),         //  output,    width = 1,          .endofpacket
		.rsp_sink_ready         (rsp_mux_003_src_ready),                                                      //  output,    width = 1,  rsp_sink.ready
		.rsp_sink_valid         (rsp_mux_003_src_valid),                                                      //   input,    width = 1,          .valid
		.rsp_sink_channel       (rsp_mux_003_src_channel),                                                    //   input,    width = 7,          .channel
		.rsp_sink_data          (rsp_mux_003_src_data),                                                       //   input,  width = 142,          .data
		.rsp_sink_startofpacket (rsp_mux_003_src_startofpacket),                                              //   input,    width = 1,          .startofpacket
		.rsp_sink_endofpacket   (rsp_mux_003_src_endofpacket),                                                //   input,    width = 1,          .endofpacket
		.rsp_src_ready          (intel_niosv_m_0_instruction_manager_rd_limiter_rsp_src_ready),               //   input,    width = 1,   rsp_src.ready
		.rsp_src_valid          (intel_niosv_m_0_instruction_manager_rd_limiter_rsp_src_valid),               //  output,    width = 1,          .valid
		.rsp_src_data           (intel_niosv_m_0_instruction_manager_rd_limiter_rsp_src_data),                //  output,  width = 142,          .data
		.rsp_src_channel        (intel_niosv_m_0_instruction_manager_rd_limiter_rsp_src_channel),             //  output,    width = 7,          .channel
		.rsp_src_startofpacket  (intel_niosv_m_0_instruction_manager_rd_limiter_rsp_src_startofpacket),       //  output,    width = 1,          .startofpacket
		.rsp_src_endofpacket    (intel_niosv_m_0_instruction_manager_rd_limiter_rsp_src_endofpacket),         //  output,    width = 1,          .endofpacket
		.cmd_src_valid          (intel_niosv_m_0_instruction_manager_rd_limiter_cmd_valid_data)               //  output,    width = 7, cmd_valid.data
	);

	qsys_top_altera_merlin_demultiplexer_1921_ug4puiy cmd_demux (
		.clk                (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset              (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.sink_ready         (router_src_ready),                                                           //  output,    width = 1,      sink.ready
		.sink_channel       (router_src_channel),                                                         //   input,    width = 7,          .channel
		.sink_data          (router_src_data),                                                            //   input,  width = 142,          .data
		.sink_startofpacket (router_src_startofpacket),                                                   //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (router_src_endofpacket),                                                     //   input,    width = 1,          .endofpacket
		.sink_valid         (router_src_valid),                                                           //   input,    width = 1,          .valid
		.src0_ready         (cmd_demux_src0_ready),                                                       //   input,    width = 1,      src0.ready
		.src0_valid         (cmd_demux_src0_valid),                                                       //  output,    width = 1,          .valid
		.src0_data          (cmd_demux_src0_data),                                                        //  output,  width = 142,          .data
		.src0_channel       (cmd_demux_src0_channel),                                                     //  output,    width = 7,          .channel
		.src0_startofpacket (cmd_demux_src0_startofpacket),                                               //  output,    width = 1,          .startofpacket
		.src0_endofpacket   (cmd_demux_src0_endofpacket),                                                 //  output,    width = 1,          .endofpacket
		.src1_ready         (cmd_demux_src1_ready),                                                       //   input,    width = 1,      src1.ready
		.src1_valid         (cmd_demux_src1_valid),                                                       //  output,    width = 1,          .valid
		.src1_data          (cmd_demux_src1_data),                                                        //  output,  width = 142,          .data
		.src1_channel       (cmd_demux_src1_channel),                                                     //  output,    width = 7,          .channel
		.src1_startofpacket (cmd_demux_src1_startofpacket),                                               //  output,    width = 1,          .startofpacket
		.src1_endofpacket   (cmd_demux_src1_endofpacket),                                                 //  output,    width = 1,          .endofpacket
		.src2_ready         (cmd_demux_src2_ready),                                                       //   input,    width = 1,      src2.ready
		.src2_valid         (cmd_demux_src2_valid),                                                       //  output,    width = 1,          .valid
		.src2_data          (cmd_demux_src2_data),                                                        //  output,  width = 142,          .data
		.src2_channel       (cmd_demux_src2_channel),                                                     //  output,    width = 7,          .channel
		.src2_startofpacket (cmd_demux_src2_startofpacket),                                               //  output,    width = 1,          .startofpacket
		.src2_endofpacket   (cmd_demux_src2_endofpacket),                                                 //  output,    width = 1,          .endofpacket
		.src3_ready         (cmd_demux_src3_ready),                                                       //   input,    width = 1,      src3.ready
		.src3_valid         (cmd_demux_src3_valid),                                                       //  output,    width = 1,          .valid
		.src3_data          (cmd_demux_src3_data),                                                        //  output,  width = 142,          .data
		.src3_channel       (cmd_demux_src3_channel),                                                     //  output,    width = 7,          .channel
		.src3_startofpacket (cmd_demux_src3_startofpacket),                                               //  output,    width = 1,          .startofpacket
		.src3_endofpacket   (cmd_demux_src3_endofpacket),                                                 //  output,    width = 1,          .endofpacket
		.src4_ready         (cmd_demux_src4_ready),                                                       //   input,    width = 1,      src4.ready
		.src4_valid         (cmd_demux_src4_valid),                                                       //  output,    width = 1,          .valid
		.src4_data          (cmd_demux_src4_data),                                                        //  output,  width = 142,          .data
		.src4_channel       (cmd_demux_src4_channel),                                                     //  output,    width = 7,          .channel
		.src4_startofpacket (cmd_demux_src4_startofpacket),                                               //  output,    width = 1,          .startofpacket
		.src4_endofpacket   (cmd_demux_src4_endofpacket),                                                 //  output,    width = 1,          .endofpacket
		.src5_ready         (cmd_demux_src5_ready),                                                       //   input,    width = 1,      src5.ready
		.src5_valid         (cmd_demux_src5_valid),                                                       //  output,    width = 1,          .valid
		.src5_data          (cmd_demux_src5_data),                                                        //  output,  width = 142,          .data
		.src5_channel       (cmd_demux_src5_channel),                                                     //  output,    width = 7,          .channel
		.src5_startofpacket (cmd_demux_src5_startofpacket),                                               //  output,    width = 1,          .startofpacket
		.src5_endofpacket   (cmd_demux_src5_endofpacket)                                                  //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_demultiplexer_1921_ug4puiy cmd_demux_001 (
		.clk                (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset              (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.sink_ready         (router_001_src_ready),                                                       //  output,    width = 1,      sink.ready
		.sink_channel       (router_001_src_channel),                                                     //   input,    width = 7,          .channel
		.sink_data          (router_001_src_data),                                                        //   input,  width = 142,          .data
		.sink_startofpacket (router_001_src_startofpacket),                                               //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (router_001_src_endofpacket),                                                 //   input,    width = 1,          .endofpacket
		.sink_valid         (router_001_src_valid),                                                       //   input,    width = 1,          .valid
		.src0_ready         (cmd_demux_001_src0_ready),                                                   //   input,    width = 1,      src0.ready
		.src0_valid         (cmd_demux_001_src0_valid),                                                   //  output,    width = 1,          .valid
		.src0_data          (cmd_demux_001_src0_data),                                                    //  output,  width = 142,          .data
		.src0_channel       (cmd_demux_001_src0_channel),                                                 //  output,    width = 7,          .channel
		.src0_startofpacket (cmd_demux_001_src0_startofpacket),                                           //  output,    width = 1,          .startofpacket
		.src0_endofpacket   (cmd_demux_001_src0_endofpacket),                                             //  output,    width = 1,          .endofpacket
		.src1_ready         (cmd_demux_001_src1_ready),                                                   //   input,    width = 1,      src1.ready
		.src1_valid         (cmd_demux_001_src1_valid),                                                   //  output,    width = 1,          .valid
		.src1_data          (cmd_demux_001_src1_data),                                                    //  output,  width = 142,          .data
		.src1_channel       (cmd_demux_001_src1_channel),                                                 //  output,    width = 7,          .channel
		.src1_startofpacket (cmd_demux_001_src1_startofpacket),                                           //  output,    width = 1,          .startofpacket
		.src1_endofpacket   (cmd_demux_001_src1_endofpacket),                                             //  output,    width = 1,          .endofpacket
		.src2_ready         (cmd_demux_001_src2_ready),                                                   //   input,    width = 1,      src2.ready
		.src2_valid         (cmd_demux_001_src2_valid),                                                   //  output,    width = 1,          .valid
		.src2_data          (cmd_demux_001_src2_data),                                                    //  output,  width = 142,          .data
		.src2_channel       (cmd_demux_001_src2_channel),                                                 //  output,    width = 7,          .channel
		.src2_startofpacket (cmd_demux_001_src2_startofpacket),                                           //  output,    width = 1,          .startofpacket
		.src2_endofpacket   (cmd_demux_001_src2_endofpacket),                                             //  output,    width = 1,          .endofpacket
		.src3_ready         (cmd_demux_001_src3_ready),                                                   //   input,    width = 1,      src3.ready
		.src3_valid         (cmd_demux_001_src3_valid),                                                   //  output,    width = 1,          .valid
		.src3_data          (cmd_demux_001_src3_data),                                                    //  output,  width = 142,          .data
		.src3_channel       (cmd_demux_001_src3_channel),                                                 //  output,    width = 7,          .channel
		.src3_startofpacket (cmd_demux_001_src3_startofpacket),                                           //  output,    width = 1,          .startofpacket
		.src3_endofpacket   (cmd_demux_001_src3_endofpacket),                                             //  output,    width = 1,          .endofpacket
		.src4_ready         (cmd_demux_001_src4_ready),                                                   //   input,    width = 1,      src4.ready
		.src4_valid         (cmd_demux_001_src4_valid),                                                   //  output,    width = 1,          .valid
		.src4_data          (cmd_demux_001_src4_data),                                                    //  output,  width = 142,          .data
		.src4_channel       (cmd_demux_001_src4_channel),                                                 //  output,    width = 7,          .channel
		.src4_startofpacket (cmd_demux_001_src4_startofpacket),                                           //  output,    width = 1,          .startofpacket
		.src4_endofpacket   (cmd_demux_001_src4_endofpacket),                                             //  output,    width = 1,          .endofpacket
		.src5_ready         (cmd_demux_001_src5_ready),                                                   //   input,    width = 1,      src5.ready
		.src5_valid         (cmd_demux_001_src5_valid),                                                   //  output,    width = 1,          .valid
		.src5_data          (cmd_demux_001_src5_data),                                                    //  output,  width = 142,          .data
		.src5_channel       (cmd_demux_001_src5_channel),                                                 //  output,    width = 7,          .channel
		.src5_startofpacket (cmd_demux_001_src5_startofpacket),                                           //  output,    width = 1,          .startofpacket
		.src5_endofpacket   (cmd_demux_001_src5_endofpacket)                                              //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_demultiplexer_1921_ieuwgoi cmd_demux_002 (
		.clk                (iopll_0_outclk0_clk),                                                        //   input,    width = 1,        clk.clk
		.reset              (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1,  clk_reset.reset
		.sink_ready         (intel_niosv_m_0_instruction_manager_wr_limiter_cmd_src_ready),               //  output,    width = 1,       sink.ready
		.sink_channel       (intel_niosv_m_0_instruction_manager_wr_limiter_cmd_src_channel),             //   input,    width = 7,           .channel
		.sink_data          (intel_niosv_m_0_instruction_manager_wr_limiter_cmd_src_data),                //   input,  width = 142,           .data
		.sink_startofpacket (intel_niosv_m_0_instruction_manager_wr_limiter_cmd_src_startofpacket),       //   input,    width = 1,           .startofpacket
		.sink_endofpacket   (intel_niosv_m_0_instruction_manager_wr_limiter_cmd_src_endofpacket),         //   input,    width = 1,           .endofpacket
		.sink_valid         (intel_niosv_m_0_instruction_manager_wr_limiter_cmd_valid_data),              //   input,    width = 7, sink_valid.data
		.src0_ready         (cmd_demux_002_src0_ready),                                                   //   input,    width = 1,       src0.ready
		.src0_valid         (cmd_demux_002_src0_valid),                                                   //  output,    width = 1,           .valid
		.src0_data          (cmd_demux_002_src0_data),                                                    //  output,  width = 142,           .data
		.src0_channel       (cmd_demux_002_src0_channel),                                                 //  output,    width = 7,           .channel
		.src0_startofpacket (cmd_demux_002_src0_startofpacket),                                           //  output,    width = 1,           .startofpacket
		.src0_endofpacket   (cmd_demux_002_src0_endofpacket),                                             //  output,    width = 1,           .endofpacket
		.src1_ready         (cmd_demux_002_src1_ready),                                                   //   input,    width = 1,       src1.ready
		.src1_valid         (cmd_demux_002_src1_valid),                                                   //  output,    width = 1,           .valid
		.src1_data          (cmd_demux_002_src1_data),                                                    //  output,  width = 142,           .data
		.src1_channel       (cmd_demux_002_src1_channel),                                                 //  output,    width = 7,           .channel
		.src1_startofpacket (cmd_demux_002_src1_startofpacket),                                           //  output,    width = 1,           .startofpacket
		.src1_endofpacket   (cmd_demux_002_src1_endofpacket)                                              //  output,    width = 1,           .endofpacket
	);

	qsys_top_altera_merlin_demultiplexer_1921_ieuwgoi cmd_demux_003 (
		.clk                (iopll_0_outclk0_clk),                                                        //   input,    width = 1,        clk.clk
		.reset              (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1,  clk_reset.reset
		.sink_ready         (intel_niosv_m_0_instruction_manager_rd_limiter_cmd_src_ready),               //  output,    width = 1,       sink.ready
		.sink_channel       (intel_niosv_m_0_instruction_manager_rd_limiter_cmd_src_channel),             //   input,    width = 7,           .channel
		.sink_data          (intel_niosv_m_0_instruction_manager_rd_limiter_cmd_src_data),                //   input,  width = 142,           .data
		.sink_startofpacket (intel_niosv_m_0_instruction_manager_rd_limiter_cmd_src_startofpacket),       //   input,    width = 1,           .startofpacket
		.sink_endofpacket   (intel_niosv_m_0_instruction_manager_rd_limiter_cmd_src_endofpacket),         //   input,    width = 1,           .endofpacket
		.sink_valid         (intel_niosv_m_0_instruction_manager_rd_limiter_cmd_valid_data),              //   input,    width = 7, sink_valid.data
		.src0_ready         (cmd_demux_003_src0_ready),                                                   //   input,    width = 1,       src0.ready
		.src0_valid         (cmd_demux_003_src0_valid),                                                   //  output,    width = 1,           .valid
		.src0_data          (cmd_demux_003_src0_data),                                                    //  output,  width = 142,           .data
		.src0_channel       (cmd_demux_003_src0_channel),                                                 //  output,    width = 7,           .channel
		.src0_startofpacket (cmd_demux_003_src0_startofpacket),                                           //  output,    width = 1,           .startofpacket
		.src0_endofpacket   (cmd_demux_003_src0_endofpacket),                                             //  output,    width = 1,           .endofpacket
		.src1_ready         (cmd_demux_003_src1_ready),                                                   //   input,    width = 1,       src1.ready
		.src1_valid         (cmd_demux_003_src1_valid),                                                   //  output,    width = 1,           .valid
		.src1_data          (cmd_demux_003_src1_data),                                                    //  output,  width = 142,           .data
		.src1_channel       (cmd_demux_003_src1_channel),                                                 //  output,    width = 7,           .channel
		.src1_startofpacket (cmd_demux_003_src1_startofpacket),                                           //  output,    width = 1,           .startofpacket
		.src1_endofpacket   (cmd_demux_003_src1_endofpacket)                                              //  output,    width = 1,           .endofpacket
	);

	qsys_top_altera_merlin_multiplexer_1922_6ealezi cmd_mux (
		.clk                 (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset               (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready           (cmd_mux_src_ready),                                                          //   input,    width = 1,       src.ready
		.src_valid           (cmd_mux_src_valid),                                                          //  output,    width = 1,          .valid
		.src_data            (cmd_mux_src_data),                                                           //  output,  width = 142,          .data
		.src_channel         (cmd_mux_src_channel),                                                        //  output,    width = 7,          .channel
		.src_startofpacket   (cmd_mux_src_startofpacket),                                                  //  output,    width = 1,          .startofpacket
		.src_endofpacket     (cmd_mux_src_endofpacket),                                                    //  output,    width = 1,          .endofpacket
		.sink0_ready         (cmd_demux_src0_ready),                                                       //  output,    width = 1,     sink0.ready
		.sink0_valid         (cmd_demux_src0_valid),                                                       //   input,    width = 1,          .valid
		.sink0_channel       (cmd_demux_src0_channel),                                                     //   input,    width = 7,          .channel
		.sink0_data          (cmd_demux_src0_data),                                                        //   input,  width = 142,          .data
		.sink0_startofpacket (cmd_demux_src0_startofpacket),                                               //   input,    width = 1,          .startofpacket
		.sink0_endofpacket   (cmd_demux_src0_endofpacket),                                                 //   input,    width = 1,          .endofpacket
		.sink1_ready         (cmd_demux_001_src0_ready),                                                   //  output,    width = 1,     sink1.ready
		.sink1_valid         (cmd_demux_001_src0_valid),                                                   //   input,    width = 1,          .valid
		.sink1_channel       (cmd_demux_001_src0_channel),                                                 //   input,    width = 7,          .channel
		.sink1_data          (cmd_demux_001_src0_data),                                                    //   input,  width = 142,          .data
		.sink1_startofpacket (cmd_demux_001_src0_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink1_endofpacket   (cmd_demux_001_src0_endofpacket)                                              //   input,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_multiplexer_1922_6ealezi cmd_mux_001 (
		.clk                 (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset               (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready           (cmd_mux_001_src_ready),                                                      //   input,    width = 1,       src.ready
		.src_valid           (cmd_mux_001_src_valid),                                                      //  output,    width = 1,          .valid
		.src_data            (cmd_mux_001_src_data),                                                       //  output,  width = 142,          .data
		.src_channel         (cmd_mux_001_src_channel),                                                    //  output,    width = 7,          .channel
		.src_startofpacket   (cmd_mux_001_src_startofpacket),                                              //  output,    width = 1,          .startofpacket
		.src_endofpacket     (cmd_mux_001_src_endofpacket),                                                //  output,    width = 1,          .endofpacket
		.sink0_ready         (cmd_demux_src1_ready),                                                       //  output,    width = 1,     sink0.ready
		.sink0_valid         (cmd_demux_src1_valid),                                                       //   input,    width = 1,          .valid
		.sink0_channel       (cmd_demux_src1_channel),                                                     //   input,    width = 7,          .channel
		.sink0_data          (cmd_demux_src1_data),                                                        //   input,  width = 142,          .data
		.sink0_startofpacket (cmd_demux_src1_startofpacket),                                               //   input,    width = 1,          .startofpacket
		.sink0_endofpacket   (cmd_demux_src1_endofpacket),                                                 //   input,    width = 1,          .endofpacket
		.sink1_ready         (cmd_demux_002_src0_ready),                                                   //  output,    width = 1,     sink1.ready
		.sink1_valid         (cmd_demux_002_src0_valid),                                                   //   input,    width = 1,          .valid
		.sink1_channel       (cmd_demux_002_src0_channel),                                                 //   input,    width = 7,          .channel
		.sink1_data          (cmd_demux_002_src0_data),                                                    //   input,  width = 142,          .data
		.sink1_startofpacket (cmd_demux_002_src0_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink1_endofpacket   (cmd_demux_002_src0_endofpacket)                                              //   input,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_multiplexer_1922_6ealezi cmd_mux_002 (
		.clk                 (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset               (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready           (cmd_mux_002_src_ready),                                                      //   input,    width = 1,       src.ready
		.src_valid           (cmd_mux_002_src_valid),                                                      //  output,    width = 1,          .valid
		.src_data            (cmd_mux_002_src_data),                                                       //  output,  width = 142,          .data
		.src_channel         (cmd_mux_002_src_channel),                                                    //  output,    width = 7,          .channel
		.src_startofpacket   (cmd_mux_002_src_startofpacket),                                              //  output,    width = 1,          .startofpacket
		.src_endofpacket     (cmd_mux_002_src_endofpacket),                                                //  output,    width = 1,          .endofpacket
		.sink0_ready         (cmd_demux_001_src1_ready),                                                   //  output,    width = 1,     sink0.ready
		.sink0_valid         (cmd_demux_001_src1_valid),                                                   //   input,    width = 1,          .valid
		.sink0_channel       (cmd_demux_001_src1_channel),                                                 //   input,    width = 7,          .channel
		.sink0_data          (cmd_demux_001_src1_data),                                                    //   input,  width = 142,          .data
		.sink0_startofpacket (cmd_demux_001_src1_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink0_endofpacket   (cmd_demux_001_src1_endofpacket),                                             //   input,    width = 1,          .endofpacket
		.sink1_ready         (cmd_demux_003_src0_ready),                                                   //  output,    width = 1,     sink1.ready
		.sink1_valid         (cmd_demux_003_src0_valid),                                                   //   input,    width = 1,          .valid
		.sink1_channel       (cmd_demux_003_src0_channel),                                                 //   input,    width = 7,          .channel
		.sink1_data          (cmd_demux_003_src0_data),                                                    //   input,  width = 142,          .data
		.sink1_startofpacket (cmd_demux_003_src0_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink1_endofpacket   (cmd_demux_003_src0_endofpacket)                                              //   input,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_multiplexer_1922_6ealezi cmd_mux_003 (
		.clk                 (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset               (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready           (cmd_mux_003_src_ready),                                                      //   input,    width = 1,       src.ready
		.src_valid           (cmd_mux_003_src_valid),                                                      //  output,    width = 1,          .valid
		.src_data            (cmd_mux_003_src_data),                                                       //  output,  width = 142,          .data
		.src_channel         (cmd_mux_003_src_channel),                                                    //  output,    width = 7,          .channel
		.src_startofpacket   (cmd_mux_003_src_startofpacket),                                              //  output,    width = 1,          .startofpacket
		.src_endofpacket     (cmd_mux_003_src_endofpacket),                                                //  output,    width = 1,          .endofpacket
		.sink0_ready         (cmd_demux_src2_ready),                                                       //  output,    width = 1,     sink0.ready
		.sink0_valid         (cmd_demux_src2_valid),                                                       //   input,    width = 1,          .valid
		.sink0_channel       (cmd_demux_src2_channel),                                                     //   input,    width = 7,          .channel
		.sink0_data          (cmd_demux_src2_data),                                                        //   input,  width = 142,          .data
		.sink0_startofpacket (cmd_demux_src2_startofpacket),                                               //   input,    width = 1,          .startofpacket
		.sink0_endofpacket   (cmd_demux_src2_endofpacket),                                                 //   input,    width = 1,          .endofpacket
		.sink1_ready         (cmd_demux_001_src2_ready),                                                   //  output,    width = 1,     sink1.ready
		.sink1_valid         (cmd_demux_001_src2_valid),                                                   //   input,    width = 1,          .valid
		.sink1_channel       (cmd_demux_001_src2_channel),                                                 //   input,    width = 7,          .channel
		.sink1_data          (cmd_demux_001_src2_data),                                                    //   input,  width = 142,          .data
		.sink1_startofpacket (cmd_demux_001_src2_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink1_endofpacket   (cmd_demux_001_src2_endofpacket)                                              //   input,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_multiplexer_1922_lv5gxfa cmd_mux_004 (
		.clk                 (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset               (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready           (cmd_mux_004_src_ready),                                                      //   input,    width = 1,       src.ready
		.src_valid           (cmd_mux_004_src_valid),                                                      //  output,    width = 1,          .valid
		.src_data            (cmd_mux_004_src_data),                                                       //  output,  width = 142,          .data
		.src_channel         (cmd_mux_004_src_channel),                                                    //  output,    width = 7,          .channel
		.src_startofpacket   (cmd_mux_004_src_startofpacket),                                              //  output,    width = 1,          .startofpacket
		.src_endofpacket     (cmd_mux_004_src_endofpacket),                                                //  output,    width = 1,          .endofpacket
		.sink0_ready         (cmd_demux_src3_ready),                                                       //  output,    width = 1,     sink0.ready
		.sink0_valid         (cmd_demux_src3_valid),                                                       //   input,    width = 1,          .valid
		.sink0_channel       (cmd_demux_src3_channel),                                                     //   input,    width = 7,          .channel
		.sink0_data          (cmd_demux_src3_data),                                                        //   input,  width = 142,          .data
		.sink0_startofpacket (cmd_demux_src3_startofpacket),                                               //   input,    width = 1,          .startofpacket
		.sink0_endofpacket   (cmd_demux_src3_endofpacket),                                                 //   input,    width = 1,          .endofpacket
		.sink1_ready         (cmd_demux_001_src3_ready),                                                   //  output,    width = 1,     sink1.ready
		.sink1_valid         (cmd_demux_001_src3_valid),                                                   //   input,    width = 1,          .valid
		.sink1_channel       (cmd_demux_001_src3_channel),                                                 //   input,    width = 7,          .channel
		.sink1_data          (cmd_demux_001_src3_data),                                                    //   input,  width = 142,          .data
		.sink1_startofpacket (cmd_demux_001_src3_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink1_endofpacket   (cmd_demux_001_src3_endofpacket),                                             //   input,    width = 1,          .endofpacket
		.sink2_ready         (cmd_demux_002_src1_ready),                                                   //  output,    width = 1,     sink2.ready
		.sink2_valid         (cmd_demux_002_src1_valid),                                                   //   input,    width = 1,          .valid
		.sink2_channel       (cmd_demux_002_src1_channel),                                                 //   input,    width = 7,          .channel
		.sink2_data          (cmd_demux_002_src1_data),                                                    //   input,  width = 142,          .data
		.sink2_startofpacket (cmd_demux_002_src1_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink2_endofpacket   (cmd_demux_002_src1_endofpacket),                                             //   input,    width = 1,          .endofpacket
		.sink3_ready         (cmd_demux_003_src1_ready),                                                   //  output,    width = 1,     sink3.ready
		.sink3_valid         (cmd_demux_003_src1_valid),                                                   //   input,    width = 1,          .valid
		.sink3_channel       (cmd_demux_003_src1_channel),                                                 //   input,    width = 7,          .channel
		.sink3_data          (cmd_demux_003_src1_data),                                                    //   input,  width = 142,          .data
		.sink3_startofpacket (cmd_demux_003_src1_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink3_endofpacket   (cmd_demux_003_src1_endofpacket)                                              //   input,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_multiplexer_1922_6ealezi cmd_mux_005 (
		.clk                 (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset               (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready           (cmd_mux_005_src_ready),                                                      //   input,    width = 1,       src.ready
		.src_valid           (cmd_mux_005_src_valid),                                                      //  output,    width = 1,          .valid
		.src_data            (cmd_mux_005_src_data),                                                       //  output,  width = 142,          .data
		.src_channel         (cmd_mux_005_src_channel),                                                    //  output,    width = 7,          .channel
		.src_startofpacket   (cmd_mux_005_src_startofpacket),                                              //  output,    width = 1,          .startofpacket
		.src_endofpacket     (cmd_mux_005_src_endofpacket),                                                //  output,    width = 1,          .endofpacket
		.sink0_ready         (cmd_demux_src4_ready),                                                       //  output,    width = 1,     sink0.ready
		.sink0_valid         (cmd_demux_src4_valid),                                                       //   input,    width = 1,          .valid
		.sink0_channel       (cmd_demux_src4_channel),                                                     //   input,    width = 7,          .channel
		.sink0_data          (cmd_demux_src4_data),                                                        //   input,  width = 142,          .data
		.sink0_startofpacket (cmd_demux_src4_startofpacket),                                               //   input,    width = 1,          .startofpacket
		.sink0_endofpacket   (cmd_demux_src4_endofpacket),                                                 //   input,    width = 1,          .endofpacket
		.sink1_ready         (cmd_demux_001_src4_ready),                                                   //  output,    width = 1,     sink1.ready
		.sink1_valid         (cmd_demux_001_src4_valid),                                                   //   input,    width = 1,          .valid
		.sink1_channel       (cmd_demux_001_src4_channel),                                                 //   input,    width = 7,          .channel
		.sink1_data          (cmd_demux_001_src4_data),                                                    //   input,  width = 142,          .data
		.sink1_startofpacket (cmd_demux_001_src4_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink1_endofpacket   (cmd_demux_001_src4_endofpacket)                                              //   input,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_multiplexer_1922_6ealezi cmd_mux_006 (
		.clk                 (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset               (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready           (cmd_mux_006_src_ready),                                                      //   input,    width = 1,       src.ready
		.src_valid           (cmd_mux_006_src_valid),                                                      //  output,    width = 1,          .valid
		.src_data            (cmd_mux_006_src_data),                                                       //  output,  width = 142,          .data
		.src_channel         (cmd_mux_006_src_channel),                                                    //  output,    width = 7,          .channel
		.src_startofpacket   (cmd_mux_006_src_startofpacket),                                              //  output,    width = 1,          .startofpacket
		.src_endofpacket     (cmd_mux_006_src_endofpacket),                                                //  output,    width = 1,          .endofpacket
		.sink0_ready         (cmd_demux_src5_ready),                                                       //  output,    width = 1,     sink0.ready
		.sink0_valid         (cmd_demux_src5_valid),                                                       //   input,    width = 1,          .valid
		.sink0_channel       (cmd_demux_src5_channel),                                                     //   input,    width = 7,          .channel
		.sink0_data          (cmd_demux_src5_data),                                                        //   input,  width = 142,          .data
		.sink0_startofpacket (cmd_demux_src5_startofpacket),                                               //   input,    width = 1,          .startofpacket
		.sink0_endofpacket   (cmd_demux_src5_endofpacket),                                                 //   input,    width = 1,          .endofpacket
		.sink1_ready         (cmd_demux_001_src5_ready),                                                   //  output,    width = 1,     sink1.ready
		.sink1_valid         (cmd_demux_001_src5_valid),                                                   //   input,    width = 1,          .valid
		.sink1_channel       (cmd_demux_001_src5_channel),                                                 //   input,    width = 7,          .channel
		.sink1_data          (cmd_demux_001_src5_data),                                                    //   input,  width = 142,          .data
		.sink1_startofpacket (cmd_demux_001_src5_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink1_endofpacket   (cmd_demux_001_src5_endofpacket)                                              //   input,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_demultiplexer_1921_gq7ft5i rsp_demux (
		.clk                (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset              (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.sink_ready         (router_004_src_ready),                                                       //  output,    width = 1,      sink.ready
		.sink_channel       (router_004_src_channel),                                                     //   input,    width = 7,          .channel
		.sink_data          (router_004_src_data),                                                        //   input,  width = 142,          .data
		.sink_startofpacket (router_004_src_startofpacket),                                               //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (router_004_src_endofpacket),                                                 //   input,    width = 1,          .endofpacket
		.sink_valid         (router_004_src_valid),                                                       //   input,    width = 1,          .valid
		.src0_ready         (rsp_demux_src0_ready),                                                       //   input,    width = 1,      src0.ready
		.src0_valid         (rsp_demux_src0_valid),                                                       //  output,    width = 1,          .valid
		.src0_data          (rsp_demux_src0_data),                                                        //  output,  width = 142,          .data
		.src0_channel       (rsp_demux_src0_channel),                                                     //  output,    width = 7,          .channel
		.src0_startofpacket (rsp_demux_src0_startofpacket),                                               //  output,    width = 1,          .startofpacket
		.src0_endofpacket   (rsp_demux_src0_endofpacket),                                                 //  output,    width = 1,          .endofpacket
		.src1_ready         (rsp_demux_src1_ready),                                                       //   input,    width = 1,      src1.ready
		.src1_valid         (rsp_demux_src1_valid),                                                       //  output,    width = 1,          .valid
		.src1_data          (rsp_demux_src1_data),                                                        //  output,  width = 142,          .data
		.src1_channel       (rsp_demux_src1_channel),                                                     //  output,    width = 7,          .channel
		.src1_startofpacket (rsp_demux_src1_startofpacket),                                               //  output,    width = 1,          .startofpacket
		.src1_endofpacket   (rsp_demux_src1_endofpacket)                                                  //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_demultiplexer_1921_gq7ft5i rsp_demux_001 (
		.clk                (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset              (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.sink_ready         (router_005_src_ready),                                                       //  output,    width = 1,      sink.ready
		.sink_channel       (router_005_src_channel),                                                     //   input,    width = 7,          .channel
		.sink_data          (router_005_src_data),                                                        //   input,  width = 142,          .data
		.sink_startofpacket (router_005_src_startofpacket),                                               //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (router_005_src_endofpacket),                                                 //   input,    width = 1,          .endofpacket
		.sink_valid         (router_005_src_valid),                                                       //   input,    width = 1,          .valid
		.src0_ready         (rsp_demux_001_src0_ready),                                                   //   input,    width = 1,      src0.ready
		.src0_valid         (rsp_demux_001_src0_valid),                                                   //  output,    width = 1,          .valid
		.src0_data          (rsp_demux_001_src0_data),                                                    //  output,  width = 142,          .data
		.src0_channel       (rsp_demux_001_src0_channel),                                                 //  output,    width = 7,          .channel
		.src0_startofpacket (rsp_demux_001_src0_startofpacket),                                           //  output,    width = 1,          .startofpacket
		.src0_endofpacket   (rsp_demux_001_src0_endofpacket),                                             //  output,    width = 1,          .endofpacket
		.src1_ready         (rsp_demux_001_src1_ready),                                                   //   input,    width = 1,      src1.ready
		.src1_valid         (rsp_demux_001_src1_valid),                                                   //  output,    width = 1,          .valid
		.src1_data          (rsp_demux_001_src1_data),                                                    //  output,  width = 142,          .data
		.src1_channel       (rsp_demux_001_src1_channel),                                                 //  output,    width = 7,          .channel
		.src1_startofpacket (rsp_demux_001_src1_startofpacket),                                           //  output,    width = 1,          .startofpacket
		.src1_endofpacket   (rsp_demux_001_src1_endofpacket)                                              //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_demultiplexer_1921_gq7ft5i rsp_demux_002 (
		.clk                (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset              (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.sink_ready         (router_006_src_ready),                                                       //  output,    width = 1,      sink.ready
		.sink_channel       (router_006_src_channel),                                                     //   input,    width = 7,          .channel
		.sink_data          (router_006_src_data),                                                        //   input,  width = 142,          .data
		.sink_startofpacket (router_006_src_startofpacket),                                               //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (router_006_src_endofpacket),                                                 //   input,    width = 1,          .endofpacket
		.sink_valid         (router_006_src_valid),                                                       //   input,    width = 1,          .valid
		.src0_ready         (rsp_demux_002_src0_ready),                                                   //   input,    width = 1,      src0.ready
		.src0_valid         (rsp_demux_002_src0_valid),                                                   //  output,    width = 1,          .valid
		.src0_data          (rsp_demux_002_src0_data),                                                    //  output,  width = 142,          .data
		.src0_channel       (rsp_demux_002_src0_channel),                                                 //  output,    width = 7,          .channel
		.src0_startofpacket (rsp_demux_002_src0_startofpacket),                                           //  output,    width = 1,          .startofpacket
		.src0_endofpacket   (rsp_demux_002_src0_endofpacket),                                             //  output,    width = 1,          .endofpacket
		.src1_ready         (rsp_demux_002_src1_ready),                                                   //   input,    width = 1,      src1.ready
		.src1_valid         (rsp_demux_002_src1_valid),                                                   //  output,    width = 1,          .valid
		.src1_data          (rsp_demux_002_src1_data),                                                    //  output,  width = 142,          .data
		.src1_channel       (rsp_demux_002_src1_channel),                                                 //  output,    width = 7,          .channel
		.src1_startofpacket (rsp_demux_002_src1_startofpacket),                                           //  output,    width = 1,          .startofpacket
		.src1_endofpacket   (rsp_demux_002_src1_endofpacket)                                              //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_demultiplexer_1921_gq7ft5i rsp_demux_003 (
		.clk                (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset              (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.sink_ready         (router_007_src_ready),                                                       //  output,    width = 1,      sink.ready
		.sink_channel       (router_007_src_channel),                                                     //   input,    width = 7,          .channel
		.sink_data          (router_007_src_data),                                                        //   input,  width = 142,          .data
		.sink_startofpacket (router_007_src_startofpacket),                                               //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (router_007_src_endofpacket),                                                 //   input,    width = 1,          .endofpacket
		.sink_valid         (router_007_src_valid),                                                       //   input,    width = 1,          .valid
		.src0_ready         (rsp_demux_003_src0_ready),                                                   //   input,    width = 1,      src0.ready
		.src0_valid         (rsp_demux_003_src0_valid),                                                   //  output,    width = 1,          .valid
		.src0_data          (rsp_demux_003_src0_data),                                                    //  output,  width = 142,          .data
		.src0_channel       (rsp_demux_003_src0_channel),                                                 //  output,    width = 7,          .channel
		.src0_startofpacket (rsp_demux_003_src0_startofpacket),                                           //  output,    width = 1,          .startofpacket
		.src0_endofpacket   (rsp_demux_003_src0_endofpacket),                                             //  output,    width = 1,          .endofpacket
		.src1_ready         (rsp_demux_003_src1_ready),                                                   //   input,    width = 1,      src1.ready
		.src1_valid         (rsp_demux_003_src1_valid),                                                   //  output,    width = 1,          .valid
		.src1_data          (rsp_demux_003_src1_data),                                                    //  output,  width = 142,          .data
		.src1_channel       (rsp_demux_003_src1_channel),                                                 //  output,    width = 7,          .channel
		.src1_startofpacket (rsp_demux_003_src1_startofpacket),                                           //  output,    width = 1,          .startofpacket
		.src1_endofpacket   (rsp_demux_003_src1_endofpacket)                                              //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_demultiplexer_1921_h5fh4xa rsp_demux_004 (
		.clk                (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset              (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.sink_ready         (router_008_src_ready),                                                       //  output,    width = 1,      sink.ready
		.sink_channel       (router_008_src_channel),                                                     //   input,    width = 7,          .channel
		.sink_data          (router_008_src_data),                                                        //   input,  width = 142,          .data
		.sink_startofpacket (router_008_src_startofpacket),                                               //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (router_008_src_endofpacket),                                                 //   input,    width = 1,          .endofpacket
		.sink_valid         (router_008_src_valid),                                                       //   input,    width = 1,          .valid
		.src0_ready         (rsp_demux_004_src0_ready),                                                   //   input,    width = 1,      src0.ready
		.src0_valid         (rsp_demux_004_src0_valid),                                                   //  output,    width = 1,          .valid
		.src0_data          (rsp_demux_004_src0_data),                                                    //  output,  width = 142,          .data
		.src0_channel       (rsp_demux_004_src0_channel),                                                 //  output,    width = 7,          .channel
		.src0_startofpacket (rsp_demux_004_src0_startofpacket),                                           //  output,    width = 1,          .startofpacket
		.src0_endofpacket   (rsp_demux_004_src0_endofpacket),                                             //  output,    width = 1,          .endofpacket
		.src1_ready         (rsp_demux_004_src1_ready),                                                   //   input,    width = 1,      src1.ready
		.src1_valid         (rsp_demux_004_src1_valid),                                                   //  output,    width = 1,          .valid
		.src1_data          (rsp_demux_004_src1_data),                                                    //  output,  width = 142,          .data
		.src1_channel       (rsp_demux_004_src1_channel),                                                 //  output,    width = 7,          .channel
		.src1_startofpacket (rsp_demux_004_src1_startofpacket),                                           //  output,    width = 1,          .startofpacket
		.src1_endofpacket   (rsp_demux_004_src1_endofpacket),                                             //  output,    width = 1,          .endofpacket
		.src2_ready         (rsp_demux_004_src2_ready),                                                   //   input,    width = 1,      src2.ready
		.src2_valid         (rsp_demux_004_src2_valid),                                                   //  output,    width = 1,          .valid
		.src2_data          (rsp_demux_004_src2_data),                                                    //  output,  width = 142,          .data
		.src2_channel       (rsp_demux_004_src2_channel),                                                 //  output,    width = 7,          .channel
		.src2_startofpacket (rsp_demux_004_src2_startofpacket),                                           //  output,    width = 1,          .startofpacket
		.src2_endofpacket   (rsp_demux_004_src2_endofpacket),                                             //  output,    width = 1,          .endofpacket
		.src3_ready         (rsp_demux_004_src3_ready),                                                   //   input,    width = 1,      src3.ready
		.src3_valid         (rsp_demux_004_src3_valid),                                                   //  output,    width = 1,          .valid
		.src3_data          (rsp_demux_004_src3_data),                                                    //  output,  width = 142,          .data
		.src3_channel       (rsp_demux_004_src3_channel),                                                 //  output,    width = 7,          .channel
		.src3_startofpacket (rsp_demux_004_src3_startofpacket),                                           //  output,    width = 1,          .startofpacket
		.src3_endofpacket   (rsp_demux_004_src3_endofpacket)                                              //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_demultiplexer_1921_gq7ft5i rsp_demux_005 (
		.clk                (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset              (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.sink_ready         (router_009_src_ready),                                                       //  output,    width = 1,      sink.ready
		.sink_channel       (router_009_src_channel),                                                     //   input,    width = 7,          .channel
		.sink_data          (router_009_src_data),                                                        //   input,  width = 142,          .data
		.sink_startofpacket (router_009_src_startofpacket),                                               //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (router_009_src_endofpacket),                                                 //   input,    width = 1,          .endofpacket
		.sink_valid         (router_009_src_valid),                                                       //   input,    width = 1,          .valid
		.src0_ready         (rsp_demux_005_src0_ready),                                                   //   input,    width = 1,      src0.ready
		.src0_valid         (rsp_demux_005_src0_valid),                                                   //  output,    width = 1,          .valid
		.src0_data          (rsp_demux_005_src0_data),                                                    //  output,  width = 142,          .data
		.src0_channel       (rsp_demux_005_src0_channel),                                                 //  output,    width = 7,          .channel
		.src0_startofpacket (rsp_demux_005_src0_startofpacket),                                           //  output,    width = 1,          .startofpacket
		.src0_endofpacket   (rsp_demux_005_src0_endofpacket),                                             //  output,    width = 1,          .endofpacket
		.src1_ready         (rsp_demux_005_src1_ready),                                                   //   input,    width = 1,      src1.ready
		.src1_valid         (rsp_demux_005_src1_valid),                                                   //  output,    width = 1,          .valid
		.src1_data          (rsp_demux_005_src1_data),                                                    //  output,  width = 142,          .data
		.src1_channel       (rsp_demux_005_src1_channel),                                                 //  output,    width = 7,          .channel
		.src1_startofpacket (rsp_demux_005_src1_startofpacket),                                           //  output,    width = 1,          .startofpacket
		.src1_endofpacket   (rsp_demux_005_src1_endofpacket)                                              //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_demultiplexer_1921_gq7ft5i rsp_demux_006 (
		.clk                (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset              (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.sink_ready         (router_010_src_ready),                                                       //  output,    width = 1,      sink.ready
		.sink_channel       (router_010_src_channel),                                                     //   input,    width = 7,          .channel
		.sink_data          (router_010_src_data),                                                        //   input,  width = 142,          .data
		.sink_startofpacket (router_010_src_startofpacket),                                               //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (router_010_src_endofpacket),                                                 //   input,    width = 1,          .endofpacket
		.sink_valid         (router_010_src_valid),                                                       //   input,    width = 1,          .valid
		.src0_ready         (rsp_demux_006_src0_ready),                                                   //   input,    width = 1,      src0.ready
		.src0_valid         (rsp_demux_006_src0_valid),                                                   //  output,    width = 1,          .valid
		.src0_data          (rsp_demux_006_src0_data),                                                    //  output,  width = 142,          .data
		.src0_channel       (rsp_demux_006_src0_channel),                                                 //  output,    width = 7,          .channel
		.src0_startofpacket (rsp_demux_006_src0_startofpacket),                                           //  output,    width = 1,          .startofpacket
		.src0_endofpacket   (rsp_demux_006_src0_endofpacket),                                             //  output,    width = 1,          .endofpacket
		.src1_ready         (rsp_demux_006_src1_ready),                                                   //   input,    width = 1,      src1.ready
		.src1_valid         (rsp_demux_006_src1_valid),                                                   //  output,    width = 1,          .valid
		.src1_data          (rsp_demux_006_src1_data),                                                    //  output,  width = 142,          .data
		.src1_channel       (rsp_demux_006_src1_channel),                                                 //  output,    width = 7,          .channel
		.src1_startofpacket (rsp_demux_006_src1_startofpacket),                                           //  output,    width = 1,          .startofpacket
		.src1_endofpacket   (rsp_demux_006_src1_endofpacket)                                              //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_multiplexer_1922_bwmblcq rsp_mux (
		.clk                 (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset               (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready           (rsp_mux_src_ready),                                                          //   input,    width = 1,       src.ready
		.src_valid           (rsp_mux_src_valid),                                                          //  output,    width = 1,          .valid
		.src_data            (rsp_mux_src_data),                                                           //  output,  width = 142,          .data
		.src_channel         (rsp_mux_src_channel),                                                        //  output,    width = 7,          .channel
		.src_startofpacket   (rsp_mux_src_startofpacket),                                                  //  output,    width = 1,          .startofpacket
		.src_endofpacket     (rsp_mux_src_endofpacket),                                                    //  output,    width = 1,          .endofpacket
		.sink0_ready         (rsp_demux_src0_ready),                                                       //  output,    width = 1,     sink0.ready
		.sink0_valid         (rsp_demux_src0_valid),                                                       //   input,    width = 1,          .valid
		.sink0_channel       (rsp_demux_src0_channel),                                                     //   input,    width = 7,          .channel
		.sink0_data          (rsp_demux_src0_data),                                                        //   input,  width = 142,          .data
		.sink0_startofpacket (rsp_demux_src0_startofpacket),                                               //   input,    width = 1,          .startofpacket
		.sink0_endofpacket   (rsp_demux_src0_endofpacket),                                                 //   input,    width = 1,          .endofpacket
		.sink1_ready         (rsp_demux_001_src0_ready),                                                   //  output,    width = 1,     sink1.ready
		.sink1_valid         (rsp_demux_001_src0_valid),                                                   //   input,    width = 1,          .valid
		.sink1_channel       (rsp_demux_001_src0_channel),                                                 //   input,    width = 7,          .channel
		.sink1_data          (rsp_demux_001_src0_data),                                                    //   input,  width = 142,          .data
		.sink1_startofpacket (rsp_demux_001_src0_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink1_endofpacket   (rsp_demux_001_src0_endofpacket),                                             //   input,    width = 1,          .endofpacket
		.sink2_ready         (rsp_demux_003_src0_ready),                                                   //  output,    width = 1,     sink2.ready
		.sink2_valid         (rsp_demux_003_src0_valid),                                                   //   input,    width = 1,          .valid
		.sink2_channel       (rsp_demux_003_src0_channel),                                                 //   input,    width = 7,          .channel
		.sink2_data          (rsp_demux_003_src0_data),                                                    //   input,  width = 142,          .data
		.sink2_startofpacket (rsp_demux_003_src0_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink2_endofpacket   (rsp_demux_003_src0_endofpacket),                                             //   input,    width = 1,          .endofpacket
		.sink3_ready         (rsp_demux_004_src0_ready),                                                   //  output,    width = 1,     sink3.ready
		.sink3_valid         (rsp_demux_004_src0_valid),                                                   //   input,    width = 1,          .valid
		.sink3_channel       (rsp_demux_004_src0_channel),                                                 //   input,    width = 7,          .channel
		.sink3_data          (rsp_demux_004_src0_data),                                                    //   input,  width = 142,          .data
		.sink3_startofpacket (rsp_demux_004_src0_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink3_endofpacket   (rsp_demux_004_src0_endofpacket),                                             //   input,    width = 1,          .endofpacket
		.sink4_ready         (rsp_demux_005_src0_ready),                                                   //  output,    width = 1,     sink4.ready
		.sink4_valid         (rsp_demux_005_src0_valid),                                                   //   input,    width = 1,          .valid
		.sink4_channel       (rsp_demux_005_src0_channel),                                                 //   input,    width = 7,          .channel
		.sink4_data          (rsp_demux_005_src0_data),                                                    //   input,  width = 142,          .data
		.sink4_startofpacket (rsp_demux_005_src0_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink4_endofpacket   (rsp_demux_005_src0_endofpacket),                                             //   input,    width = 1,          .endofpacket
		.sink5_ready         (rsp_demux_006_src0_ready),                                                   //  output,    width = 1,     sink5.ready
		.sink5_valid         (rsp_demux_006_src0_valid),                                                   //   input,    width = 1,          .valid
		.sink5_channel       (rsp_demux_006_src0_channel),                                                 //   input,    width = 7,          .channel
		.sink5_data          (rsp_demux_006_src0_data),                                                    //   input,  width = 142,          .data
		.sink5_startofpacket (rsp_demux_006_src0_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink5_endofpacket   (rsp_demux_006_src0_endofpacket)                                              //   input,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_multiplexer_1922_bwmblcq rsp_mux_001 (
		.clk                 (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset               (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready           (rsp_mux_001_src_ready),                                                      //   input,    width = 1,       src.ready
		.src_valid           (rsp_mux_001_src_valid),                                                      //  output,    width = 1,          .valid
		.src_data            (rsp_mux_001_src_data),                                                       //  output,  width = 142,          .data
		.src_channel         (rsp_mux_001_src_channel),                                                    //  output,    width = 7,          .channel
		.src_startofpacket   (rsp_mux_001_src_startofpacket),                                              //  output,    width = 1,          .startofpacket
		.src_endofpacket     (rsp_mux_001_src_endofpacket),                                                //  output,    width = 1,          .endofpacket
		.sink0_ready         (rsp_demux_src1_ready),                                                       //  output,    width = 1,     sink0.ready
		.sink0_valid         (rsp_demux_src1_valid),                                                       //   input,    width = 1,          .valid
		.sink0_channel       (rsp_demux_src1_channel),                                                     //   input,    width = 7,          .channel
		.sink0_data          (rsp_demux_src1_data),                                                        //   input,  width = 142,          .data
		.sink0_startofpacket (rsp_demux_src1_startofpacket),                                               //   input,    width = 1,          .startofpacket
		.sink0_endofpacket   (rsp_demux_src1_endofpacket),                                                 //   input,    width = 1,          .endofpacket
		.sink1_ready         (rsp_demux_002_src0_ready),                                                   //  output,    width = 1,     sink1.ready
		.sink1_valid         (rsp_demux_002_src0_valid),                                                   //   input,    width = 1,          .valid
		.sink1_channel       (rsp_demux_002_src0_channel),                                                 //   input,    width = 7,          .channel
		.sink1_data          (rsp_demux_002_src0_data),                                                    //   input,  width = 142,          .data
		.sink1_startofpacket (rsp_demux_002_src0_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink1_endofpacket   (rsp_demux_002_src0_endofpacket),                                             //   input,    width = 1,          .endofpacket
		.sink2_ready         (rsp_demux_003_src1_ready),                                                   //  output,    width = 1,     sink2.ready
		.sink2_valid         (rsp_demux_003_src1_valid),                                                   //   input,    width = 1,          .valid
		.sink2_channel       (rsp_demux_003_src1_channel),                                                 //   input,    width = 7,          .channel
		.sink2_data          (rsp_demux_003_src1_data),                                                    //   input,  width = 142,          .data
		.sink2_startofpacket (rsp_demux_003_src1_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink2_endofpacket   (rsp_demux_003_src1_endofpacket),                                             //   input,    width = 1,          .endofpacket
		.sink3_ready         (rsp_demux_004_src1_ready),                                                   //  output,    width = 1,     sink3.ready
		.sink3_valid         (rsp_demux_004_src1_valid),                                                   //   input,    width = 1,          .valid
		.sink3_channel       (rsp_demux_004_src1_channel),                                                 //   input,    width = 7,          .channel
		.sink3_data          (rsp_demux_004_src1_data),                                                    //   input,  width = 142,          .data
		.sink3_startofpacket (rsp_demux_004_src1_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink3_endofpacket   (rsp_demux_004_src1_endofpacket),                                             //   input,    width = 1,          .endofpacket
		.sink4_ready         (rsp_demux_005_src1_ready),                                                   //  output,    width = 1,     sink4.ready
		.sink4_valid         (rsp_demux_005_src1_valid),                                                   //   input,    width = 1,          .valid
		.sink4_channel       (rsp_demux_005_src1_channel),                                                 //   input,    width = 7,          .channel
		.sink4_data          (rsp_demux_005_src1_data),                                                    //   input,  width = 142,          .data
		.sink4_startofpacket (rsp_demux_005_src1_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink4_endofpacket   (rsp_demux_005_src1_endofpacket),                                             //   input,    width = 1,          .endofpacket
		.sink5_ready         (rsp_demux_006_src1_ready),                                                   //  output,    width = 1,     sink5.ready
		.sink5_valid         (rsp_demux_006_src1_valid),                                                   //   input,    width = 1,          .valid
		.sink5_channel       (rsp_demux_006_src1_channel),                                                 //   input,    width = 7,          .channel
		.sink5_data          (rsp_demux_006_src1_data),                                                    //   input,  width = 142,          .data
		.sink5_startofpacket (rsp_demux_006_src1_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink5_endofpacket   (rsp_demux_006_src1_endofpacket)                                              //   input,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_multiplexer_1922_humqmaa rsp_mux_002 (
		.clk                 (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset               (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready           (rsp_mux_002_src_ready),                                                      //   input,    width = 1,       src.ready
		.src_valid           (rsp_mux_002_src_valid),                                                      //  output,    width = 1,          .valid
		.src_data            (rsp_mux_002_src_data),                                                       //  output,  width = 142,          .data
		.src_channel         (rsp_mux_002_src_channel),                                                    //  output,    width = 7,          .channel
		.src_startofpacket   (rsp_mux_002_src_startofpacket),                                              //  output,    width = 1,          .startofpacket
		.src_endofpacket     (rsp_mux_002_src_endofpacket),                                                //  output,    width = 1,          .endofpacket
		.sink0_ready         (rsp_demux_001_src1_ready),                                                   //  output,    width = 1,     sink0.ready
		.sink0_valid         (rsp_demux_001_src1_valid),                                                   //   input,    width = 1,          .valid
		.sink0_channel       (rsp_demux_001_src1_channel),                                                 //   input,    width = 7,          .channel
		.sink0_data          (rsp_demux_001_src1_data),                                                    //   input,  width = 142,          .data
		.sink0_startofpacket (rsp_demux_001_src1_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink0_endofpacket   (rsp_demux_001_src1_endofpacket),                                             //   input,    width = 1,          .endofpacket
		.sink1_ready         (rsp_demux_004_src2_ready),                                                   //  output,    width = 1,     sink1.ready
		.sink1_valid         (rsp_demux_004_src2_valid),                                                   //   input,    width = 1,          .valid
		.sink1_channel       (rsp_demux_004_src2_channel),                                                 //   input,    width = 7,          .channel
		.sink1_data          (rsp_demux_004_src2_data),                                                    //   input,  width = 142,          .data
		.sink1_startofpacket (rsp_demux_004_src2_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink1_endofpacket   (rsp_demux_004_src2_endofpacket)                                              //   input,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_multiplexer_1922_humqmaa rsp_mux_003 (
		.clk                 (iopll_0_outclk0_clk),                                                        //   input,    width = 1,       clk.clk
		.reset               (jtag_uart_0_avalon_jtag_slave_translator_reset_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready           (rsp_mux_003_src_ready),                                                      //   input,    width = 1,       src.ready
		.src_valid           (rsp_mux_003_src_valid),                                                      //  output,    width = 1,          .valid
		.src_data            (rsp_mux_003_src_data),                                                       //  output,  width = 142,          .data
		.src_channel         (rsp_mux_003_src_channel),                                                    //  output,    width = 7,          .channel
		.src_startofpacket   (rsp_mux_003_src_startofpacket),                                              //  output,    width = 1,          .startofpacket
		.src_endofpacket     (rsp_mux_003_src_endofpacket),                                                //  output,    width = 1,          .endofpacket
		.sink0_ready         (rsp_demux_002_src1_ready),                                                   //  output,    width = 1,     sink0.ready
		.sink0_valid         (rsp_demux_002_src1_valid),                                                   //   input,    width = 1,          .valid
		.sink0_channel       (rsp_demux_002_src1_channel),                                                 //   input,    width = 7,          .channel
		.sink0_data          (rsp_demux_002_src1_data),                                                    //   input,  width = 142,          .data
		.sink0_startofpacket (rsp_demux_002_src1_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink0_endofpacket   (rsp_demux_002_src1_endofpacket),                                             //   input,    width = 1,          .endofpacket
		.sink1_ready         (rsp_demux_004_src3_ready),                                                   //  output,    width = 1,     sink1.ready
		.sink1_valid         (rsp_demux_004_src3_valid),                                                   //   input,    width = 1,          .valid
		.sink1_channel       (rsp_demux_004_src3_channel),                                                 //   input,    width = 7,          .channel
		.sink1_data          (rsp_demux_004_src3_data),                                                    //   input,  width = 142,          .data
		.sink1_startofpacket (rsp_demux_004_src3_startofpacket),                                           //   input,    width = 1,          .startofpacket
		.sink1_endofpacket   (rsp_demux_004_src3_endofpacket)                                              //   input,    width = 1,          .endofpacket
	);

endmodule
