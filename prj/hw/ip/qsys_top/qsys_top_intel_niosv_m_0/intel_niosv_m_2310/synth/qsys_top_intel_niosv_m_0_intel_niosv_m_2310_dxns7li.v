// qsys_top_intel_niosv_m_0_intel_niosv_m_2310_dxns7li.v

// This file was auto-generated from intel_niosv_m_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 23.4 66

`timescale 1 ps / 1 ps
module qsys_top_intel_niosv_m_0_intel_niosv_m_2310_dxns7li (
		input  wire        clk,                          //                 clk.clk
		input  wire        reset_reset,                  //               reset.reset
		input  wire [15:0] platform_irq_rx_irq,          //     platform_irq_rx.irq
		output wire [31:0] instruction_manager_awaddr,   // instruction_manager.awaddr
		output wire [2:0]  instruction_manager_awprot,   //                    .awprot
		output wire        instruction_manager_awvalid,  //                    .awvalid
		input  wire        instruction_manager_awready,  //                    .awready
		output wire [31:0] instruction_manager_wdata,    //                    .wdata
		output wire [3:0]  instruction_manager_wstrb,    //                    .wstrb
		output wire        instruction_manager_wvalid,   //                    .wvalid
		input  wire        instruction_manager_wready,   //                    .wready
		input  wire [1:0]  instruction_manager_bresp,    //                    .bresp
		input  wire        instruction_manager_bvalid,   //                    .bvalid
		output wire        instruction_manager_bready,   //                    .bready
		output wire [31:0] instruction_manager_araddr,   //                    .araddr
		output wire [2:0]  instruction_manager_arprot,   //                    .arprot
		output wire        instruction_manager_arvalid,  //                    .arvalid
		input  wire        instruction_manager_arready,  //                    .arready
		input  wire [31:0] instruction_manager_rdata,    //                    .rdata
		input  wire [1:0]  instruction_manager_rresp,    //                    .rresp
		input  wire        instruction_manager_rvalid,   //                    .rvalid
		output wire        instruction_manager_rready,   //                    .rready
		output wire [31:0] data_manager_awaddr,          //        data_manager.awaddr
		output wire [2:0]  data_manager_awprot,          //                    .awprot
		output wire        data_manager_awvalid,         //                    .awvalid
		input  wire        data_manager_awready,         //                    .awready
		output wire [31:0] data_manager_wdata,           //                    .wdata
		output wire [3:0]  data_manager_wstrb,           //                    .wstrb
		output wire        data_manager_wvalid,          //                    .wvalid
		input  wire        data_manager_wready,          //                    .wready
		input  wire [1:0]  data_manager_bresp,           //                    .bresp
		input  wire        data_manager_bvalid,          //                    .bvalid
		output wire        data_manager_bready,          //                    .bready
		output wire [31:0] data_manager_araddr,          //                    .araddr
		output wire [2:0]  data_manager_arprot,          //                    .arprot
		output wire        data_manager_arvalid,         //                    .arvalid
		input  wire        data_manager_arready,         //                    .arready
		input  wire [31:0] data_manager_rdata,           //                    .rdata
		input  wire [1:0]  data_manager_rresp,           //                    .rresp
		input  wire        data_manager_rvalid,          //                    .rvalid
		output wire        data_manager_rready,          //                    .rready
		input  wire        timer_sw_agent_write,         //      timer_sw_agent.write
		input  wire [31:0] timer_sw_agent_writedata,     //                    .writedata
		input  wire [3:0]  timer_sw_agent_byteenable,    //                    .byteenable
		input  wire [5:0]  timer_sw_agent_address,       //                    .address
		input  wire        timer_sw_agent_read,          //                    .read
		output wire [31:0] timer_sw_agent_readdata,      //                    .readdata
		output wire        timer_sw_agent_readdatavalid, //                    .readdatavalid
		output wire        timer_sw_agent_waitrequest,   //                    .waitrequest
		input  wire        dm_agent_write,               //            dm_agent.write
		input  wire [31:0] dm_agent_writedata,           //                    .writedata
		input  wire [15:0] dm_agent_address,             //                    .address
		input  wire        dm_agent_read,                //                    .read
		output wire [31:0] dm_agent_readdata,            //                    .readdata
		output wire        dm_agent_readdatavalid,       //                    .readdatavalid
		output wire        dm_agent_waitrequest          //                    .waitrequest
	);

	wire    irq_mapper_receiver0_irq;     // dbg_mod:dbg_irq -> irq_mapper:receiver0_irq
	wire    hart_debug_irq_rx_irq;        // irq_mapper:sender_irq -> hart:irq_debug
	wire    irq_mapper_001_receiver0_irq; // timer_module:timer_irq -> irq_mapper_001:receiver0_irq
	wire    hart_timer_irq_rx_irq;        // irq_mapper_001:sender_irq -> hart:irq_timer
	wire    irq_mapper_002_receiver0_irq; // timer_module:sw_irq -> irq_mapper_002:receiver0_irq
	wire    hart_sw_irq_rx_irq;           // irq_mapper_002:sender_irq -> hart:irq_sw

	niosv_m_top #(
		.RESET_VECTOR    (32'b00000000000000000000000000000000),
		.DBG_EXPN_VECTOR (32'b00000000000100000000000000000000),
		.CORE_EXTN       (256),
		.DEBUG_ENABLED   (1),
		.DEVICE_FAMILY   ("Agilex 7"),
		.USE_RESET_REQ   (0),
		.ECC_EN          (0),
		.SMALL_CORE      (0)
	) hart (
		.clk             (clk),                         //   input,   width = 1,             cpu_clk.clk
		.reset           (reset_reset),                 //   input,   width = 1,           cpu_reset.reset
		.irq_plat_vec    (platform_irq_rx_irq),         //   input,  width = 16,     platform_irq_rx.irq
		.irq_debug       (hart_debug_irq_rx_irq),       //   input,   width = 1,        debug_irq_rx.irq
		.irq_timer       (hart_timer_irq_rx_irq),       //   input,   width = 1,        timer_irq_rx.irq
		.irq_sw          (hart_sw_irq_rx_irq),          //   input,   width = 1,           sw_irq_rx.irq
		.instr_awaddr    (instruction_manager_awaddr),  //  output,  width = 32, instruction_manager.awaddr
		.instr_awprot    (instruction_manager_awprot),  //  output,   width = 3,                    .awprot
		.instr_awvalid   (instruction_manager_awvalid), //  output,   width = 1,                    .awvalid
		.instr_awready   (instruction_manager_awready), //   input,   width = 1,                    .awready
		.instr_wdata     (instruction_manager_wdata),   //  output,  width = 32,                    .wdata
		.instr_wstrb     (instruction_manager_wstrb),   //  output,   width = 4,                    .wstrb
		.instr_wvalid    (instruction_manager_wvalid),  //  output,   width = 1,                    .wvalid
		.instr_wready    (instruction_manager_wready),  //   input,   width = 1,                    .wready
		.instr_bresp     (instruction_manager_bresp),   //   input,   width = 2,                    .bresp
		.instr_bvalid    (instruction_manager_bvalid),  //   input,   width = 1,                    .bvalid
		.instr_bready    (instruction_manager_bready),  //  output,   width = 1,                    .bready
		.instr_araddr    (instruction_manager_araddr),  //  output,  width = 32,                    .araddr
		.instr_arprot    (instruction_manager_arprot),  //  output,   width = 3,                    .arprot
		.instr_arvalid   (instruction_manager_arvalid), //  output,   width = 1,                    .arvalid
		.instr_arready   (instruction_manager_arready), //   input,   width = 1,                    .arready
		.instr_rdata     (instruction_manager_rdata),   //   input,  width = 32,                    .rdata
		.instr_rresp     (instruction_manager_rresp),   //   input,   width = 2,                    .rresp
		.instr_rvalid    (instruction_manager_rvalid),  //   input,   width = 1,                    .rvalid
		.instr_rready    (instruction_manager_rready),  //  output,   width = 1,                    .rready
		.data_awaddr     (data_manager_awaddr),         //  output,  width = 32,        data_manager.awaddr
		.data_awprot     (data_manager_awprot),         //  output,   width = 3,                    .awprot
		.data_awvalid    (data_manager_awvalid),        //  output,   width = 1,                    .awvalid
		.data_awready    (data_manager_awready),        //   input,   width = 1,                    .awready
		.data_wdata      (data_manager_wdata),          //  output,  width = 32,                    .wdata
		.data_wstrb      (data_manager_wstrb),          //  output,   width = 4,                    .wstrb
		.data_wvalid     (data_manager_wvalid),         //  output,   width = 1,                    .wvalid
		.data_wready     (data_manager_wready),         //   input,   width = 1,                    .wready
		.data_bresp      (data_manager_bresp),          //   input,   width = 2,                    .bresp
		.data_bvalid     (data_manager_bvalid),         //   input,   width = 1,                    .bvalid
		.data_bready     (data_manager_bready),         //  output,   width = 1,                    .bready
		.data_araddr     (data_manager_araddr),         //  output,  width = 32,                    .araddr
		.data_arprot     (data_manager_arprot),         //  output,   width = 3,                    .arprot
		.data_arvalid    (data_manager_arvalid),        //  output,   width = 1,                    .arvalid
		.data_arready    (data_manager_arready),        //   input,   width = 1,                    .arready
		.data_rdata      (data_manager_rdata),          //   input,  width = 32,                    .rdata
		.data_rresp      (data_manager_rresp),          //   input,   width = 2,                    .rresp
		.data_rvalid     (data_manager_rvalid),         //   input,   width = 1,                    .rvalid
		.data_rready     (data_manager_rready),         //  output,   width = 1,                    .rready
		.reset_req       (1'b0),                        // (terminated),                                  
		.reset_req_ack   (),                            // (terminated),                                  
		.core_ecc_status (),                            // (terminated),                                  
		.core_ecc_src    (),                            // (terminated),                                  
		.instr_awsize    (),                            // (terminated),                                  
		.instr_wlast     (),                            // (terminated),                                  
		.instr_arsize    (),                            // (terminated),                                  
		.data_awsize     (),                            // (terminated),                                  
		.data_wlast      (),                            // (terminated),                                  
		.data_arsize     (),                            // (terminated),                                  
		.irq_ext         (1'b0)                         // (terminated),                                  
	);

	niosv_timer_msip #(
		.IRQ_EN (1)
	) timer_module (
		.clk                (clk),                          //   input,   width = 1,            clk.clk
		.reset              (reset_reset),                  //   input,   width = 1,          reset.reset
		.hart_write         (timer_sw_agent_write),         //   input,   width = 1, timer_sw_agent.write
		.hart_writedata     (timer_sw_agent_writedata),     //   input,  width = 32,               .writedata
		.hart_byteen        (timer_sw_agent_byteenable),    //   input,   width = 4,               .byteenable
		.hart_address       (timer_sw_agent_address),       //   input,   width = 6,               .address
		.hart_read          (timer_sw_agent_read),          //   input,   width = 1,               .read
		.hart_readdata      (timer_sw_agent_readdata),      //  output,  width = 32,               .readdata
		.hart_readdatavalid (timer_sw_agent_readdatavalid), //  output,   width = 1,               .readdatavalid
		.hart_waitrequest   (timer_sw_agent_waitrequest),   //  output,   width = 1,               .waitrequest
		.timer_irq          (irq_mapper_001_receiver0_irq), //  output,   width = 1,      timer_irq.irq
		.sw_irq             (irq_mapper_002_receiver0_irq)  //  output,   width = 1,         sw_irq.irq
	);

	niosv_dm_top #(
		.DEBUG_RESET_EN (0),
		.FPU_EN         (0),
		.DEVICE_FAMILY  ("Agilex 7")
	) dbg_mod (
		.clk                (clk),                      //   input,   width = 1,           clk.clk
		.reset              (reset_reset),              //   input,   width = 1,         reset.reset
		.hart_write         (dm_agent_write),           //   input,   width = 1,      dm_agent.write
		.hart_writedata     (dm_agent_writedata),       //   input,  width = 32,              .writedata
		.hart_address       (dm_agent_address),         //   input,  width = 16,              .address
		.hart_read          (dm_agent_read),            //   input,   width = 1,              .read
		.hart_readdata      (dm_agent_readdata),        //  output,  width = 32,              .readdata
		.hart_readdatavalid (dm_agent_readdatavalid),   //  output,   width = 1,              .readdatavalid
		.hart_waitrequest   (dm_agent_waitrequest),     //  output,   width = 1,              .waitrequest
		.dbg_irq            (irq_mapper_receiver0_irq), //  output,   width = 1,       dbg_irq.irq
		.dbg_reset          ()                          //  output,   width = 1, dbg_reset_out.reset
	);

	qsys_top_intel_niosv_m_0_altera_irq_mapper_2001_3jqx4ly irq_mapper (
		.clk           (clk),                      //   input,  width = 1,       clk.clk
		.reset         (reset_reset),              //   input,  width = 1, clk_reset.reset
		.receiver0_irq (irq_mapper_receiver0_irq), //   input,  width = 1, receiver0.irq
		.sender_irq    (hart_debug_irq_rx_irq)     //  output,  width = 1,    sender.irq
	);

	qsys_top_intel_niosv_m_0_altera_irq_mapper_2001_3jqx4ly irq_mapper_001 (
		.clk           (clk),                          //   input,  width = 1,       clk.clk
		.reset         (reset_reset),                  //   input,  width = 1, clk_reset.reset
		.receiver0_irq (irq_mapper_001_receiver0_irq), //   input,  width = 1, receiver0.irq
		.sender_irq    (hart_timer_irq_rx_irq)         //  output,  width = 1,    sender.irq
	);

	qsys_top_intel_niosv_m_0_altera_irq_mapper_2001_3jqx4ly irq_mapper_002 (
		.clk           (clk),                          //   input,  width = 1,       clk.clk
		.reset         (reset_reset),                  //   input,  width = 1, clk_reset.reset
		.receiver0_irq (irq_mapper_002_receiver0_irq), //   input,  width = 1, receiver0.irq
		.sender_irq    (hart_sw_irq_rx_irq)            //  output,  width = 1,    sender.irq
	);

endmodule
